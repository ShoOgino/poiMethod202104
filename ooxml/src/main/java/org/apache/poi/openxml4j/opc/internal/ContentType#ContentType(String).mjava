	/**
	 * Constructor. Check the input with the RFC 2616 grammar.
	 *
	 * @param contentType
	 *            The content type to store.
	 * @throws InvalidFormatException
	 *             If the specified content type is not valid with RFC 2616.
	 */
	public ContentType(String contentType) throws InvalidFormatException {
		Matcher mMediaType = patternTypeSubType.matcher(contentType);
		if (!mMediaType.matches()) {
			// How about with parameters?
			mMediaType = patternTypeSubTypeParams.matcher(contentType);
		}
		if (!mMediaType.matches()) {
			throw new InvalidFormatException(
					"The specified content type '"
					+ contentType
					+ "' is not compliant with RFC 2616: malformed content type.");
		}

		// Type/subtype
		if (mMediaType.groupCount() >= 2) {
			this.type = mMediaType.group(1);
			this.subType = mMediaType.group(2);

			// Parameters
			this.parameters = new HashMap<>();
			// Java RegExps are unhelpful, and won't do multiple group captures
			// See http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#cg
			if (mMediaType.groupCount() >= 5) {
				Matcher mParams = patternParams.matcher(contentType.substring(mMediaType.end(2)));
				while (mParams.find()) {
					this.parameters.put(mParams.group(1), mParams.group(2));
				}
			}
		} else {
			// missing media type and subtype
			this.type = "";
			this.subType = "";
			this.parameters = Collections.emptyMap();
		}
	}

