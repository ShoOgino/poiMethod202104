    /**
     * Convert a string value represented a date into a Optional<Date>.
     *
     * @throws InvalidFormatException
     *             Throws if the date format isnot valid.
     */
    private Optional<Date> setDateValue(String dateStr) throws InvalidFormatException {
        if (dateStr == null || dateStr.isEmpty()) {
            return Optional.empty();
        }

        Matcher m = TIME_ZONE_PAT.matcher(dateStr);
        Date d = null;
        if (m.find()) {
            String dateTzStr = dateStr.substring(0, m.start())+m.group(1)+m.group(2);
            d = parseDateFormat(TZ_DATE_FORMATS, dateTzStr);
        }
        if (d == null) {
            String dateTzStr = dateStr.endsWith("Z") ? dateStr : (dateStr + "Z");
            d = parseDateFormat(DATE_FORMATS, dateTzStr);
        }
        if (d != null) {
            return Optional.of(d);
        }

        //if you're here, no pattern matched, throw exception
        String allFormats = Stream.of(TZ_DATE_FORMATS, DATE_FORMATS)
            .flatMap(Stream::of).collect(Collectors.joining(", "));
        throw new InvalidFormatException("Date " + dateStr + " not well formatted, expected format in: "+ allFormats);
    }

