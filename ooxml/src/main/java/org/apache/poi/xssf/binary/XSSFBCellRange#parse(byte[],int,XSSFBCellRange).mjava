    /**
     * Parses an RfX cell range from the data starting at the offset.
     * This performs no range checking.
     * @param data raw bytes
     * @param offset offset at which to start reading from data
     * @param cellRange to overwrite. If null, a new cellRange will be created.
     * @return a mutable cell range.
     */
    public static XSSFBCellRange parse(byte[] data, int offset, XSSFBCellRange cellRange) {
        if (cellRange == null) {
            cellRange = new XSSFBCellRange();
        }
        cellRange.firstRow = XSSFBUtils.castToInt(LittleEndian.getUInt(data, offset)); offset += LittleEndianConsts.INT_SIZE;
        cellRange.lastRow = XSSFBUtils.castToInt(LittleEndian.getUInt(data, offset)); offset += LittleEndianConsts.INT_SIZE;
        cellRange.firstCol = XSSFBUtils.castToInt(LittleEndian.getUInt(data, offset)); offset += LittleEndianConsts.INT_SIZE;
        cellRange.lastCol = XSSFBUtils.castToInt(LittleEndian.getUInt(data, offset));

        return cellRange;
    }

