    /**
     * Find the 2D base data area for the pivot table, either from its direct reference or named table/range.
     * @return AreaReference representing the current area defined by the pivot table
     * @throws IllegalArgumentException if the ref attribute is not contiguous or the name attribute is not found.
     */
    @Beta
    public AreaReference getPivotArea(Workbook wb) throws IllegalArgumentException {
        final CTWorksheetSource wsSource = ctPivotCacheDefinition.getCacheSource().getWorksheetSource();
        
        final String ref = wsSource.getRef();
        final String name = wsSource.getName();
        
        if (ref == null && name == null) {
            throw new IllegalArgumentException("Pivot cache must reference an area, named range, or table.");
        }
        
        // this is the XML format, so tell the reference that.
        if (ref != null) {
            return new AreaReference(ref, SpreadsheetVersion.EXCEL2007);
        }
        
        assert (name != null);
        
        // named range or table?
        final Name range = wb.getName(name);
        if (range != null) {
            return new AreaReference(range.getRefersToFormula(), SpreadsheetVersion.EXCEL2007);
        }
        
        // not a named range, check for a table.
        // do this second, as tables are sheet-specific, but named ranges are not, and may not have a sheet name given.
        final XSSFSheet sheet = (XSSFSheet) wb.getSheet(wsSource.getSheet());
        for (XSSFTable table : sheet.getTables()) {
            // TODO: case-sensitive?
            if (name.equals(table.getName())) {
                return new AreaReference(table.getStartCellReference(), table.getEndCellReference(),
                        SpreadsheetVersion.EXCEL2007);
            }
        }
        
        throw new IllegalArgumentException("Name '" + name + "' was not found.");
    }

