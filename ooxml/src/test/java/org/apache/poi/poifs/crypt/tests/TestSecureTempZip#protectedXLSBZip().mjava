    /**
     * Now try with xlsb.
     */
    @Test
    void protectedXLSBZip() throws IOException, GeneralSecurityException, XmlException, OpenXML4JException {
        //The test file requires that JCE unlimited be installed.
        //If it isn't installed, skip this test.
        int maxKeyLen = Cipher.getMaxAllowedKeyLength("AES");
        assumeTrue(maxKeyLen == 0x7FFFFFFF, "Please install JCE Unlimited Strength Jurisdiction Policy files for AES 256");

        File tikaProt = XSSFTestDataSamples.getSampleFile("protected_passtika.xlsb");
        FileInputStream fis = new FileInputStream(tikaProt);
        POIFSFileSystem poifs = new POIFSFileSystem(fis);
        EncryptionInfo ei = new EncryptionInfo(poifs);
        Decryptor dec = ei.getDecryptor();
        boolean passOk = dec.verifyPassword("tika");
        assertTrue(passOk);

        // extract encrypted ooxml file and write to custom encrypted zip file
        InputStream is = dec.getDataStream(poifs);

        // provide ZipEntrySource to poi which decrypts on the fly
        ZipEntrySource source = AesZipFileZipEntrySource.createZipEntrySource(is);

        // test the source
        OPCPackage opc = OPCPackage.open(source);
        String expected = "You can't see me";

        XSSFBEventBasedExcelExtractor extractor = new XSSFBEventBasedExcelExtractor(opc);
        extractor.setIncludeSheetNames(false);
        String txt = extractor.getText();
        assertEquals(expected, txt.trim());

        extractor.close();
        opc.close();
        poifs.close();
        fis.close();
    }

