    @Test
	void deletePart() throws InvalidFormatException, IOException {
		final TreeMap<PackagePartName, String> expectedValues = new TreeMap<>();
		final TreeMap<PackagePartName, String> values = new TreeMap<>();

		// Expected values
		expectedValues.put(createPartName("/_rels/.rels"), ContentTypes.RELATIONSHIPS_PART);
		expectedValues.put(createPartName("/docProps/app.xml"), CONTENT_EXT_PROPS);
		expectedValues.put(createPartName("/docProps/core.xml"), ContentTypes.CORE_PROPERTIES_PART);
		expectedValues.put(createPartName("/word/fontTable.xml"), XWPFRelation.FONT_TABLE.getContentType());
		expectedValues.put(createPartName("/word/media/image1.gif"), XWPFRelation.IMAGE_GIF.getContentType());
		expectedValues.put(createPartName("/word/settings.xml"), XWPFRelation.SETTINGS.getContentType());
		expectedValues.put(createPartName("/word/styles.xml"), XWPFRelation.STYLES.getContentType());
		expectedValues.put(createPartName("/word/theme/theme1.xml"), XWPFRelation.THEME.getContentType());
		expectedValues.put(createPartName("/word/webSettings.xml"), XWPFRelation.WEB_SETTINGS.getContentType());

		String filepath = getSampleFileName("sample.docx");

        try (OPCPackage p = OPCPackage.open(filepath, PackageAccess.READ_WRITE)) {
        	try {
				// Remove the core part
				p.deletePart(createPartName("/word/document.xml"));

				for (PackagePart part : p.getParts()) {
					values.put(part.getPartName(), part.getContentType());
					LOG.atDebug().log(part.getPartName());
				}

				// Compare expected values with values return by the package
				for (PackagePartName partName : expectedValues.keySet()) {
					assertNotNull(values.get(partName));
					assertEquals(expectedValues.get(partName), values.get(partName));
				}
			} finally {
				// Don't save modifications
				p.revert();
			}
		}
	}

