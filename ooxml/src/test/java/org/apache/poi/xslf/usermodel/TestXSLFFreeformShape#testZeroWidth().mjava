    @Test
    void testZeroWidth() throws IOException {
        // see #61633
        try (XMLSlideShow ppt = new XMLSlideShow()) {
            XSLFSlide slide = ppt.createSlide();
            XSLFFreeformShape shape1 = slide.createFreeform();
            Path2D.Double path1 = new Path2D.Double(new Line2D.Double(100, 150, 100, 300));
            shape1.setPath(path1);
            shape1.setLineColor(Color.BLUE);
            shape1.setLineWidth(1);

            BufferedImage img = new BufferedImage(300, 300, BufferedImage.TYPE_INT_ARGB);
            Graphics2D graphics = img.createGraphics();
            try {
                // previously we used Mockito here, but since JDK 11 mocking the Graphics2D does
                // not work any longer
                Graphics2D graphicsMock = new SLGraphics(new XSLFGroupShape(CTGroupShape.Factory.newInstance(), slide)) {
                    boolean called;

                    @Override
                    public void draw(Shape shape) {
                        if(called) {
                            throw new IllegalStateException("Should only be called once, but was called a second time");
                        }
                        called = true;

                        if(!(shape instanceof Path2D.Double)) {
                            throw new IllegalStateException("Expecting a shape of type Path2D.Double, but had " + shape.getClass());
                        }

                        Path2D.Double actual = (Path2D.Double) shape;
                        PathIterator pi = actual.getPathIterator(new AffineTransform());
                        comparePoint(pi, PathIterator.SEG_MOVETO, 100, 150);
                        pi.next();
                        comparePoint(pi, PathIterator.SEG_LINETO, 100, 300);

                        super.draw(shape);
                    }
                };
                slide.draw(graphicsMock);
            } finally {
                graphics.dispose();
            }
        }
    }

