	@Override
    public void execute() throws BuildException {
        checkClassPath();

		int totalCount = 0 ;
		int successCount = 0 ;

		StringBuilder versionBffr = new StringBuilder() ;
		versionBffr.append(  "ExcelAnt version " ) ;
		versionBffr.append( VERSION ) ;
		versionBffr.append( " Copyright 2011" ) ;
		SimpleDateFormat sdf = new SimpleDateFormat( "yyyy", Locale.ROOT ) ;
		double currYear = Double.parseDouble( sdf.format( new Date() ) );
		if( currYear > 2011 ) {
		    versionBffr.append( "-" ) ;
		    versionBffr.append( currYear ) ;
		}
		log( versionBffr.toString(), Project.MSG_INFO ) ;

		log( "Using input file: " + excelFileName, Project.MSG_INFO ) ;

        workbookUtil = ExcelAntWorkbookUtilFactory.getInstance(excelFileName);

		for (ExcelAntTest test : tests) {
			log("executing test: " + test.getName(), Project.MSG_DEBUG);

			if (workbookUtil == null) {
			    workbookUtil = ExcelAntWorkbookUtilFactory.getInstance(excelFileName);
			}

			for (ExcelAntUserDefinedFunction eaUdf : functions) {
				try {
					workbookUtil.addFunction(eaUdf.getFunctionAlias(), eaUdf.getClassName());
				} catch (Exception e) {
					throw new BuildException(e.getMessage(), e);
				}
			}
			test.setWorkbookUtil(workbookUtil);

			if (precision != null && precision.getValue() > 0) {
				log("setting precision for the test " + test.getName(), Project.MSG_VERBOSE);
				test.setPrecision(precision.getValue());
			}

			test.execute();

			if (test.didTestPass()) {
				successCount++;
			} else {
				if (failOnError) {
					throw new BuildException("Test " + test.getName() + " failed.");
				}
			}
			totalCount++;

			workbookUtil = null;
		}

		if( !tests.isEmpty() ) {
		    log( successCount + "/" + totalCount + " tests passed.", Project.MSG_INFO );
		}
        workbookUtil = null;
	}

