    /**
     * The method is called by POI's eventing API for each file in the origin POIFS.
     */
    private static void handleEvent(final POIFSFileSystem poiFs, final POIFSReaderEvent event) {
        // The following declarations are shortcuts for accessing the "event" object.
        final DocumentInputStream stream = event.getStream();

        try {
            final InputStreamSupplier isSup;

            // Find out whether the current document is a property set stream or not.
            if (PropertySet.isPropertySetStream(stream)) {
                // Yes, the current document is a property set stream. Let's create a PropertySet instance from it.
                PropertySet ps = PropertySetFactory.create(stream);

                // Now we know that we really have a property set.
                // The next step is to find out whether it is a summary information or not.
                if (ps.isSummaryInformation()) {
                    // Create a mutable property set as a copy of the original read-only property set.
                    ps = new PropertySet(ps);

                    // Retrieve the section containing the properties to modify.
                    // A summary information property set contains exactly one section.
                    final Section s = ps.getSections().get(0);

                    // Set the properties.
                    s.setProperty(PropertyIDMap.PID_AUTHOR, Variant.VT_LPSTR, "Rainer Klute");
                    s.setProperty(PropertyIDMap.PID_TITLE, Variant.VT_LPWSTR, "Test");
                }

                isSup = ps::toInputStream;
            } else {
                // No, the current document is not a property set stream. We copy it unmodified to the destination POIFS.
                isSup = event::getStream;
            }

            try (InputStream is = isSup.get()) {
                final POIFSDocumentPath path = event.getPath();

                // Ensures that the directory hierarchy for a document in a POI fileystem is in place.
                // Get the root directory. It does not have to be created since it always exists in a POIFS.
                DirectoryEntry de = poiFs.getRoot();

                for (int i=0; i<path.length(); i++) {
                    String subDir = path.getComponent(i);
                    de = (de.hasEntry(subDir)) ? (DirectoryEntry)de.getEntry(subDir) : de.createDirectory(subDir);
                }

                de.createDocument(event.getName(), is);
            }

        } catch (MarkUnsupportedException | WritingNotSupportedException | IOException | NoPropertySetStreamException ex) {
            // According to the definition of the processPOIFSReaderEvent method we cannot pass checked
            // exceptions to the caller.
            throw new HPSFRuntimeException("Could not read file " + event.getPath() + "/" + event.getName(), ex);
        }
    }

