    public BufferedImage getImage(Color foreground, Color background, boolean hasAlpha) {
        BufferedImage bi;
        try {
            bi = ImageIO.read(getBMPStream());
        } catch (IOException|RuntimeException e) {
            LOG.atError().log("invalid bitmap data - returning placeholder image");
            return getPlaceholder();
        }

        if (foreground != null && background != null && headerBitCount == BitCount.BI_BITCOUNT_1) {
            IndexColorModel cmOld = (IndexColorModel)bi.getColorModel();
            int fg = foreground.getRGB();
            int bg = background.getRGB() & (hasAlpha ? 0xFFFFFF : 0xFFFFFFFF);
            boolean ordered = (cmOld.getRGB(0) & 0xFFFFFF) == (bg & 0xFFFFFF);
            int transPixel = ordered ? 0 : 1;
            int[] cmap = ordered ? new int[]{ bg, fg } : new int[]{ fg, bg };
            int transferType = bi.getData().getTransferType();

            IndexColorModel cmNew = new IndexColorModel(1, 2, cmap, 0, hasAlpha, transPixel, transferType);
            bi = new BufferedImage(cmNew, bi.getRaster(), false, null);
        }

        return bi;
    }

