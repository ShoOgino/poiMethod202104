    public String fillDecoder( String size, String type )
    {

        String result = "";

        if ( type.equals( "short[]" ) )
            result = "LittleEndian.getShortArray( data, 0x"
                    + Integer.toHexString( offset ) + " + offset, " + size
                    + " )";
        else if ( type.equals( "byte[]" ) )
            result = "LittleEndian.getByteArray( data, 0x"
                    + Integer.toHexString( offset ) + " + offset," + size
                    + " )";
        else if ( type.equals( "BorderCode" ) )
            result = "new BorderCode( data, 0x" + Integer.toHexString( offset )
                    + " + offset )";
        else if ( type.equals( "Colorref" ) )
            result = "new Colorref( data, 0x" + Integer.toHexString( offset )
                    + " + offset )";
        else if ( type.equals( "DateAndTime" ) )
            result = "new DateAndTime( data, 0x" + Integer.toHexString( offset )
                    + " + offset )";
        else if ( type.equals( "Grfhic" ) )
            result = "new Grfhic( data, 0x" + Integer.toHexString( offset )
                    + " + offset )";
        else if ( size.equals( "2" ) )
            result = "LittleEndian.getShort( data, 0x"
                    + Integer.toHexString( offset ) + " + offset )";
        else if ( size.equals( "4" ) )
            if ( type.equals( "long" ) )
            {
                result = "LittleEndian.getUInt( data, 0x"
                        + Integer.toHexString( offset ) + " + offset )";
            }
            else
            {
                result = "LittleEndian.getInt( data, 0x"
                        + Integer.toHexString( offset ) + " + offset )";
            }
        else if ( size.equals( "1" ) )
            if ( type.equals( "short" ) )
            {
                result = "LittleEndian.getUByte( data, 0x"
                        + Integer.toHexString( offset ) + " + offset )";
            }
            else if ( type.equals( "int" ) || type.equals( "long" ) )
            {
                result = "LittleEndian.getUnsignedByte( data, 0x"
                        + Integer.toHexString( offset ) + " + offset )";
            }
            else
            {
                result = "data[ 0x" + Integer.toHexString( offset )
                        + " + offset ]";
            }
        else if ( type.equals( "double" ) )
            result = "LittleEndian.getDouble(data, 0x"
                    + Integer.toHexString( offset ) + " + offset )";

        try
        {
            offset += Integer.parseInt( size );
        }
        catch ( NumberFormatException ignore )
        {
        }
        return result;
    }

