    @Override
    protected void outputCharacters( Element pElement,
            CharacterRun characterRun, String text )
    {
        Element span = htmlDocumentFacade.getDocument().createElement( "span" );
        pElement.appendChild( span );

        StringBuilder style = new StringBuilder();
        BlockProperies blockProperies = this.blocksProperies.peek();
        Triplet triplet = getCharacterRunTriplet( characterRun );

        if ( AbstractWordUtils.isNotEmpty( triplet.fontName )
                && !Objects.equals( triplet.fontName,
                        blockProperies.pFontName ) )
        {
            style.append("font-family:").append(triplet.fontName).append(";");
        }
        if ( characterRun.getFontSize() / 2 != blockProperies.pFontSize )
        {
            style.append("font-size:").append(characterRun.getFontSize() / 2).append("pt;");
        }
        if ( triplet.bold )
        {
            style.append( "font-weight:bold;" );
        }
        if ( triplet.italic )
        {
            style.append( "font-style:italic;" );
        }

        WordToHtmlUtils.addCharactersProperties( characterRun, style );
        if ( style.length() != 0 ) {
            htmlDocumentFacade.addStyleClass( span, "s", style.toString() );
        }

        Text textNode = htmlDocumentFacade.createText( text );
        span.appendChild( textNode );
    }

