    public String toString()
    {
        StringBuilder builder = new StringBuilder();
        builder.append("[DOP]\n");
        builder.append("    .formatFlags          = ");
        builder.append(" (").append(getFormatFlags()).append(" )\n");
        builder.append("         .fFacingPages             = ").append(isFFacingPages()).append('\n');
        builder.append("         .fWidowControl            = ").append(isFWidowControl()).append('\n');
        builder.append("         .fPMHMainDoc              = ").append(isFPMHMainDoc()).append('\n');
        builder.append("         .grfSupression            = ").append(getGrfSupression()).append('\n');
        builder.append("         .fpc                      = ").append(getFpc()).append('\n');
        builder.append("         .unused1                  = ").append(isUnused1()).append('\n');
        builder.append("    .unused2              = ");
        builder.append(" (").append(getUnused2()).append(" )\n");
        builder.append("    .footnoteInfo         = ");
        builder.append(" (").append(getFootnoteInfo()).append(" )\n");
        builder.append("         .rncFtn                   = ").append(getRncFtn()).append('\n');
        builder.append("         .nFtn                     = ").append(getNFtn()).append('\n');
        builder.append("    .fOutlineDirtySave    = ");
        builder.append(" (").append(getFOutlineDirtySave()).append(" )\n");
        builder.append("    .docinfo              = ");
        builder.append(" (").append(getDocinfo()).append(" )\n");
        builder.append("         .fOnlyMacPics             = ").append(isFOnlyMacPics()).append('\n');
        builder.append("         .fOnlyWinPics             = ").append(isFOnlyWinPics()).append('\n');
        builder.append("         .fLabelDoc                = ").append(isFLabelDoc()).append('\n');
        builder.append("         .fHyphCapitals            = ").append(isFHyphCapitals()).append('\n');
        builder.append("         .fAutoHyphen              = ").append(isFAutoHyphen()).append('\n');
        builder.append("         .fFormNoFields            = ").append(isFFormNoFields()).append('\n');
        builder.append("         .fLinkStyles              = ").append(isFLinkStyles()).append('\n');
        builder.append("         .fRevMarking              = ").append(isFRevMarking()).append('\n');
        builder.append("    .docinfo1             = ");
        builder.append(" (").append(getDocinfo1()).append(" )\n");
        builder.append("         .fBackup                  = ").append(isFBackup()).append('\n');
        builder.append("         .fExactCWords             = ").append(isFExactCWords()).append('\n');
        builder.append("         .fPagHidden               = ").append(isFPagHidden()).append('\n');
        builder.append("         .fPagResults              = ").append(isFPagResults()).append('\n');
        builder.append("         .fLockAtn                 = ").append(isFLockAtn()).append('\n');
        builder.append("         .fMirrorMargins           = ").append(isFMirrorMargins()).append('\n');
        builder.append("         .unused3                  = ").append(isUnused3()).append('\n');
        builder.append("         .fDfltTrueType            = ").append(isFDfltTrueType()).append('\n');
        builder.append("    .docinfo2             = ");
        builder.append(" (").append(getDocinfo2()).append(" )\n");
        builder.append("         .fPagSupressTopSpacing     = ").append(isFPagSupressTopSpacing()).append('\n');
        builder.append("         .fProtEnabled             = ").append(isFProtEnabled()).append('\n');
        builder.append("         .fDispFormFldSel          = ").append(isFDispFormFldSel()).append('\n');
        builder.append("         .fRMView                  = ").append(isFRMView()).append('\n');
        builder.append("         .fRMPrint                 = ").append(isFRMPrint()).append('\n');
        builder.append("         .unused4                  = ").append(isUnused4()).append('\n');
        builder.append("         .fLockRev                 = ").append(isFLockRev()).append('\n');
        builder.append("         .fEmbedFonts              = ").append(isFEmbedFonts()).append('\n');
        builder.append("    .docinfo3             = ");
        builder.append(" (").append(getDocinfo3()).append(" )\n");
        builder.append("         .oldfNoTabForInd          = ").append(isOldfNoTabForInd()).append('\n');
        builder.append("         .oldfNoSpaceRaiseLower     = ").append(isOldfNoSpaceRaiseLower()).append('\n');
        builder.append("         .oldfSuppressSpbfAfterPageBreak     = ").append(isOldfSuppressSpbfAfterPageBreak()).append('\n');
        builder.append("         .oldfWrapTrailSpaces      = ").append(isOldfWrapTrailSpaces()).append('\n');
        builder.append("         .oldfMapPrintTextColor     = ").append(isOldfMapPrintTextColor()).append('\n');
        builder.append("         .oldfNoColumnBalance      = ").append(isOldfNoColumnBalance()).append('\n');
        builder.append("         .oldfConvMailMergeEsc     = ").append(isOldfConvMailMergeEsc()).append('\n');
        builder.append("         .oldfSupressTopSpacing     = ").append(isOldfSupressTopSpacing()).append('\n');
        builder.append("         .oldfOrigWordTableRules     = ").append(isOldfOrigWordTableRules()).append('\n');
        builder.append("         .oldfTransparentMetafiles     = ").append(isOldfTransparentMetafiles()).append('\n');
        builder.append("         .oldfShowBreaksInFrames     = ").append(isOldfShowBreaksInFrames()).append('\n');
        builder.append("         .oldfSwapBordersFacingPgs     = ").append(isOldfSwapBordersFacingPgs()).append('\n');
        builder.append("         .unused5                  = ").append(getUnused5()).append('\n');
        builder.append("    .dxaTab               = ");
        builder.append(" (").append(getDxaTab()).append(" )\n");
        builder.append("    .wSpare               = ");
        builder.append(" (").append(getWSpare()).append(" )\n");
        builder.append("    .dxaHotz              = ");
        builder.append(" (").append(getDxaHotz()).append(" )\n");
        builder.append("    .cConsexHypLim        = ");
        builder.append(" (").append(getCConsexHypLim()).append(" )\n");
        builder.append("    .wSpare2              = ");
        builder.append(" (").append(getWSpare2()).append(" )\n");
        builder.append("    .dttmCreated          = ");
        builder.append(" (").append(getDttmCreated()).append(" )\n");
        builder.append("    .dttmRevised          = ");
        builder.append(" (").append(getDttmRevised()).append(" )\n");
        builder.append("    .dttmLastPrint        = ");
        builder.append(" (").append(getDttmLastPrint()).append(" )\n");
        builder.append("    .nRevision            = ");
        builder.append(" (").append(getNRevision()).append(" )\n");
        builder.append("    .tmEdited             = ");
        builder.append(" (").append(getTmEdited()).append(" )\n");
        builder.append("    .cWords               = ");
        builder.append(" (").append(getCWords()).append(" )\n");
        builder.append("    .cCh                  = ");
        builder.append(" (").append(getCCh()).append(" )\n");
        builder.append("    .cPg                  = ");
        builder.append(" (").append(getCPg()).append(" )\n");
        builder.append("    .cParas               = ");
        builder.append(" (").append(getCParas()).append(" )\n");
        builder.append("    .Edn                  = ");
        builder.append(" (").append(getEdn()).append(" )\n");
        builder.append("         .rncEdn                   = ").append(getRncEdn()).append('\n');
        builder.append("         .nEdn                     = ").append(getNEdn()).append('\n');
        builder.append("    .Edn1                 = ");
        builder.append(" (").append(getEdn1()).append(" )\n");
        builder.append("         .epc                      = ").append(getEpc()).append('\n');
        builder.append("         .nfcFtnRef1               = ").append(getNfcFtnRef1()).append('\n');
        builder.append("         .nfcEdnRef1               = ").append(getNfcEdnRef1()).append('\n');
        builder.append("         .fPrintFormData           = ").append(isFPrintFormData()).append('\n');
        builder.append("         .fSaveFormData            = ").append(isFSaveFormData()).append('\n');
        builder.append("         .fShadeFormData           = ").append(isFShadeFormData()).append('\n');
        builder.append("         .fWCFtnEdn                = ").append(isFWCFtnEdn()).append('\n');
        builder.append("    .cLines               = ");
        builder.append(" (").append(getCLines()).append(" )\n");
        builder.append("    .cWordsFtnEnd         = ");
        builder.append(" (").append(getCWordsFtnEnd()).append(" )\n");
        builder.append("    .cChFtnEdn            = ");
        builder.append(" (").append(getCChFtnEdn()).append(" )\n");
        builder.append("    .cPgFtnEdn            = ");
        builder.append(" (").append(getCPgFtnEdn()).append(" )\n");
        builder.append("    .cParasFtnEdn         = ");
        builder.append(" (").append(getCParasFtnEdn()).append(" )\n");
        builder.append("    .cLinesFtnEdn         = ");
        builder.append(" (").append(getCLinesFtnEdn()).append(" )\n");
        builder.append("    .lKeyProtDoc          = ");
        builder.append(" (").append(getLKeyProtDoc()).append(" )\n");
        builder.append("    .view                 = ");
        builder.append(" (").append(getView()).append(" )\n");
        builder.append("         .wvkSaved                 = ").append(getWvkSaved()).append('\n');
        builder.append("         .wScaleSaved              = ").append(getWScaleSaved()).append('\n');
        builder.append("         .zkSaved                  = ").append(getZkSaved()).append('\n');
        builder.append("         .fRotateFontW6            = ").append(isFRotateFontW6()).append('\n');
        builder.append("         .iGutterPos               = ").append(isIGutterPos()).append('\n');
        builder.append("    .docinfo4             = ");
        builder.append(" (").append(getDocinfo4()).append(" )\n");
        builder.append("         .fNoTabForInd             = ").append(isFNoTabForInd()).append('\n');
        builder.append("         .fNoSpaceRaiseLower       = ").append(isFNoSpaceRaiseLower()).append('\n');
        builder.append("         .fSupressSpdfAfterPageBreak     = ").append(isFSupressSpdfAfterPageBreak()).append('\n');
        builder.append("         .fWrapTrailSpaces         = ").append(isFWrapTrailSpaces()).append('\n');
        builder.append("         .fMapPrintTextColor       = ").append(isFMapPrintTextColor()).append('\n');
        builder.append("         .fNoColumnBalance         = ").append(isFNoColumnBalance()).append('\n');
        builder.append("         .fConvMailMergeEsc        = ").append(isFConvMailMergeEsc()).append('\n');
        builder.append("         .fSupressTopSpacing       = ").append(isFSupressTopSpacing()).append('\n');
        builder.append("         .fOrigWordTableRules      = ").append(isFOrigWordTableRules()).append('\n');
        builder.append("         .fTransparentMetafiles     = ").append(isFTransparentMetafiles()).append('\n');
        builder.append("         .fShowBreaksInFrames      = ").append(isFShowBreaksInFrames()).append('\n');
        builder.append("         .fSwapBordersFacingPgs     = ").append(isFSwapBordersFacingPgs()).append('\n');
        builder.append("         .fSuppressTopSPacingMac5     = ").append(isFSuppressTopSPacingMac5()).append('\n');
        builder.append("         .fTruncDxaExpand          = ").append(isFTruncDxaExpand()).append('\n');
        builder.append("         .fPrintBodyBeforeHdr      = ").append(isFPrintBodyBeforeHdr()).append('\n');
        builder.append("         .fNoLeading               = ").append(isFNoLeading()).append('\n');
        builder.append("         .fMWSmallCaps             = ").append(isFMWSmallCaps()).append('\n');
        builder.append("    .adt                  = ");
        builder.append(" (").append(getAdt()).append(" )\n");
        builder.append("    .doptypography        = ");
        builder.append(" (").append(Arrays.toString(getDoptypography())).append(" )\n");
        builder.append("    .dogrid               = ");
        builder.append(" (").append(Arrays.toString(getDogrid())).append(" )\n");
        builder.append("    .docinfo5             = ");
        builder.append(" (").append(getDocinfo5()).append(" )\n");
        builder.append("         .lvl                      = ").append(getLvl()).append('\n');
        builder.append("         .fGramAllDone             = ").append(isFGramAllDone()).append('\n');
        builder.append("         .fGramAllClean            = ").append(isFGramAllClean()).append('\n');
        builder.append("         .fSubsetFonts             = ").append(isFSubsetFonts()).append('\n');
        builder.append("         .fHideLastVersion         = ").append(isFHideLastVersion()).append('\n');
        builder.append("         .fHtmlDoc                 = ").append(isFHtmlDoc()).append('\n');
        builder.append("         .fSnapBorder              = ").append(isFSnapBorder()).append('\n');
        builder.append("         .fIncludeHeader           = ").append(isFIncludeHeader()).append('\n');
        builder.append("         .fIncludeFooter           = ").append(isFIncludeFooter()).append('\n');
        builder.append("         .fForcePageSizePag        = ").append(isFForcePageSizePag()).append('\n');
        builder.append("         .fMinFontSizePag          = ").append(isFMinFontSizePag()).append('\n');
        builder.append("    .docinfo6             = ");
        builder.append(" (").append(getDocinfo6()).append(" )\n");
        builder.append("         .fHaveVersions            = ").append(isFHaveVersions()).append('\n');
        builder.append("         .fAutoVersions            = ").append(isFAutoVersions()).append('\n');
        builder.append("    .asumyi               = ");
        builder.append(" (").append(Arrays.toString(getAsumyi())).append(" )\n");
        builder.append("    .cChWS                = ");
        builder.append(" (").append(getCChWS()).append(" )\n");
        builder.append("    .cChWSFtnEdn          = ");
        builder.append(" (").append(getCChWSFtnEdn()).append(" )\n");
        builder.append("    .grfDocEvents         = ");
        builder.append(" (").append(getGrfDocEvents()).append(" )\n");
        builder.append("    .virusinfo            = ");
        builder.append(" (").append(getVirusinfo()).append(" )\n");
        builder.append("         .fVirusPrompted           = ").append(isFVirusPrompted()).append('\n');
        builder.append("         .fVirusLoadSafe           = ").append(isFVirusLoadSafe()).append('\n');
        builder.append("         .KeyVirusSession30        = ").append(getKeyVirusSession30()).append('\n');
        builder.append("    .Spare                = ");
        builder.append(" (").append(Arrays.toString(getSpare())).append(" )\n");
        builder.append("    .reserved1            = ");
        builder.append(" (").append(getReserved1()).append(" )\n");
        builder.append("    .reserved2            = ");
        builder.append(" (").append(getReserved2()).append(" )\n");
        builder.append("    .cDBC                 = ");
        builder.append(" (").append(getCDBC()).append(" )\n");
        builder.append("    .cDBCFtnEdn           = ");
        builder.append(" (").append(getCDBCFtnEdn()).append(" )\n");
        builder.append("    .reserved             = ");
        builder.append(" (").append(getReserved()).append(" )\n");
        builder.append("    .nfcFtnRef            = ");
        builder.append(" (").append(getNfcFtnRef()).append(" )\n");
        builder.append("    .nfcEdnRef            = ");
        builder.append(" (").append(getNfcEdnRef()).append(" )\n");
        builder.append("    .hpsZoonFontPag       = ");
        builder.append(" (").append(getHpsZoonFontPag()).append(" )\n");
        builder.append("    .dywDispPag           = ");
        builder.append(" (").append(getDywDispPag()).append(" )\n");

        builder.append("[/DOP]\n");
        return builder.toString();
    }

