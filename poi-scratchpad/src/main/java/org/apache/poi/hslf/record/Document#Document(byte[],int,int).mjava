	/**
	 * Set things up, and find our more interesting children
	 */
	/* package */ Document(byte[] source, int start, int len) {
		// Grab the header
		_header = Arrays.copyOfRange(source, start, start+8);

		// Find our children
		_children = Record.findChildRecords(source,start+8,len-8);

		// Our first one should be a document atom
		if(! (_children[0] instanceof DocumentAtom)) {
			throw new IllegalStateException("The first child of a Document must be a DocumentAtom");
		}
		documentAtom = (DocumentAtom)_children[0];

		// Find how many SlideListWithTexts we have
		// Also, grab the Environment and PPDrawing records
		//  on our way past
		int slwtcount = 0;
		for(int i=1; i<_children.length; i++) {
			if(_children[i] instanceof SlideListWithText) {
				slwtcount++;
			}
			if(_children[i] instanceof Environment) {
				environment = (Environment)_children[i];
			}
			if(_children[i] instanceof PPDrawingGroup) {
				ppDrawing = (PPDrawingGroup)_children[i];
			}
			if(_children[i] instanceof ExObjList) {
				exObjList = (ExObjList)_children[i];
			}
		}

		// You should only every have 1, 2 or 3 SLWTs
		//  (normally it's 2, or 3 if you have notes)
		// Complain if it's not
		if(slwtcount == 0) {
			LOG.atWarn().log("No SlideListWithText's found - there should normally be at least one!");
		}
		if(slwtcount > 3) {
			LOG.atWarn().log("Found {} SlideListWithTexts - normally there should only be three!", box(slwtcount));
		}

		// Now grab all the SLWTs
		slwts = new SlideListWithText[slwtcount];
		slwtcount = 0;
		for(int i=1; i<_children.length; i++) {
			if(_children[i] instanceof SlideListWithText) {
				slwts[slwtcount] = (SlideListWithText)_children[i];
				slwtcount++;
			}
		}
	}

