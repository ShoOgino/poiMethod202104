    public void walkTree(int depth, int pos, Record[] records, int indent) throws IOException {
        String ind = tabs.substring(0, indent);

        for (org.apache.poi.hslf.record.Record r : records) {
            if (r == null) {
                ps.println(ind + "At position " + pos + " (" + makeHex(pos, 6) + "):");
                ps.println(ind + "Warning! Null record found.");
                continue;
            }

            // Figure out how big it is
            int len = getDiskLen(r);

            // Grab the type as hex
            String hexType = makeHex((int) r.getRecordType(), 4);
            String rHexType = reverseHex(hexType);

            // Grab the hslf.record type
            Class<? extends Record> c = r.getClass();
            String cname = c.toString();
            if (cname.startsWith("class ")) {
                cname = cname.substring(6);
            }
            if (cname.startsWith("org.apache.poi.hslf.record.")) {
                cname = cname.substring(27);
            }

            // Display the record
            ps.println(ind + "At position " + pos + " (" + makeHex(pos, 6) + "):");
            ps.println(ind + " Record is of type " + cname);
            ps.println(ind + " Type is " + r.getRecordType() + " (" + hexType + " -> " + rHexType + " )");
            ps.println(ind + " Len is " + (len - 8) + " (" + makeHex((len - 8), 8) + "), on disk len is " + len);

            // print additional information for drawings and atoms
            if (optEscher && cname.equals("PPDrawing")) {
                DefaultEscherRecordFactory factory = new HSLFEscherRecordFactory();

                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                r.writeOut(baos);
                byte[] b = baos.toByteArray();

                EscherRecord er = factory.createRecord(b, 0);
                er.fillFields(b, 0, factory);

                printEscherRecord(er, indent + 1);

            } else if (optVerbose && r.getChildRecords() == null) {
                String recData = getPrintableRecordContents(r);
                ps.println(ind + recData);
            }

            ps.println();

            // If it has children, show them
            if (r.getChildRecords() != null) {
                walkTree((depth + 3), pos + 8, r.getChildRecords(), indent + 1);
            }

            // Wind on the position marker
            pos += len;
        }
  }

