    @Override
    protected Paint getLinearGradient() {
        HemfDrawProperties prop = getProperties();
        Rectangle2D rect = prop.getBrushRect();
        List<? extends Map.Entry<Float, Color>> colorsH = prop.getBrushColorsH();
        assert(rect != null && colorsH != null);

        // TODO: handle ColorsV list with a custom GradientPaint
        // for an idea on how to handle 2d-gradients google "bilinear color interpolation".
        // basically use two linear interpolations for x/y or vertical/horizontal axis.
        // the resulting two colors need to be interpolated by 50%.

        return new LinearGradientPaint(
            new Point2D.Double(rect.getMinX(),rect.getCenterY()),
            new Point2D.Double(rect.getMaxX(),rect.getCenterY()),
            toArray(colorsH.stream().map(Map.Entry::getKey), colorsH.size()),
            colorsH.stream().map(Map.Entry::getValue).toArray(Color[]::new),
            MultipleGradientPaint.CycleMethod.NO_CYCLE,
            MultipleGradientPaint.ColorSpaceType.SRGB,
            prop.getBrushTransform()
        );
    }

