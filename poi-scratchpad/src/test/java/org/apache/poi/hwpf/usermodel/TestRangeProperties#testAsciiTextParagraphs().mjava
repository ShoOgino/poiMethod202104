    @Test
    void testAsciiTextParagraphs() {
        Range r = a.getRange();
        assertEquals(
                a_page_1 +
                page_break + "\r" +
                a_page_2,
                r.text()
        );

        assertEquals(1, r.numSections());
        assertEquals(1, a.getSectionTable().getSections().size());
        Section s = r.getSection(0);
        assertEquals(
                a_page_1 +
                page_break + "\r" +
                a_page_2,
                s.text()
        );

        // no PAP reconstruction
        // assertEquals( 7, r.numParagraphs() );
        // with PAP reconstructon
        assertEquals( 8, r.numParagraphs() );

        String[] p1_parts = a_page_1.split("\r");
        String[] p2_parts = a_page_2.split("\r");

        // Check paragraph contents
        assertEquals(
                p1_parts[0] + "\r",
                r.getParagraph(0).text()
        );
        assertEquals(
                p1_parts[1] + "\r",
                r.getParagraph(1).text()
        );
        assertEquals(
                p1_parts[2] + "\r",
                r.getParagraph(2).text()
        );

        // no PAPX reconstruction
        // assertEquals( page_break + "\r", r.getParagraph( 3 ).text() );
        // assertEquals( p2_parts[0] + "\r", r.getParagraph( 4 ).text() );
        // assertEquals( p2_parts[1] + "\r", r.getParagraph( 5 ).text() );
        // assertEquals( p2_parts[2] + "\r", r.getParagraph( 6 ).text() );

        // with PAPX reconstruction
        assertEquals( "" + page_break, r.getParagraph( 3 ).text() );
        assertEquals( "\r", r.getParagraph( 4 ).text() );
        assertEquals( p2_parts[0] + "\r", r.getParagraph( 5 ).text() );
        assertEquals( p2_parts[1] + "\r", r.getParagraph( 6 ).text() );
        assertEquals( p2_parts[2] + "\r", r.getParagraph( 7 ).text() );
    }

