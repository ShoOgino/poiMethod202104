    /**
     * Check that we can correctly decode the whole file
     * TODO Fix what looks like a padding issue
     */
    @Test
    void testFull() throws Exception {
        final HMEFMessage msg;
        try (InputStream is = _samples.openResourceAsStream("quick-winmail.dat")) {
            msg = new HMEFMessage(is);
        }

       MAPIAttribute attr = msg.getMessageMAPIAttribute(MAPIProperty.RTF_COMPRESSED);
       assertNotNull(attr);
       MAPIRtfAttribute rtfAttr = (MAPIRtfAttribute)attr;

        final byte[] expected;
        try (InputStream stream = _samples.openResourceAsStream("quick-contents/message.rtf")) {
            expected = IOUtils.toByteArray(stream);
        }

        CompressedRTF comp = new CompressedRTF();
        byte[] data = rtfAttr.getRawData();
        byte[] decomp = comp.decompress(new ByteArrayInputStream(data));

        // Check the length was as expected
        assertEquals(data.length, comp.getCompressedSize() + 16);
        assertEquals(expected.length, comp.getDeCompressedSize());

        // Will have been padded though
        assertEquals(expected.length + 2, decomp.length);

        // By byte
        assertArrayEquals(expected, Arrays.copyOf(decomp, expected.length));

        // By String
        String expString = new String(expected, StandardCharsets.US_ASCII);
        String decompStr = rtfAttr.getDataString();
        assertEquals(expString, decompStr);
    }

