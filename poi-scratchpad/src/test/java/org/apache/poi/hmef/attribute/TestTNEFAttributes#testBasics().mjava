    /**
     * Test the basics
     */
    @Test
    void testBasics() throws Exception {
        // An int one
        assertEquals(
                0x010000,
                LittleEndian.getInt(quick.getMessageAttribute(TNEFProperty.ID_TNEFVERSION).getData())
        );

        // Claims not to be text, but really is
        assertEquals(
                "IPM.Microsoft Mail.Note\0",
            new String(quick.getMessageAttribute(TNEFProperty.ID_MESSAGECLASS).getData(), StandardCharsets.US_ASCII)
        );

        // Try constructing two attributes
        byte[] data = new byte[]{
                // Level one, id 36870, type 8
                0x01, 0x06, (byte) 0x90, 0x08, 0x00,
                // Length 4
                0x04, 0x00, 0x00, 0x00,
                // Data
                0x00, 0x00, 0x01, 0x00,
                // Checksum
                0x01, 0x00,

                // level one, id 36871, type 6
                0x01, 0x07, (byte) 0x90, 0x06, 0x00,
                // Length 8
                0x08, 0x00, 0x00, 0x00,
                // Data
                (byte) 0xe4, 0x04, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                // Checksum
                (byte) 0xe8, 0x00
        };
        ByteArrayInputStream bais = new ByteArrayInputStream(data);

        // Create them
        int level = bais.read();
        assertEquals(1, level);
        TNEFAttribute attr1 = TNEFAttribute.create(bais);

        level = bais.read();
        assertEquals(1, level);
        TNEFAttribute attr2 = TNEFAttribute.create(bais);

        assertEquals(-1, bais.read());

        // Check them
        assertEquals(TNEFProperty.ID_TNEFVERSION, attr1.getProperty());
        assertEquals(8, attr1.getType());
        assertEquals(4, attr1.getData().length);
        assertEquals(0x010000, LittleEndian.getInt(attr1.getData()));

        assertEquals(TNEFProperty.ID_OEMCODEPAGE, attr2.getProperty());
        assertEquals(6, attr2.getType());
        assertEquals(8, attr2.getData().length);
        assertEquals(0x04e4, LittleEndian.getInt(attr2.getData()));
    }

