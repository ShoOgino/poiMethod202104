    @Test
	void testChangeWriteRead() throws IOException {
		for(HSLFSlideShow h : new HSLFSlideShow[] { ss, ssRichA, ssRichB }) {
			// Change
			HSLFSlide slideOne = h.getSlides().get(0);
			List<List<HSLFTextParagraph>> textParass = slideOne.getTextParagraphs();
			HSLFTextRun rtr = textParass.get(0).get(0).getTextRuns().get(0);

			rtr.setBold(true);
			rtr.setFontSize(18d);
			rtr.setFontFamily("Courier");
            HSLFTextParagraph.storeText(textParass.get(0));

			// Check it took those
			assertTrue(rtr.isBold());
			assertNotNull(rtr.getFontSize());
			assertEquals(18., rtr.getFontSize(), 0);
			assertEquals("Courier", rtr.getFontFamily());

			// Write out and back in
			HSLFSlideShow readS = HSLFTestDataSamples.writeOutAndReadBack(h);

			// Tweak existing one again, to ensure really worked
			rtr.setBold(false);
			rtr.setFontSize(17d);
			rtr.setFontFamily("CourierZZ");

			// Check it took those changes
			assertFalse(rtr.isBold());
			assertEquals(17., rtr.getFontSize(), 0);
			assertEquals("CourierZZ", rtr.getFontFamily());


			// Now, look at the one we changed, wrote out, and read back in
			// Ensure it does contain our original modifications
			HSLFSlide slideOneRR = readS.getSlides().get(0);
			List<List<HSLFTextParagraph>> textParassRR = slideOneRR.getTextParagraphs();
			HSLFTextRun rtrRRa = textParassRR.get(0).get(0).getTextRuns().get(0);

			assertTrue(rtrRRa.isBold());
			assertNotNull(rtrRRa.getFontSize());
			assertEquals(18., rtrRRa.getFontSize(), 0);
			assertEquals("Courier", rtrRRa.getFontFamily());
			readS.close();
		}
	}

