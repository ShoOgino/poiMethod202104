	/**
	 * Write out our header, and our children.
	 * @param headerA the first byte of the header
	 * @param headerB the second byte of the header
	 * @param type the record type
	 * @param children our child records
	 * @param out the stream to write to
	 */
	public void writeOut(byte headerA, byte headerB, long type, Record[] children, OutputStream out) throws IOException {
		// Create a ByteArrayOutputStream to hold everything in
		ByteArrayOutputStream baos = new ByteArrayOutputStream();

		// Write out our header, less the size
		baos.write(new byte[] {headerA,headerB});
		byte[] typeB = new byte[2];
		LittleEndian.putShort(typeB,0,(short)type);
		baos.write(typeB);
		baos.write(new byte[] {0,0,0,0});

		// Write out our children
		for (Record aChildren : children) {
			aChildren.writeOut(baos);
		}

		// Grab the bytes back
		byte[] toWrite = baos.toByteArray();

		// Update our header with the size
		// Don't forget to knock 8 more off, since we don't include the
		//  header in the size
		LittleEndian.putInt(toWrite,4,(toWrite.length-8));

		// Write out the bytes
		out.write(toWrite);
	}

