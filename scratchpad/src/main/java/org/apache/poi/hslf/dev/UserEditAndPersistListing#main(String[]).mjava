	public static void main(String[] args) throws IOException {
		if(args.length < 1) {
			System.err.println("Need to give a filename");
			System.exit(1);
		}

		// Create the slideshow object, for normal working with
		try (HSLFSlideShowImpl ss = new HSLFSlideShowImpl(args[0])) {
			fileContents = ss.getUnderlyingBytes();
			System.out.println();

			// Find any persist ones first
			int pos = 0;
			for (org.apache.poi.hslf.record.Record r : ss.getRecords()) {
				if (r.getRecordType() == 6001L) {
					// PersistPtrFullBlock
					System.out.println("Found PersistPtrFullBlock at " + pos + " (" + Integer.toHexString(pos) + ")");
				}
				if (r.getRecordType() == 6002L) {
					// PersistPtrIncrementalBlock
					System.out.println("Found PersistPtrIncrementalBlock at " + pos + " (" + Integer.toHexString(pos) + ")");
					PersistPtrHolder pph = (PersistPtrHolder) r;

					// Check the sheet offsets
					Map<Integer, Integer> sheetOffsets = pph.getSlideLocationsLookup();
					for (int id : pph.getKnownSlideIDs()) {
						Integer offset = sheetOffsets.get(id);

						System.out.println("  Knows about sheet " + id);
						System.out.println("    That sheet lives at " + offset);

						Record atPos = findRecordAtPos(offset.intValue());
						System.out.println("    The record at that pos is of type " + atPos.getRecordType());
						System.out.println("    The record at that pos has class " + atPos.getClass().getName());

						if (!(atPos instanceof PositionDependentRecord)) {
							System.out.println("    ** The record class isn't position aware! **");
						}
					}
				}

				// Increase the position by the on disk size
				ByteArrayOutputStream baos = new ByteArrayOutputStream();
				r.writeOut(baos);
				pos += baos.size();
			}

			System.out.println();

			pos = 0;
			// Now look for UserEditAtoms
			for (org.apache.poi.hslf.record.Record r : ss.getRecords()) {
				if (r instanceof UserEditAtom) {
					UserEditAtom uea = (UserEditAtom) r;
					System.out.println("Found UserEditAtom at " + pos + " (" + Integer.toHexString(pos) + ")");
					System.out.println("  lastUserEditAtomOffset = " + uea.getLastUserEditAtomOffset());
					System.out.println("  persistPointersOffset  = " + uea.getPersistPointersOffset());
					System.out.println("  docPersistRef          = " + uea.getDocPersistRef());
					System.out.println("  maxPersistWritten      = " + uea.getMaxPersistWritten());
				}

				// Increase the position by the on disk size
				ByteArrayOutputStream baos = new ByteArrayOutputStream();
				r.writeOut(baos);
				pos += baos.size();
			}

			System.out.println();


			// Query the CurrentUserAtom
			CurrentUserAtom cua = ss.getCurrentUserAtom();
			System.out.println("Checking Current User Atom");
			System.out.println("  Thinks the CurrentEditOffset is " + cua.getCurrentEditOffset());

			System.out.println();
		}
	}

