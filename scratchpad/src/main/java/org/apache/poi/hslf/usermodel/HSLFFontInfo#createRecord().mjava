    public FontEntityAtom createRecord() {
        assert(fontEntityAtom == null);

        FontEntityAtom fnt = new FontEntityAtom();
        fontEntityAtom = fnt;

        fnt.setFontIndex(getIndex() << 4);
        fnt.setFontName(getTypeface());
        fnt.setCharSet(getCharset().getNativeId());
        fnt.setFontFlags((byte)(isEmbedSubsetted() ? 1 : 0));

        int typeFlag;
        switch (renderType) {
        case device:
            typeFlag = FLAGS_RENDER_FONTTYPE.setValue(0, 1);
            break;
        case raster:
            typeFlag = FLAGS_RENDER_FONTTYPE.setValue(0, 2);
            break;
        default:
        case truetype:
            typeFlag = FLAGS_RENDER_FONTTYPE.setValue(0, 4);
            break;
        }
        typeFlag = FLAGS_NO_FONT_SUBSTITUTION.setBoolean(typeFlag, isFontSubstitutable());
        fnt.setFontType(typeFlag);
        
        fnt.setPitchAndFamily(FontPitch.getNativeId(pitch, family));
        return fnt;
    }

