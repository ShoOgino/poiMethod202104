    public static String getBulletText( NumberingState numberingState,
            HWPFList list, char level )
    {
        StringBuilder bulletBuffer = new StringBuilder();
        char[] xst = list.getNumberText( level ).toCharArray();
        for ( char element : xst )
        {
            if ( element < 9 )
            {
                int lsid = list.getLsid();
                final String key = lsid + "#" + ( (int) element );
                int num;

                if ( !list.isStartAtOverriden( element )
                        && numberingState.levels.containsKey( key ) )
                {
                    num = numberingState.levels.get( key );
                    if ( level == element )
                    {
                        num++;
                        numberingState.levels.put( key, num );
                    }
                }
                else
                {
                    num = list.getStartAt( element );
                    numberingState.levels.put( key, num );
                }

                if ( level == element )
                {
                    // cleaning states of nested levels to reset numbering
                    for ( int i = element + 1; i < 9; i++ )
                    {
                        final String childKey = lsid + "#" + i;
                        numberingState.levels.remove( childKey );
                    }
                }

                bulletBuffer.append( NumberFormatter.getNumber( num,
                        list.getNumberFormat( level ) ) );
            }
            else
            {
                bulletBuffer.append( element );
            }
        }

        byte follow = list.getTypeOfCharFollowingTheNumber( level );
        switch ( follow )
        {
        case 0:
            bulletBuffer.append( "\t" );
            break;
        case 1:
            bulletBuffer.append( " " );
            break;
        default:
            break;
        }

        return bulletBuffer.toString();
    }

