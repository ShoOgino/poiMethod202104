    protected byte[] toByteArray( CharIndexTranslator translator )
    {
        byte[] buf = new byte[512];
        int size = _chpxList.size();
        int grpprlOffset = 511;
        int offsetOffset = 0;
        int fcOffset = 0;

        // total size is currently the size of one FC
        int totalSize = FC_SIZE + 2;

        int index = 0;
        for ( ; index < size; index++ )
        {
            int grpprlLength = ( _chpxList.get( index ) ).getGrpprl().length;

            // check to see if we have enough room for an FC, the grpprl offset,
            // the grpprl size byte and the grpprl.
            totalSize += ( FC_SIZE + 2 + grpprlLength );
            // if size is uneven we will have to add one so the first grpprl
            // falls on a word boundary
            if ( totalSize > 511 + ( index % 2 ) )
            {
                totalSize -= ( FC_SIZE + 2 + grpprlLength );
                break;
            }

            // grpprls must fall on word boundaries
            if ( ( 1 + grpprlLength ) % 2 > 0 )
            {
                totalSize += 1;
            }
        }

        if (index == 0) {
            throw new RecordFormatException("empty grpprl entry.");
        }

        // see if we couldn't fit some
        if ( index != size )
        {
            _overFlow = new ArrayList<>();
            _overFlow.addAll( _chpxList.subList( index, size ) );
        }

        // index should equal number of CHPXs that will be in this fkp now.
        buf[511] = (byte) index;

        offsetOffset = ( FC_SIZE * index ) + FC_SIZE;
        // grpprlOffset = offsetOffset + index + (grpprlOffset % 2);

        int chpxEnd = 0;
        for ( CHPX chpx : _chpxList.subList(0, index)) {
            int chpxStart = translator.getByteIndex( chpx.getStart() );
            chpxEnd = translator.getByteIndex( chpx.getEnd() );
            LittleEndian.putInt( buf, fcOffset, chpxStart );

            byte[] grpprl = chpx.getGrpprl();
            grpprlOffset -= ( 1 + grpprl.length );
            grpprlOffset -= ( grpprlOffset % 2 );
            buf[offsetOffset] = (byte) ( grpprlOffset / 2 );
            buf[grpprlOffset] = (byte) grpprl.length;
            System.arraycopy( grpprl, 0, buf, grpprlOffset + 1, grpprl.length );

            offsetOffset += 1;
            fcOffset += FC_SIZE;
        }
        // put the last chpx's end in
        LittleEndian.putInt( buf, fcOffset, chpxEnd );
        return buf;
    }

