    /**
     * Takes a Display focused string, eg "Nick; Jim" and an iterator
     * of emails, and does its best to return something like
     * "Nick <nick@example.com>; Jim <jim@example.com>"
     */
    protected void handleEmails(StringBuilder s, String type, String displayText, Iterator<String> emails) {
        if (displayText == null || displayText.length() == 0) {
            return;
        }

        String[] names = displayText.split(";\\s*");
        boolean first = true;

        s.append(type).append(": ");
        for (String name : names) {
            if (first) {
                first = false;
            } else {
                s.append("; ");
            }

            s.append(name);
            if (emails.hasNext()) {
                String email = emails.next();
                // Append the email address in <>, assuming
                //  the name wasn't already the email address
                if (!email.equals(name)) {
                    s.append(" <").append(email).append(">");
                }
            }
        }
        s.append("\n");
    }

