        @Override
        public void applyObject(HemfGraphics ctx, List<? extends EmfPlusObjectData> continuedObjectData) {
            final HemfDrawProperties prop = ctx.getProperties();
            // TOOD:
            // - set width according unit type
            // - provide logic for different start and end cap
            // - provide standard caps like diamond
            // - support custom caps

            brush.applyPen(ctx, continuedObjectData);
            prop.setPenWidth(penWidth);

            HwmfLineCap cap;
            // ignore endCap for now
            switch(startCap) {
                default:
                case FLAT:
                    cap = HwmfLineCap.FLAT;
                    break;
                case ROUND:
                    cap = HwmfLineCap.ROUND;
                    break;
                case SQUARE:
                    cap = HwmfLineCap.SQUARE;
                    break;
            }

            HwmfLineJoin lineJoin;
            switch (this.lineJoin) {
                default:
                case BEVEL:
                    lineJoin = HwmfLineJoin.BEVEL;
                    break;
                case ROUND:
                    lineJoin = HwmfLineJoin.ROUND;
                    break;
                case MITER_CLIPPED:
                case MITER:
                    lineJoin = HwmfLineJoin.MITER;
                    break;
            }

            HwmfLineDash lineDash = (dashedLineData == null) ? HwmfLineDash.SOLID : HwmfLineDash.USERSTYLE;

            boolean isAlternate = (lineDash != HwmfLineDash.SOLID && dashOffset != null && dashOffset == 0);
            boolean isGeometric = (unitType == EmfPlusUnitType.World || unitType == EmfPlusUnitType.Display);
            HemfPenStyle penStyle = HemfPenStyle.valueOf(cap, lineJoin, lineDash, isAlternate, isGeometric);
            penStyle.setLineDashes(dashedLineData);

            prop.setPenStyle(penStyle);
        }

