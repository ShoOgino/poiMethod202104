	/**
	 * Creates the appropriate ChunkHeader for the Chunk Header at
	 *  the given location, for the given document version.
	 *
	 * @param documentVersion the documentVersion - 4 and higher is supported
	 * @param data the chunk data
	 * @param offset the start offset in the chunk data
	 * @return the ChunkHeader
	 */
	public static ChunkHeader createChunkHeader(int documentVersion, byte[] data, int offset) {
		if(documentVersion >= 6) {
			ChunkHeaderV6 ch;
			if(documentVersion > 6) {
				ch = new ChunkHeaderV11();
			} else {
				ch = new ChunkHeaderV6();
			}
			ch.setType((int)LittleEndian.getUInt(data, offset + 0));
			ch.setId((int)LittleEndian.getUInt(data, offset + 4));
			ch.setUnknown1((int)LittleEndian.getUInt(data, offset + 8));
			ch.setLength((int)LittleEndian.getUInt(data, offset + 12));
			ch.setUnknown2(LittleEndian.getShort(data, offset + 16));
			ch.setUnknown3(LittleEndian.getUByte(data, offset + 18));

			return ch;
		} else if(documentVersion == 5 || documentVersion == 4) {
			ChunkHeaderV4V5 ch = new ChunkHeaderV4V5();

			ch.setType(LittleEndian.getShort(data, offset + 0));
			ch.setId(LittleEndian.getShort(data, offset + 2));
			ch.setUnknown2(LittleEndian.getUByte(data, offset + 4));
			ch.setUnknown3(LittleEndian.getUByte(data, offset + 5));
			ch.setUnknown1(LittleEndian.getShort(data, offset + 6));
			ch.setLength(Math.toIntExact(LittleEndian.getUInt(data, offset + 8)));

			return ch;
		} else {
			throw new IllegalArgumentException("Visio files with versions below 4 are not supported, yours was " + documentVersion);
		}
	}

