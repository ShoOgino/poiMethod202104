		private Type12(String thingType, String bitType, byte[] data) {
			super(thingType, bitType, data);

            int cntPlcs = getNumberOfPLCs();
			
			// How many hyperlinks do we really have?
			// (zero hyperlinks gets numberOfPLCs=1)
            hyperlinks = new String[data.length == 0x34 ? 0 : cntPlcs];

			// We have 4 bytes, then the start point of each
			//  hyperlink, then the end point of the text.
            int[] preData = new int[1 + cntPlcs + 1];
			for(int i=0; i<preData.length; i++) {
				preData[i] = (int)LittleEndian.getUInt(data, 8+(i*4));
			}
			setPreData(preData);

			// Then we have a whole bunch of stuff, which grows
			//  with the number of hyperlinks
			// For now, we think these are shorts
			int at = 8+4+(cntPlcs*4)+4;
			int until = 0x34;
			if(cntPlcs == 1 && hyperlinks.length == 1) {
				until = oneStartsAt;
			} else if(cntPlcs >= 2) {
				until = twoStartsAt + (cntPlcs-2)*threePlusIncrement;
			}

            long[] plcValA = new long[(until - at) / 2];
            long[] plcValB = new long[0];
			for(int i=0; i<plcValA.length; i++) {
				plcValA[i] = LittleEndian.getUShort(data, at+(i*2));
			}
            setPlcValA(plcValA);
            setPlcValB(plcValB);

			// Finally, we have a series of lengths + hyperlinks
			at = until;
			for(int i=0; i<hyperlinks.length; i++) {
				int len = LittleEndian.getUShort(data, at);
				int first = LittleEndian.getUShort(data, at+2);
				if(first == 0) {
					// Crazy special case
					// Length is in bytes, from the start
					// Hyperlink appears to be empty
					hyperlinks[i] = "";
					at += len;
				} else {
					// Normal case. Length is in characters
					hyperlinks[i] = StringUtil.getFromUnicodeLE(data, at+2, len);
					at += 2 + (2*len);
				}
			}
		}

