    @Test
    void testCustomProperty() throws IOException {
        HMEFMessage msg = openSample("quick-winmail.dat");

        // Should have non-standard properties with IDs 0xE28 and 0xE29
        boolean hasE28 = false;
        boolean hasE29 = false;
        for (MAPIAttribute attr : msg.getMessageMAPIAttributes()) {
            if (attr.getProperty().id == 0xe28) hasE28 = true;
            if (attr.getProperty().id == 0xe29) hasE29 = true;
        }
        assertTrue(hasE28);
        assertTrue(hasE29);

        // Ensure we can fetch those as custom ones
        MAPIProperty propE28 = MAPIProperty.createCustom(0xe28, Types.ASCII_STRING, "Custom E28");
        MAPIProperty propE29 = MAPIProperty.createCustom(0xe29, Types.ASCII_STRING, "Custom E29");
        assertNotNull(msg.getMessageMAPIAttribute(propE28));
        assertNotNull(msg.getMessageMAPIAttribute(propE29));

        MAPIStringAttribute propE28b = (MAPIStringAttribute)msg.getMessageMAPIAttribute(propE28);
        assertNotNull(propE28b);
        assertEquals(MAPIStringAttribute.class, propE28b.getClass());
        assertEquals("Zimbra - Mark Rogers", propE28b.getDataString().substring(10));
    }

