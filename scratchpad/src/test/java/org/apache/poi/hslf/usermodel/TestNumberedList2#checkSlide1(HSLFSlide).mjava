	private void checkSlide1(final HSLFSlide s) {
		final StyleTextProp9Atom[] numberedListArray = s.getNumberedListInfo();
		assertNotNull(numberedListArray);
		assertEquals(1, numberedListArray.length);
		final StyleTextProp9Atom numberedListInfoForTextBox = numberedListArray[0];
		assertNotNull(numberedListInfoForTextBox);
		final TextPFException9[] autoNumbersOfTextBox = numberedListInfoForTextBox.getAutoNumberTypes();
		assertEquals(Short.valueOf((short)1), autoNumbersOfTextBox[0].getfBulletHasAutoNumber());
		assertEquals(Short.valueOf((short)1), autoNumbersOfTextBox[0].getAutoNumberStartNumber());//Default value = 1 will be used
        assertSame(AutoNumberingScheme.arabicPeriod, autoNumbersOfTextBox[0].getAutoNumberScheme());

		List<List<HSLFTextParagraph>> textParass = s.getTextParagraphs();
		assertEquals(3, textParass.size());

		List<HSLFTextParagraph> textParas = textParass.get(0);
		assertEquals("Bulleted list\rMore bullets", HSLFTextParagraph.getRawText(textParas));
		assertEquals(2, textParas.size());
		assertTrue(textParas.get(0).isBullet());

		String expected = "Numbered list between two bulleted lists\rSecond numbered list item";
		assertEquals(expected, HSLFTextParagraph.getRawText(textParass.get(1)));
		expected = "Second bulleted list \u2013 should appear after numbered list\rMore bullets";
		assertEquals(expected, HSLFTextParagraph.getRawText(textParass.get(2)));

		final EscherTextboxWrapper[] styleAtoms = s.getTextboxWrappers();
		assertEquals(textParass.size(), styleAtoms.length);
		checkSingleRunWrapper(27, styleAtoms[0]);
		checkSingleRunWrapper(67, styleAtoms[1]);
		checkSingleRunWrapper(70, styleAtoms[2]);
	}

