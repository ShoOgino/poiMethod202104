    /**
     * Add slides to ppt which already has two slides
     */
    @Test
    void testAddSlides2to3() throws Exception {
        POIDataSamples slTests = POIDataSamples.getSlideShowInstance();
        HSLFSlideShow ppt = new HSLFSlideShow(slTests.openResourceAsStream("basic_test_ppt_file.ppt"));

        assertEquals(2, ppt.getSlides().size());

        // First slide is 256 / 4
        HSLFSlide s1 = ppt.getSlides().get(0);
        assertEquals(256, s1._getSheetNumber());
        assertEquals(4, s1._getSheetRefId());

        // Last slide is 257 / 6
        HSLFSlide s2 = ppt.getSlides().get(1);
        assertEquals(257, s2._getSheetNumber());
        assertEquals(6, s2._getSheetRefId());

        // Add another slide, goes in at the end
        HSLFSlide s3 = ppt.createSlide();
        assertEquals(3, ppt.getSlides().size());
        assertEquals(258, s3._getSheetNumber());
        assertEquals(8, s3._getSheetRefId());


        // Serialize and read again
         ByteArrayOutputStream out = new ByteArrayOutputStream();
        ppt.write(out);
        out.close();

        ppt = new HSLFSlideShow(new HSLFSlideShowImpl(new ByteArrayInputStream(out.toByteArray())));
        assertEquals(3, ppt.getSlides().size());


        // Check IDs are still right
        s1 = ppt.getSlides().get(0);
        assertEquals(256, s1._getSheetNumber());
        assertEquals(4, s1._getSheetRefId());
        s2 = ppt.getSlides().get(1);
        assertEquals(257, s2._getSheetNumber());
        assertEquals(6, s2._getSheetRefId());
        s3 = ppt.getSlides().get(2);
        assertEquals(3, ppt.getSlides().size());
        assertEquals(258, s3._getSheetNumber());
        assertEquals(8, s3._getSheetRefId());
    }

