    @Test
    void testEnglish() {
        assertEquals( "a", NumberFormatter.getNumber( 1, 4 ) );
        assertEquals( "z", NumberFormatter.getNumber( 26, 4 ) );

        assertEquals( "aa", NumberFormatter.getNumber(  26 + 1, 4 ) );
        assertEquals( "az", NumberFormatter.getNumber(  26 + 26, 4 ) );

        assertEquals( "za", NumberFormatter.getNumber( 26 * 26 + 1, 4 ) );
        assertEquals( "zz", NumberFormatter.getNumber( 26 * 26 + 26, 4 ) );

        assertEquals( "aaa",
                NumberFormatter.getNumber( 26 * 26 + 26 + 1, 4 ) );
        assertEquals( "aaz",
                NumberFormatter.getNumber( 26 * 26 + 26 + 26, 4 ) );

        assertEquals( "aba",
                NumberFormatter.getNumber( 26 * 26 + 2 * 26 + 1, 4 ) );
        assertEquals( "aza",
                NumberFormatter.getNumber( 26 * 26 + 26 * 26 + 1, 4 ) );

        assertEquals( "azz",
                NumberFormatter.getNumber( 26 * 26 + 26 * 26 + 26, 4 ) );
        assertEquals( "baa",
                NumberFormatter.getNumber( 2 * 26 * 26 + 26 + 1, 4 ) );
        assertEquals( "zaa",
                NumberFormatter.getNumber( 26 * 26 * 26 + 26 + 1, 4 ) );
        assertEquals( "zzz",
                NumberFormatter.getNumber( 26 * 26 * 26 + 26 * 26 + 26, 4 ) );

        assertEquals(
                "aaaa",
                NumberFormatter.getNumber( 26 * 26 * 26 + 26 * 26 + 26 + 1, 4 ) );
        assertEquals(
                "azzz",
                NumberFormatter.getNumber( 26 * 26 * 26 + 26 * 26 * 26 + 26 * 26 + 26, 4 ) );
        assertEquals(
                "zzzz",
                NumberFormatter.getNumber( 26 * 26 * 26 * 26 + 26 * 26 * 26
                        + 26 * 26 + 26, 4 ) );

        for ( int i = 1; i < 1000000; i++ )
        {
            // make sure there is no exceptions
            NumberFormatter.getNumber( i, 4 );
        }
    }

