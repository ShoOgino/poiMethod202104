	private static void processFile(File effDocFile, File outFile) {
		if(!effDocFile.exists()) {
			throw new RuntimeException("file '" + effDocFile.getAbsolutePath() + "' does not exist");
		}
		OutputStream os;
		try {
			os = new FileOutputStream(outFile);
		} catch (FileNotFoundException e) {
			throw new RuntimeException(e);
		}
		os = new SimpleAsciiOutputStream(os);
		PrintStream ps;
		try {
			ps = new PrintStream(os, true, "UTF-8");
		} catch(UnsupportedEncodingException e) {
			throw new RuntimeException(e);
		}

		outputLicenseHeader(ps);
		Class<?> genClass = ExcelFileFormatDocFunctionExtractor.class;
		ps.println("# Created by (" + genClass.getName() + ")");
		// identify the source file
		ps.print("# from source file '" + SOURCE_DOC_FILE_NAME + "'");
		ps.println(" (size=" + effDocFile.length() + ", md5=" + getFileMD5(effDocFile) + ")");
		ps.println("#");
		ps.println("#Columns: (index, name, minParams, maxParams, returnClass, paramClasses, isVolatile, hasFootnote )");
		ps.println();
		try {
		    // can't use ZipHelper here, because its in a different module
			ZipFile zf = new ZipFile(effDocFile);
			InputStream is = zf.getInputStream(zf.getEntry("content.xml"));
			extractFunctionData(new FunctionDataCollector(ps), is);
			zf.close();
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		ps.close();

		String canonicalOutputFileName;
		try {
			canonicalOutputFileName = outFile.getCanonicalPath();
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		System.out.println("Successfully output to '" + canonicalOutputFileName + "'");
	}

