    /**
     * =ISNUMBER(SEARCH("AM",A1)) evaluation
     */
    @Test
    void stackoverflow26437323() throws IOException {
        try (Workbook wb = _testDataProvider.createWorkbook()) {
            Sheet s = wb.createSheet();
            Row r1 = s.createRow(0);
            Row r2 = s.createRow(1);

            // A1 is a number
            r1.createCell(0).setCellValue(1.1);
            // B1 is a string, with the wanted text in it
            r1.createCell(1).setCellValue("This is text with AM in it");
            // C1 is a string, with different text
            r1.createCell(2).setCellValue("This some other text");
            // D1 is a blank cell
            r1.createCell(3, CellType.BLANK);
            // E1 is null

            // A2 will hold our test formulas
            Cell cf = r2.createCell(0, CellType.FORMULA);


            // First up, check that TRUE and ISLOGICAL both behave
            cf.setCellFormula("TRUE()");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue());

            cf.setCellFormula("ISLOGICAL(TRUE())");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue());

            cf.setCellFormula("ISLOGICAL(4)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());


            // Now, check ISNUMBER / ISTEXT / ISNONTEXT
            cf.setCellFormula("ISNUMBER(A1)");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue());

            cf.setCellFormula("ISNUMBER(B1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISNUMBER(C1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISNUMBER(D1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISNUMBER(E1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());


            cf.setCellFormula("ISTEXT(A1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISTEXT(B1)");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue());

            cf.setCellFormula("ISTEXT(C1)");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue());

            cf.setCellFormula("ISTEXT(D1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISTEXT(E1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());


            cf.setCellFormula("ISNONTEXT(A1)");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue());

            cf.setCellFormula("ISNONTEXT(B1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISNONTEXT(C1)");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISNONTEXT(D1)");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue());

            cf.setCellFormula("ISNONTEXT(E1)");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue()); // Blank and Null the same


            // Next up, SEARCH on its own
            cf.setCellFormula("SEARCH(\"am\", A1)");
            cf = evaluateCell(wb, cf);
            assertEquals(FormulaError.VALUE.getCode(), cf.getErrorCellValue());

            cf.setCellFormula("SEARCH(\"am\", B1)");
            cf = evaluateCell(wb, cf);
            assertEquals(19, (int) cf.getNumericCellValue());

            cf.setCellFormula("SEARCH(\"am\", C1)");
            cf = evaluateCell(wb, cf);
            assertEquals(FormulaError.VALUE.getCode(), cf.getErrorCellValue());

            cf.setCellFormula("SEARCH(\"am\", D1)");
            cf = evaluateCell(wb, cf);
            assertEquals(FormulaError.VALUE.getCode(), cf.getErrorCellValue());


            // Finally, bring it all together
            cf.setCellFormula("ISNUMBER(SEARCH(\"am\", A1))");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISNUMBER(SEARCH(\"am\", B1))");
            cf = evaluateCell(wb, cf);
            assertTrue(cf.getBooleanCellValue());

            cf.setCellFormula("ISNUMBER(SEARCH(\"am\", C1))");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISNUMBER(SEARCH(\"am\", D1))");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

            cf.setCellFormula("ISNUMBER(SEARCH(\"am\", E1))");
            cf = evaluateCell(wb, cf);
            assertFalse(cf.getBooleanCellValue());

        }
    }

