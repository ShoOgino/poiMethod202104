    /**
     * CreateFreezePane column/row order check
     */
    @Test
    void bug49381() throws IOException {
       try (Workbook wb = _testDataProvider.createWorkbook()) {
           int colSplit = 1;
           int rowSplit = 2;
           int leftmostColumn = 3;
           int topRow = 4;

           Sheet s = wb.createSheet();

           // Populate
           for (int rn = 0; rn <= topRow; rn++) {
               Row r = s.createRow(rn);
               for (int cn = 0; cn < leftmostColumn; cn++) {
                   Cell c = r.createCell(cn, CellType.NUMERIC);
                   c.setCellValue(100 * rn + cn);
               }
           }

           // Create the Freeze Pane
           s.createFreezePane(colSplit, rowSplit, leftmostColumn, topRow);
           PaneInformation paneInfo = s.getPaneInformation();

           // Check it
           assertEquals(colSplit, paneInfo.getVerticalSplitPosition());
           assertEquals(rowSplit, paneInfo.getHorizontalSplitPosition());
           assertEquals(leftmostColumn, paneInfo.getVerticalSplitLeftColumn());
           assertEquals(topRow, paneInfo.getHorizontalSplitTopRow());


           // Now a row only freezepane
           s.createFreezePane(0, 3);
           paneInfo = s.getPaneInformation();

           assertEquals(0, paneInfo.getVerticalSplitPosition());
           assertEquals(3, paneInfo.getHorizontalSplitPosition());
           assertEquals(0, paneInfo.getVerticalSplitLeftColumn());
           assertEquals(3, paneInfo.getHorizontalSplitTopRow());

           // Now a column only freezepane
           s.createFreezePane(4, 0);
           paneInfo = s.getPaneInformation();

           assertEquals(4, paneInfo.getVerticalSplitPosition());
           assertEquals(0, paneInfo.getHorizontalSplitPosition());
           assertEquals(4, paneInfo.getVerticalSplitLeftColumn());
           assertEquals(0, paneInfo.getHorizontalSplitTopRow());
       }
    }

