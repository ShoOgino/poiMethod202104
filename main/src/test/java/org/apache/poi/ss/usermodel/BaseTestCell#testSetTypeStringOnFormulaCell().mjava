    /**
     * similar to {@link #testConvertStringFormulaCell()} but checks at a
     * lower level that {#link {@link Cell#setCellType(CellType)} works properly
     */
    @Test
    void testSetTypeStringOnFormulaCell() throws IOException {
        try (Workbook wb = _testDataProvider.createWorkbook()) {
            Cell cellA1 = createACell(wb);
            FormulaEvaluator fe = cellA1.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();

            cellA1.setCellFormula("\"DEF\"");
            fe.clearAllCachedResultValues();
            fe.evaluateFormulaCell(cellA1);
            assertEquals("DEF", cellA1.getStringCellValue());
            cellA1.setCellType(CellType.STRING);
            assertEquals("DEF", cellA1.getStringCellValue());

            cellA1.setCellFormula("25.061");
            fe.clearAllCachedResultValues();
            fe.evaluateFormulaCell(cellA1);
            confirmCannotReadString(cellA1);
            assertEquals(25.061, cellA1.getNumericCellValue(), 0.0);
            cellA1.setCellType(CellType.STRING);
            assertEquals("25.061", cellA1.getStringCellValue());

            cellA1.setCellFormula("TRUE");
            fe.clearAllCachedResultValues();
            fe.evaluateFormulaCell(cellA1);
            confirmCannotReadString(cellA1);
            assertTrue(cellA1.getBooleanCellValue());
            cellA1.setCellType(CellType.STRING);
            assertEquals("TRUE", cellA1.getStringCellValue());

            cellA1.setCellFormula("#NAME?");
            fe.clearAllCachedResultValues();
            fe.evaluateFormulaCell(cellA1);
            confirmCannotReadString(cellA1);
            assertEquals(FormulaError.NAME, forInt(cellA1.getErrorCellValue()));
            cellA1.setCellType(CellType.STRING);
            assertEquals("#NAME?", cellA1.getStringCellValue());
        }
    }

