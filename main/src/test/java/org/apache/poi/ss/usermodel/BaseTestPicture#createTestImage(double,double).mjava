    private static byte[] createTestImage(double width, double height) throws IOException {
        BufferedImage bi = new BufferedImage((int)width, (int)height, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g = bi.createGraphics();

        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);
        g.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);

        g.scale((width-1)/width, (height-1)/height);

        g.setStroke(new BasicStroke(1));

        double ellSize = 5/6d;
        Ellipse2D ell = new Ellipse2D.Double(width * (1-ellSize)/2d, height * (1-ellSize)/2d, width * ellSize, height * ellSize);
        Color[] colors = { Color.RED, Color.BLUE, Color.GREEN, Color.YELLOW };
        Rectangle2D rect = new Rectangle2D.Double();
        for (int i=0; i<4; i++) {
            rect.setRect(width/2 * (i&1),height/2 * (i>>1&1), width/2, height/2);
            Area a = new Area(rect);
            a.subtract(new Area(ell));
            g.setPaint(colors[i]);
            g.fill(a);
            g.setColor(java.awt.Color.BLACK);
            g.draw(rect);
        }
        g.draw(ell);

        g.dispose();
        ByteArrayOutputStream bos = new ByteArrayOutputStream(2000);
        ImageIO.write(bi, "PNG", bos);
        return bos.toByteArray();
    }

