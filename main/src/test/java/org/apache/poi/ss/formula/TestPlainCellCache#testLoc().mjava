    @Test
    void testLoc(){
        PlainCellCache cache = new PlainCellCache();
        for (int bookIndex = 0; bookIndex < 0x1000; bookIndex += 0x100) {
            for (int sheetIndex = 0; sheetIndex < 0x1000; sheetIndex += 0x100) {
                for (int rowIndex = 0; rowIndex < 0x100000; rowIndex += 0x1000) {
                    for (int columnIndex = 0; columnIndex < 0x4000; columnIndex += 0x100) {
                        Loc loc = new Loc(bookIndex, sheetIndex, rowIndex, columnIndex);
                        assertEquals(bookIndex, loc.getBookIndex());
                        assertEquals(sheetIndex, loc.getSheetIndex());
                        assertEquals(rowIndex, loc.getRowIndex());
                        assertEquals(columnIndex, loc.getColumnIndex());

                        Loc sameLoc = new Loc(bookIndex, sheetIndex, rowIndex, columnIndex);
                        assertEquals(loc.hashCode(), sameLoc.hashCode());
                        assertEquals(loc, sameLoc);

                        assertNull(cache.get(loc));
                        PlainValueCellCacheEntry entry = new PlainValueCellCacheEntry(new NumberEval(0));
                        cache.put(loc, entry);
                        assertSame(entry, cache.get(loc));
                        cache.remove(loc);
                        assertNull(cache.get(loc));

                        cache.put(loc, entry);
                    }
                    cache.clear();
                }
            }

        }
    }

