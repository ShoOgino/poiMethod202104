    private void testFontFormattingAccessors(FontFormatting fontFormatting) {
        // Check for defaults
        assertFalse(fontFormatting.isEscapementTypeModified());
        assertFalse(fontFormatting.isFontCancellationModified());
        assertFalse(fontFormatting.isFontOutlineModified());
        assertFalse(fontFormatting.isFontShadowModified());
        assertFalse(fontFormatting.isFontStyleModified());
        assertFalse(fontFormatting.isUnderlineTypeModified());
        assertFalse(fontFormatting.isFontWeightModified());

        assertFalse(fontFormatting.isBold());
        assertFalse(fontFormatting.isItalic());
        assertFalse(fontFormatting.isOutlineOn());
        assertFalse(fontFormatting.isShadowOn());
        assertFalse(fontFormatting.isStruckout());

        assertEquals(0, fontFormatting.getEscapementType());
        assertEquals(-1, fontFormatting.getFontColorIndex());
        assertEquals(-1, fontFormatting.getFontHeight());
        assertEquals(0, fontFormatting.getFontWeight());
        assertEquals(0, fontFormatting.getUnderlineType());

        fontFormatting.setBold(true);
        assertTrue(fontFormatting.isBold());
        fontFormatting.setBold(false);
        assertFalse(fontFormatting.isBold());

        fontFormatting.setEscapementType(org.apache.poi.ss.usermodel.Font.SS_SUB);
        assertEquals(org.apache.poi.ss.usermodel.Font.SS_SUB, fontFormatting.getEscapementType());
        fontFormatting.setEscapementType(org.apache.poi.ss.usermodel.Font.SS_SUPER);
        assertEquals(org.apache.poi.ss.usermodel.Font.SS_SUPER, fontFormatting.getEscapementType());
        fontFormatting.setEscapementType(org.apache.poi.ss.usermodel.Font.SS_NONE);
        assertEquals(org.apache.poi.ss.usermodel.Font.SS_NONE, fontFormatting.getEscapementType());

        fontFormatting.setEscapementTypeModified(false);
        assertFalse(fontFormatting.isEscapementTypeModified());
        fontFormatting.setEscapementTypeModified(true);
        assertTrue(fontFormatting.isEscapementTypeModified());

        fontFormatting.setFontWieghtModified(false);
        assertFalse(fontFormatting.isFontWeightModified());
        fontFormatting.setFontWieghtModified(true);
        assertTrue(fontFormatting.isFontWeightModified());

        fontFormatting.setFontCancellationModified(false);
        assertFalse(fontFormatting.isFontCancellationModified());
        fontFormatting.setFontCancellationModified(true);
        assertTrue(fontFormatting.isFontCancellationModified());

        fontFormatting.setFontColorIndex((short)10);
        assertEquals(10,fontFormatting.getFontColorIndex());

        fontFormatting.setFontHeight(100);
        assertEquals(100,fontFormatting.getFontHeight());

        fontFormatting.setFontOutlineModified(false);
        assertFalse(fontFormatting.isFontOutlineModified());
        fontFormatting.setFontOutlineModified(true);
        assertTrue(fontFormatting.isFontOutlineModified());

        fontFormatting.setFontShadowModified(false);
        assertFalse(fontFormatting.isFontShadowModified());
        fontFormatting.setFontShadowModified(true);
        assertTrue(fontFormatting.isFontShadowModified());

        fontFormatting.setFontStyleModified(false);
        assertFalse(fontFormatting.isFontStyleModified());
        fontFormatting.setFontStyleModified(true);
        assertTrue(fontFormatting.isFontStyleModified());

        fontFormatting.setItalic(false);
        assertFalse(fontFormatting.isItalic());
        fontFormatting.setItalic(true);
        assertTrue(fontFormatting.isItalic());

        fontFormatting.setOutline(false);
        assertFalse(fontFormatting.isOutlineOn());
        fontFormatting.setOutline(true);
        assertTrue(fontFormatting.isOutlineOn());

        fontFormatting.setShadow(false);
        assertFalse(fontFormatting.isShadowOn());
        fontFormatting.setShadow(true);
        assertTrue(fontFormatting.isShadowOn());

        fontFormatting.setStrikeout(false);
        assertFalse(fontFormatting.isStruckout());
        fontFormatting.setStrikeout(true);
        assertTrue(fontFormatting.isStruckout());

        fontFormatting.setUnderlineType(org.apache.poi.ss.usermodel.Font.U_DOUBLE_ACCOUNTING);
        assertEquals(org.apache.poi.ss.usermodel.Font.U_DOUBLE_ACCOUNTING, fontFormatting.getUnderlineType());

        fontFormatting.setUnderlineTypeModified(false);
        assertFalse(fontFormatting.isUnderlineTypeModified());
        fontFormatting.setUnderlineTypeModified(true);
        assertTrue(fontFormatting.isUnderlineTypeModified());
    }

