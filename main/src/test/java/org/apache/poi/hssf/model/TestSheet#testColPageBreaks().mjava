	/**
	 * Make sure column pag breaks works properly (in-memory)
	 *
	 */
    @Test
	void testColPageBreaks() {
		short rowFrom = 0;
		short rowTo = (short)65535;

		InternalSheet worksheet = InternalSheet.createSheet();
		PageSettingsBlock sheet = worksheet.getPageSettings();
		sheet.setColumnBreak((short)0, rowFrom, rowTo);

		assertTrue(sheet.isColumnBroken(0), "no col break at 0");
		assertEquals(1, sheet.getNumColumnBreaks(), "1 col break available");

		sheet.setColumnBreak((short)0, rowFrom, rowTo);

		assertTrue(sheet.isColumnBroken(0), "no col break at 0");
		assertEquals(1, sheet.getNumColumnBreaks(), "1 col break available");

		sheet.setColumnBreak((short)1, rowFrom, rowTo);
		sheet.setColumnBreak((short)10, rowFrom, rowTo);
		sheet.setColumnBreak((short)15, rowFrom, rowTo);

		assertTrue(sheet.isColumnBroken(1), "no col break at 1");
		assertTrue(sheet.isColumnBroken(10), "no col break at 10");
		assertTrue(sheet.isColumnBroken(15), "no col break at 15");
		assertEquals(4, sheet.getNumColumnBreaks(), "4 col break available");

		boolean is10 = false;
		boolean is0 = false;
		boolean is1 = false;
		boolean is15 = false;

		int[] colBreaks = sheet.getColumnBreaks();
		for (int main : colBreaks) {
			assertTrue(main == 0 || main == 1 || main == 10 || main == 15, "Invalid page break");
			if (main == 0)  is0 = true;
			if (main == 1)  is1 = true;
			if (main == 10) is10= true;
			if (main == 15) is15 = true;
		}

		assertTrue(is0 && is1 && is10 && is15, "one of the breaks didnt make it");

		sheet.removeColumnBreak(15);
		assertFalse(sheet.isColumnBroken(15), "column break should not be there");

		sheet.removeColumnBreak(0);
		assertFalse(sheet.isColumnBroken(0), "column break should not be there");

		sheet.removeColumnBreak(1);
		assertFalse(sheet.isColumnBroken(1), "column break should not be there");

		sheet.removeColumnBreak(10);
		assertFalse(sheet.isColumnBroken(10), "column break should not be there");

		assertEquals(0, sheet.getNumColumnBreaks(), "no more breaks");
	}

