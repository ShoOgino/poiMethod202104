    /**
     * All multi-binomial operator tests use this to create a worksheet with a
     * huge set of x operator y formulas.  Next we call binomialVerify and verify
     * that they are all how we expect.
     */
    private static void binomialOperator(String operator) throws IOException {
        try (HSSFWorkbook wb1 = new HSSFWorkbook()) {
            HSSFSheet s = wb1.createSheet();

            //get our minimum values
            HSSFRow r = s.createRow(0);
            HSSFCell c = r.createCell(1);
            c.setCellFormula(1 + operator + 1);

            for (int x = 1; x < Short.MAX_VALUE && x > 0; x = (short) (x * 2)) {
                r = s.createRow(x);

                for (int y = 1; y < 256 && y > 0; y++) {
                    c = r.createCell(y);
                    c.setCellFormula("" + x + operator + y);
                }
            }

            //make sure we do the maximum value of the Int operator
            if (s.getLastRowNum() < Short.MAX_VALUE) {
                r = s.getRow(0);
                c = r.createCell(0);
                c.setCellFormula("" + Short.MAX_VALUE + operator + Short.MAX_VALUE);
            }
            try (HSSFWorkbook wb2 = writeOutAndReadBack(wb1)) {
                binomialVerify(operator, wb2);
            }
        }
    }

