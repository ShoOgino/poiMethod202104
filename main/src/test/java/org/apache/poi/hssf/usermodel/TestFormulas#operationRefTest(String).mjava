    private static void operationRefTest(String operator) throws IOException {
        try (HSSFWorkbook wb1 = new HSSFWorkbook()) {
            HSSFSheet s = wb1.createSheet();

            //get our minimum values
            HSSFRow r = s.createRow(0);
            HSSFCell c = r.createCell(1);
            c.setCellFormula("A2" + operator + "A3");

            for (int x = 1; x < Short.MAX_VALUE && x > 0; x = (short) (x * 2)) {
                r = s.createRow(x);

                for (int y = 1; y < 256 && y > 0; y++) {
                    short refx1 = (short)(x + (x + 50 < Short.MAX_VALUE ? 50 : -4));
                    short refx2 = (short)(x + (x + 50 < Short.MAX_VALUE ? 46 : -3));
                    short refy1 = (short)(y + (y + 50 < 255 ? 50 : -4));
                    short refy2 = (short)(y + (y + 50 < 255 ? 49 : -3));

                    CellReference cr = new CellReference(refx1, refy1, false, false);
                    String ref = cr.formatAsString();
                    cr = new CellReference(refx2, refy2, false, false);
                    String ref2 = cr.formatAsString();

                    c = r.createCell(y);
                    c.setCellFormula("" + ref + operator + ref2);
                }
            }

            //make sure we do the maximum value of the Int operator
            if (s.getLastRowNum() < Short.MAX_VALUE) {
                r = s.getRow(0);
                c = r.createCell(0);
                c.setCellFormula("" + "B1" + operator + "IV255");
            }

            try (HSSFWorkbook wb2 = writeOutAndReadBack(wb1)) {
                operationalRefVerify(operator, wb2);
            }
        }
    }

