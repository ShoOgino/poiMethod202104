    private static byte[] checkValues(final int blockCountExp, POIFSDocument document, byte[] input) throws IOException {
        assertNotNull(document);
        assertNotNull(document.getDocumentProperty().getDocument());
        assertEquals(document, document.getDocumentProperty().getDocument());

        ByteArrayInputStream bis = new ByteArrayInputStream(input);

        int blockCountAct = 0, bytesRemaining = input.length;
        for (ByteBuffer bb : document) {
            assertTrue(bytesRemaining > 0);
            int bytesAct = Math.min(bb.remaining(), bytesRemaining);
            assertTrue(bytesAct <= document.getDocumentBlockSize());
            byte[] bufAct = new byte[bytesAct];
            bb.get(bufAct);

            byte[] bufExp = new byte[bytesAct];
            int bytesExp = bis.read(bufExp, 0, bytesAct);
            assertEquals(bytesExp, bytesAct);

            assertArrayEquals(bufExp, bufAct);
            blockCountAct++;
            bytesRemaining -= bytesAct;
        }

        assertEquals(blockCountExp, blockCountAct);

        ByteArrayOutputStream stream = new ByteArrayOutputStream();
        try (DocumentInputStream dis = document.getFileSystem().createDocumentInputStream(
                document.getDocumentProperty().getName())) {
            IOUtils.copy(dis, stream);
        }

        byte[] output = stream.toByteArray();
        assertArrayEquals(input, stream.toByteArray());
        return output;
    }

