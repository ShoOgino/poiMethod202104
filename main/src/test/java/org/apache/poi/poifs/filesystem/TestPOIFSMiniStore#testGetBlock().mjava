    /**
     * Check we get the right data back for each block
     */
    @Test
    void testGetBlock() throws Exception {
        // It's the same on 512 byte and 4096 byte block files!
        POIFSFileSystem fsA = new POIFSFileSystem(_inst.getFile("BlockSize512.zvi"));
        POIFSFileSystem fsB = new POIFSFileSystem(_inst.openResourceAsStream("BlockSize512.zvi"));
        POIFSFileSystem fsC = new POIFSFileSystem(_inst.getFile("BlockSize4096.zvi"));
        POIFSFileSystem fsD = new POIFSFileSystem(_inst.openResourceAsStream("BlockSize4096.zvi"));
        for (POIFSFileSystem fs : new POIFSFileSystem[]{fsA, fsB, fsC, fsD}) {
            // Mini stream should be at big block zero
            assertEquals(0, fs._get_property_table().getRoot().getStartBlock());

            // Grab the ministore
            POIFSMiniStore ministore = fs.getMiniStore();
            ByteBuffer b;

            // Runs from the start of the data section in 64 byte chungs
            b = ministore.getBlockAt(0);
            assertEquals((byte) 0x9e, b.get());
            assertEquals((byte) 0x75, b.get());
            assertEquals((byte) 0x97, b.get());
            assertEquals((byte) 0xf6, b.get());
            assertEquals((byte) 0xff, b.get());
            assertEquals((byte) 0x21, b.get());
            assertEquals((byte) 0xd2, b.get());
            assertEquals((byte) 0x11, b.get());

            // And the next block
            b = ministore.getBlockAt(1);
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x03, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x12, b.get());
            assertEquals((byte) 0x02, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x00, b.get());

            // Check the last data block
            b = ministore.getBlockAt(180);
            assertEquals((byte) 0x30, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x00, b.get());
            assertEquals((byte) 0x80, b.get());

            // And the rest until the end of the big block is zeros
            for (int i = 181; i < 184; i++) {
                b = ministore.getBlockAt(i);
                assertEquals((byte) 0, b.get());
                assertEquals((byte) 0, b.get());
                assertEquals((byte) 0, b.get());
                assertEquals((byte) 0, b.get());
                assertEquals((byte) 0, b.get());
                assertEquals((byte) 0, b.get());
                assertEquals((byte) 0, b.get());
                assertEquals((byte) 0, b.get());
            }
        }
        fsD.close();
        fsC.close();
        fsB.close();
        fsA.close();
    }

