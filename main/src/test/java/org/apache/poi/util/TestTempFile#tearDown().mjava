    @AfterEach
    void tearDown() throws IOException {
        if(tempDir != null) {
            String[] files = tempDir.list();
            assertNotNull(files);
            // can have the "poifiles" subdir
            if (files.length == 1) {
                assertEquals(DefaultTempFileCreationStrategy.POIFILES, files[0], "Had: " + Arrays.toString(files));
                files = new File(tempDir, files[0]).list();
                assertNotNull(files);
                assertEquals(0, files.length, "Had: " + Arrays.toString(files));
            } else {
                assertEquals(0, files.length, "Had: " + Arrays.toString(files));
            }

            // remove the directory after the tests
            TestPOIFSDump.deleteDirectory(tempDir);
        }

        if(previousTempDir == null) {
            System.clearProperty(TempFile.JAVA_IO_TMPDIR);
        } else {
            System.setProperty(TempFile.JAVA_IO_TMPDIR, previousTempDir);
        }

        // reset strategy to re-create the directory
        TempFile.setTempFileCreationStrategy(new DefaultTempFileCreationStrategy());

        // check that we can still create a tempfile
        File testFile = TempFile.createTempFile("test", ".tst");
        assertTrue(testFile.exists());
        assertTrue(testFile.delete());
    }

