    @Test
    void test52337() throws Exception {
        // document summary stream   from test1-excel.doc attached to Bugzilla 52337
        String documentSummaryEnc =
            "H4sIAAAAAAAAAG2RsUvDQBjFXxsraiuNKDoI8ZwclIJOjhYCGpQitINbzXChgTQtyQ3+Hw52cHB0E"+
            "kdHRxfBpeAf4H/g5KK+M59Firn8eNx3d+++x31+AZVSGdOfrZTHz+Prxrp7eTWH7Z2PO5+1ylTtrA"+
            "SskBrXKOiROhnavWREZskNWSK3ZI3ckyp5IC55JMvkiaySF7JIXlF4v0tPbzOAR1XE18MwM32dGjW"+
            "IVJAanaVhoppRFMZZDjjSgyO9WT10Cq1vVX/uh/Txn3pucc7m6fTiXPEPldG5Qc0t2vEkXic2iZ5c"+
            "JDkd8VFS3pcMBzIvS7buaeB3j06C1nF7krFJPRdz62M4rM7/8f3NtyE+LQyQoY8QCfbQwAU1l/UF0"+
            "ubraA6DXWzC5x7gG6xzLtsAAgAA";
        byte[] bytes = RawDataUtil.decompress(documentSummaryEnc);

        PropertySet ps = PropertySetFactory.create(new ByteArrayInputStream(bytes));
        DocumentSummaryInformation dsi = (DocumentSummaryInformation) ps;
        Section s = dsi.getSections().get(0);

        Object hdrs =  s.getProperty(PropertyIDMap.PID_HEADINGPAIR);
        assertNotNull(hdrs);
        assertEquals(byte[].class, hdrs.getClass());

        // parse the value
        Vector v = new Vector((short)Variant.VT_VARIANT);
        LittleEndianByteArrayInputStream lei = new LittleEndianByteArrayInputStream((byte[])hdrs, 0);
        v.read(lei);

        TypedPropertyValue[] items = v.getValues();
        assertEquals(2, items.length);

        Object cp = items[0].getValue();
        assertNotNull(cp);
        assertEquals(CodePageString.class, cp.getClass());
        Object i = items[1].getValue();
        assertNotNull(i);
        assertEquals(Integer.class, i.getClass());
        assertEquals(1, i);

    }

