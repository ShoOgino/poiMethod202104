    public AreaEval offset(int relFirstRowIx, int relLastRowIx,
            int relFirstColIx, int relLastColIx) {
        
        AreaI area = new OffsetArea(getFirstRow(), getFirstColumn(),
                relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);
        
        int height = area.getLastRow() - area.getFirstRow() + 1;
        int width = area.getLastColumn() - area.getFirstColumn() + 1;

        ValueEval[] newVals = new ValueEval[height * width];
        
        int startRow = area.getFirstRow() - getFirstRow();
        int startCol = area.getFirstColumn() - getFirstColumn();
        
        for (int j = 0; j < height; j++) {
            for (int i = 0; i < width; i++) {
                ValueEval temp;
                
                /* CacheAreaEval is only temporary value representation, does not equal sheet selection
                 * so any attempts going beyond the selection results in BlankEval
                 */
                if (startRow + j > getLastRow() || startCol + i > getLastColumn()) {
                    temp = BlankEval.instance;
                }
                else {
                    temp = _values[(startRow + j) * getWidth() + (startCol + i)];
                }
                newVals[j * width + i] = temp;     
            }
        }

        return new CacheAreaEval(area, newVals);
    }

