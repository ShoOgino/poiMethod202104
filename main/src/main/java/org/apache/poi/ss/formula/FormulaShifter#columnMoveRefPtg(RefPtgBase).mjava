    private Ptg columnMoveRefPtg(RefPtgBase rptg) {
        int refColumn = rptg.getColumn();
        if (_firstMovedIndex <= refColumn && refColumn <= _lastMovedIndex) {
            // Columns being moved completely enclose the ref.
            // - move the area ref along with the columns regardless of destination
            rptg.setColumn(refColumn + _amountToMove);
            return rptg;
        }
        // else rules for adjusting area may also depend on the destination of the moved columns

        int destFirstColumnIndex = _firstMovedIndex + _amountToMove;
        int destLastColumnIndex = _lastMovedIndex + _amountToMove;

        // ref is outside source columns
        // check for clashes with destination

        if (destLastColumnIndex < refColumn || refColumn < destFirstColumnIndex) {
            // destination columns are completely outside ref
            return null;
        }

        if (destFirstColumnIndex <= refColumn && refColumn <= destLastColumnIndex) {
            // destination columns enclose the area (possibly exactly)
            return createDeletedRef(rptg);
        }
        throw new IllegalStateException("Situation not covered: (" + _firstMovedIndex + ", " +
                _lastMovedIndex + ", " + _amountToMove + ", " + refColumn + ", " + refColumn + ")");
    }

