    /**
     * Builds sheet from parent workbook and 2D array with cell
     * values. Creates rows anyway (even if row contains only null
     * cells), creates cells if either corresponding array value is not
     * null or createEmptyCells property is true.
     * The conversion is performed in the following way:
     * <p>
     * <ul>
     * <li>Numbers become numeric cells.</li>
     * <li><code>java.util.Date</code> or <code>java.util.Calendar</code>
     * instances become date cells.</li>
     * <li>String with leading '=' char become formulas (leading '='
     * will be truncated).</li>
     * <li>Other objects become strings via <code>Object.toString()</code>
     * method call.</li>
     * </ul>
     *
     * @return newly created sheet
     */
    public Sheet build() {
        Sheet sheet = (sheetName == null) ? workbook.createSheet() : workbook.createSheet(sheetName);
        Row currentRow;
        Cell currentCell;

        for (int rowIndex = 0; rowIndex < cells.length; ++rowIndex) {
            Object[] rowArray = cells[rowIndex];
            currentRow = sheet.createRow(rowIndex);

            for (int cellIndex = 0; cellIndex < rowArray.length; ++cellIndex) {
                Object cellValue = rowArray[cellIndex];
                if (cellValue != null || shouldCreateEmptyCells) {
                    currentCell = currentRow.createCell(cellIndex);
                    setCellValue(currentCell, cellValue);
                }
            }
        }
        return sheet;
    }

