    /**
     * A range is returned only for the part of the table matching this enum instance and containing the given cell reference.
     * Null is returned for all other cases, such as:
     * <ul>
     * <li>Cell on a different sheet than the table
     * <li>Cell outside the table
     * <li>this Enum part is not included in the table (i.e. no header/totals row)
     * <li>this Enum is for a table part not yet implemented in POI, such as pivot table elements
     * </ul>
     * The returned range can be used to determine how style options may or may not apply to this cell.
     * For example, {@link #wholeTable} borders only apply to the outer boundary of a table, while the
     * rest of the styling, such as font and color, could apply to all the interior cells as well.
     * 
     * @param table table to evaluate
     * @param cell CellReference to evaluate 
     * @return range in the table representing this class of cells, if it contains the given cell, or null if not applicable.
     * Stripe style types return only the stripe range containing the given cell, or null.
     */
    public CellRangeAddressBase appliesTo(Table table, CellReference cell) {
        if (table == null || cell == null) return null;
        if ( ! cell.getSheetName().equals(table.getSheetName())) return null;
        if ( ! table.contains(cell)) return null;
        
        final CellRangeAddressBase range = getRange(table, cell);
        if (range != null && range.isInRange(cell.getRow(), cell.getCol())) return range;
        // else
        return null;
    }

