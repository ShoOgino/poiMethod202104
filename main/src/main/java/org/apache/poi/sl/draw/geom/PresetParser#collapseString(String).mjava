    /**
     * Removes leading and trailing whitespaces of the string given as the parameter, then truncate any
     * sequence of tab, CR, LF, and SP by a single whitespace character ' '.
     */
    private static String collapseString(String text) {
        if (text==null) {
            return null;
        }

        int len = text.length();

        // most of the texts are already in the collapsed form. so look for the first whitespace in the hope that we
        // will never see it.
        int s;
        for (s=0; s<len; s++) {
            if (isWhiteSpace(text.charAt(s))) {
                break;
            }
        }

        if (s == len) {
            // the input happens to be already collapsed.
            return text;
        }

        // we now know that the input contains spaces. let's sit down and do the collapsing normally.
        // allocate enough size to avoid re-allocation
        StringBuilder result = new StringBuilder(len);

        if (s != 0) {
            for(int i=0; i<s; i++) {
                result.append(text.charAt(i));
            }
            result.append(' ');
        }

        boolean inStripMode = true;
        for (int i = s+1; i < len; i++) {
            char ch = text.charAt(i);
            boolean b = isWhiteSpace(ch);

            if (inStripMode && b) {
                // skip this character
                continue;
            }

            inStripMode = b;
            result.append(inStripMode ? ' ' : ch);
        }

        // remove trailing whitespaces
        len = result.length();
        if (len > 0 && result.charAt(len - 1) == ' ') {
            result.setLength(len - 1);
        }

        // whitespaces are already collapsed, so all we have to do is
        // to remove the last one character if it's a whitespace.
        return result.toString();
    }

