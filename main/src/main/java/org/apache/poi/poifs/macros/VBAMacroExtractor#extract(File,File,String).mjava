    /**
      * Extracts the VBA modules from a macro-enabled office file and writes them
      * to files in <tt>outputDir</tt>.
      *
      * Creates the <tt>outputDir</tt>, directory, including any necessary but
      * nonexistent parent directories, if <tt>outputDir</tt> does not exist.
      * If <tt>outputDir</tt> is null, writes the contents to standard out instead.
      *
      * @param input  the macro-enabled office file.
      * @param outputDir  the directory to write the extracted VBA modules to.
      * @param extension  file extension of the extracted VBA modules
      * @since 3.15-beta2
      */
    public void extract(File input, File outputDir, String extension) throws IOException {
        if (! input.exists()) throw new FileNotFoundException(input.toString());
        System.err.print("Extracting VBA Macros from " + input + " to ");
        if (outputDir != null) {
            if (!outputDir.exists() && !outputDir.mkdirs()) {
                throw new IOException("Output directory " + outputDir + " could not be created");
            }
            System.err.println(outputDir);
        } else {
            System.err.println("STDOUT");
        }

        final Map<String,String> macros;
        try (VBAMacroReader reader = new VBAMacroReader(input)) {
            macros = reader.readMacros();
        }
        
        final String divider = "---------------------------------------";
        for (Entry<String, String> entry : macros.entrySet()) {
            String moduleName = entry.getKey();
            String moduleCode = entry.getValue();
            if (outputDir == null) {
                System.out.println(divider);
                System.out.println(moduleName);
                System.out.println();
                System.out.println(moduleCode);
            } else {
                File out = new File(outputDir, moduleName + extension);
                try (FileOutputStream fout = new FileOutputStream(out);
                    OutputStreamWriter fwriter = new OutputStreamWriter(fout, StringUtil.UTF8)) {
                    fwriter.write(moduleCode);
                }
                System.out.println("Extracted " + out);
            }
        }
        if (outputDir == null) {
            System.out.println(divider);
        }
    }

