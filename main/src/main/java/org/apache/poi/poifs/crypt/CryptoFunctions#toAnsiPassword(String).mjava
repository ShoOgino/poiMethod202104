    /**
     * The provided Unicode password string is converted to a ANSI string
     *
     * @param password the password
     * @return the ansi bytes
     *
     * @see <a href="http://www.ecma-international.org/news/TC45_current_work/Office%20Open%20XML%20Part%204%20-%20Markup%20Language%20Reference.pdf">Part 4 - Markup Language Reference - Ecma International - section 3.2.29 (workbookProtection)</a>
     */
    private static byte[] toAnsiPassword(String password) {
        // TODO: charset conversion (see ecma spec)

        // Get the single-byte values by iterating through the Unicode characters.
        // For each character, if the low byte is not equal to 0, take it.
        // Otherwise, take the high byte.
        byte[] arrByteChars = new byte[password.length()];

        for (int i = 0; i < password.length(); i++) {
            int intTemp = password.charAt(i);
            byte lowByte = (byte)(intTemp & 0xFF);
            byte highByte = (byte)((intTemp >>> 8) & 0xFF);
            arrByteChars[i] = (lowByte != 0 ? lowByte : highByte);
        }

        return arrByteChars;
    }

