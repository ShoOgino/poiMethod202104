	/**
	 * Retrieves the fake font details for a given font.
	 *
	 * @param font
	 *            the font to lookup.
	 * @return the fake font.
	 */
	public static synchronized FontDetails getFontDetails(Font font) {
		// If we haven't already identified out font metrics file,
		// figure out which one to use and load it
		if (fontMetricsProps == null) {
		    try {
		        fontMetricsProps = loadMetrics();
		    } catch (IOException e) {
		        throw new RuntimeException("Could not load font metrics", e);
		    }
		}

		// Grab the base name of the font they've asked about
		String fontName = font.getName();

		// Some fonts support plain/bold/italic/bolditalic variants
		// Others have different font instances for bold etc
		// (eg font.dialog.plain.* vs font.Californian FB Bold.*)
		String fontStyle = "";
		if (font.isPlain()) {
			fontStyle += "plain";
		}
		if (font.isBold()) {
			fontStyle += "bold";
		}
		if (font.isItalic()) {
			fontStyle += "italic";
		}

		// Do we have a definition for this font with just the name?
		// If not, check with the font style added
		String fontHeight = FontDetails.buildFontHeightProperty(fontName);
		String styleHeight = FontDetails.buildFontHeightProperty(fontName + "." + fontStyle);

		if (fontMetricsProps.get(fontHeight) == null
			&& fontMetricsProps.get(styleHeight) != null) {
			// Need to add on the style to the font name
			fontName += "." + fontStyle;
		}

		// Get the details on this font
		FontDetails fontDetails = fontDetailsMap.get(fontName);
		if (fontDetails == null) {
			fontDetails = FontDetails.create(fontName, fontMetricsProps);
			fontDetailsMap.put(fontName, fontDetails);
		}
        return fontDetails;
	}

