    /**
     * test equality
     */
    @Test
    public void testEquality() {
        POIFSDocumentPath   a1    = new POIFSDocumentPath();
        POIFSDocumentPath   a2    = new POIFSDocumentPath(null);
        POIFSDocumentPath   a3    = new POIFSDocumentPath(new String[ 0 ]);
        POIFSDocumentPath   a4    = new POIFSDocumentPath(a1, null);
        POIFSDocumentPath   a5    = new POIFSDocumentPath(a1, new String[ 0 ]);

        POIFSDocumentPath[] paths = {a1, a2, a3, a4, a5};

        for (int j = 0; j < paths.length; j++) {
            for (int k = 0; k < paths.length; k++) {
                assertEquals(paths[ j ], paths[ k ], j + "<>" + k);
            }
        }
        a2 = new POIFSDocumentPath(a1, new String[]{"foo"});
        a3 = new POIFSDocumentPath(a2, new String[]{"bar"});
        a4 = new POIFSDocumentPath(a3, new String[]{"fubar"});
        a5 = new POIFSDocumentPath(a4, new String[]{"foobar"});
        POIFSDocumentPath[] builtUpPaths =
        {
            a1, a2, a3, a4, a5
        };
        POIFSDocumentPath[] fullPaths = {
            new POIFSDocumentPath(), new POIFSDocumentPath(new String[]{"foo"}),
            new POIFSDocumentPath(new String[]{"foo", "bar"}),
            new POIFSDocumentPath(new String[]{"foo", "bar", "fubar"}),
            new POIFSDocumentPath(new String[]{"foo", "bar", "fubar", "foobar"})
        };

        for (int k = 0; k < builtUpPaths.length; k++) {
            for (int j = 0; j < fullPaths.length; j++) {
                if (k == j) {
                    assertEquals(fullPaths[ j ], builtUpPaths[ k ], j + "<>" + k);
                } else {
                    assertNotEquals(fullPaths[j], builtUpPaths[k]);
                }
            }
        }
        POIFSDocumentPath[] badPaths = {
            new POIFSDocumentPath(new String[]{"_foo"}),
            new POIFSDocumentPath(new String[]{"foo", "_bar"}),
            new POIFSDocumentPath(new String[]{"foo", "bar", "_fubar"}),
            new POIFSDocumentPath(new String[]{"foo", "bar", "fubar", "_foobar"})
        };

        for (int k = 0; k < builtUpPaths.length; k++)
        {
            for (POIFSDocumentPath badPath : badPaths) {
                assertNotEquals(fullPaths[k], badPath);
            }
        }
    }

