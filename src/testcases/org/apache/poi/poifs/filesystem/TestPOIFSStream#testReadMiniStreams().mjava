    /**
     * Tests that we can load some streams that are
     * stored in the mini stream.
     */
    @Test
    public void testReadMiniStreams() throws Exception {
        POIFSFileSystem fs = new POIFSFileSystem(_inst.openResourceAsStream("BlockSize512.zvi"));
        POIFSMiniStore ministore = fs.getMiniStore();

        // 178 -> 179 -> 180 -> end
        POIFSStream stream = new POIFSStream(ministore, 178);
        Iterator<ByteBuffer> i = stream.getBlockIterator();
        assertTrue(i.hasNext());
        ByteBuffer b178 = i.next();
        assertTrue(i.hasNext());
        ByteBuffer b179 = i.next();
        assertTrue(i.hasNext());
        ByteBuffer b180 = i.next();
        assertFalse(i.hasNext());

        // Check the contents of the 1st block
        assertEquals((byte) 0xfe, b178.get());
        assertEquals((byte) 0xff, b178.get());
        assertEquals((byte) 0x00, b178.get());
        assertEquals((byte) 0x00, b178.get());
        assertEquals((byte) 0x05, b178.get());
        assertEquals((byte) 0x01, b178.get());
        assertEquals((byte) 0x02, b178.get());
        assertEquals((byte) 0x00, b178.get());

        // And the 2nd
        assertEquals((byte) 0x6c, b179.get());
        assertEquals((byte) 0x00, b179.get());
        assertEquals((byte) 0x00, b179.get());
        assertEquals((byte) 0x00, b179.get());
        assertEquals((byte) 0x28, b179.get());
        assertEquals((byte) 0x00, b179.get());
        assertEquals((byte) 0x00, b179.get());
        assertEquals((byte) 0x00, b179.get());

        // And the 3rd
        assertEquals((byte) 0x30, b180.get());
        assertEquals((byte) 0x00, b180.get());
        assertEquals((byte) 0x00, b180.get());
        assertEquals((byte) 0x00, b180.get());
        assertEquals((byte) 0x00, b180.get());
        assertEquals((byte) 0x00, b180.get());
        assertEquals((byte) 0x00, b180.get());
        assertEquals((byte) 0x80, b180.get());

        fs.close();
    }

