    /**
     * Test buffered read
     */
    @SuppressWarnings("ResultOfMethodCallIgnored")
    @Test
    public void testBufferRead() throws IOException {
        DocumentInputStream stream = new DocumentInputStream(_workbook_n);
        // Need to give a byte array to read
        assertThrows(NullPointerException.class, () -> stream.read(null));

        // test reading zero length buffer
        assertEquals(0, stream.read(new byte[0]));
        assertEquals(_workbook_size, available(stream));
        byte[] buffer = new byte[_buffer_size];
        int offset = 0;

        while (available(stream) >= buffer.length) {
            assertEquals(_buffer_size, stream.read(buffer));
            for (byte element : buffer) {
                assertEquals(_workbook_data[offset], element, "in main loop, byte " + offset);
                offset++;
            }
            assertEquals(_workbook_size - offset, available(stream), "offset " + offset);
        }
        assertEquals(_workbook_size % _buffer_size, available(stream));
        Arrays.fill(buffer, (byte) 0);
        int count = stream.read(buffer);

        assertEquals(_workbook_size % _buffer_size, count);
        for (int j = 0; j < count; j++) {
            assertEquals(_workbook_data[offset], buffer[j], "past main loop, byte " + offset);
            offset++;
        }
        assertEquals(_workbook_size, offset);
        for (int j = count; j < buffer.length; j++) {
            assertEquals(0, buffer[j], "checking remainder, byte " + j);
        }
        assertEquals(-1, stream.read(buffer));
        stream.close();

        assertThrows(IOException.class, () -> stream.read(buffer));
    }

