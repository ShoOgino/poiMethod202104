    /**
     * Read a stream with several blocks in a 4096 byte block file
     */
    @Test
    public void testReadStream4096() throws Exception {
        POIFSFileSystem fs = new POIFSFileSystem(_inst.getFile("BlockSize4096.zvi"));

        // 0 -> 1 -> 2 -> end
        POIFSStream stream = new POIFSStream(fs, 0);
        Iterator<ByteBuffer> i = stream.getBlockIterator();
        assertTrue(i.hasNext());
        ByteBuffer b0 = i.next();
        assertTrue(i.hasNext());
        ByteBuffer b1 = i.next();
        assertTrue(i.hasNext());
        ByteBuffer b2 = i.next();
        assertFalse(i.hasNext());

        // Check the contents of the 1st block
        assertEquals((byte) 0x9E, b0.get());
        assertEquals((byte) 0x75, b0.get());
        assertEquals((byte) 0x97, b0.get());
        assertEquals((byte) 0xF6, b0.get());
        assertEquals((byte) 0xFF, b0.get());
        assertEquals((byte) 0x21, b0.get());
        assertEquals((byte) 0xD2, b0.get());
        assertEquals((byte) 0x11, b0.get());

        // Check the contents of the 2nd block
        assertEquals((byte) 0x00, b1.get());
        assertEquals((byte) 0x00, b1.get());
        assertEquals((byte) 0x03, b1.get());
        assertEquals((byte) 0x00, b1.get());
        assertEquals((byte) 0x00, b1.get());
        assertEquals((byte) 0x00, b1.get());
        assertEquals((byte) 0x00, b1.get());
        assertEquals((byte) 0x00, b1.get());

        // Check the contents of the 3rd block
        assertEquals((byte) 0x6D, b2.get());
        assertEquals((byte) 0x00, b2.get());
        assertEquals((byte) 0x00, b2.get());
        assertEquals((byte) 0x00, b2.get());
        assertEquals((byte) 0x03, b2.get());
        assertEquals((byte) 0x00, b2.get());
        assertEquals((byte) 0x46, b2.get());
        assertEquals((byte) 0x00, b2.get());

        fs.close();
    }

