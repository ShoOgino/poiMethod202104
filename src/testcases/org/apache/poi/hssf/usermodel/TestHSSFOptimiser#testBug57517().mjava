    @Test
    public void testBug57517() {
        HSSFWorkbook wb = new HSSFWorkbook();
        assertEquals(21, wb.getNumCellStyles(),
            "Usually we have 21 pre-defined styles in a newly created Workbook, see InternalWorkbook.createWorkbook()");

        HSSFSheet sheet = wb.createSheet();

        //Set CellStyle and RowStyle and ColumnStyle
        for (int i = 0; i < 2; i++) {
            sheet.createRow(i);
        }

        // Create a test font and style, and use them
        int obj_cnt = wb.getNumCellStyles();
        int cnt = wb.getNumCellStyles();
        for (int i = 0; i < 3; i++) {
            // Set Cell Color : GREEN
            HSSFRow row = sheet.getRow(0);
            row.createCell(i).setCellStyle(
                    createColorStyle(wb, IndexedColors.GREEN));
            obj_cnt++;

            // Set Column Color : Red
            sheet.setDefaultColumnStyle(i + 3,
                    createColorStyle(wb, IndexedColors.RED));
            obj_cnt++;

            // Set Row Color : Blue
            row = sheet.createRow(i + 3);
            row.setRowStyle(createColorStyle(wb, IndexedColors.BLUE));
            obj_cnt++;

            HSSFCellStyle s = null;
            if (i == 0) {
                // Set cell color : +2(user style + proxy of it)
                s = (HSSFCellStyle) createColorStyle(wb,
                        IndexedColors.YELLOW);
                s.setUserStyleName("user define");
                obj_cnt += 2;
            }

            row = sheet.getRow(1);
            row.createCell(i).setCellStyle(s);

        }

        // Create style. But don't use it.
        for (int i = 3; i < 6; i++) {
            // Set Cell Color : AQUA
            createColorStyle(wb, IndexedColors.AQUA);
            obj_cnt++;
        }

        // Set CellStyle and RowStyle and ColumnStyle
        for (int i = 9; i < 11; i++) {
            sheet.createRow(i);
        }

        //Set 0 or 255 index of ColumnStyle.
        HSSFCellStyle s = (HSSFCellStyle) createColorStyle(wb, IndexedColors.CORAL);
        obj_cnt++;
        sheet.setDefaultColumnStyle(0, s);
        sheet.setDefaultColumnStyle(255, s);

        // Create a test font and style, and use them
        for (int i = 3; i < 6; i++) {
            // Set Cell Color : GREEN
            HSSFRow row = sheet.getRow(9);
            row.createCell(i - 3).setCellStyle(
                    createColorStyle(wb, IndexedColors.GREEN));
            obj_cnt++;

            // Set Column Color : Red
            sheet.setDefaultColumnStyle(i + 3,
                    createColorStyle(wb, IndexedColors.RED));
            obj_cnt++;

            // Set Row Color : Blue
            row = sheet.createRow(i + 3);
            row.setRowStyle(createColorStyle(wb, IndexedColors.BLUE));
            obj_cnt++;

            if (i == 3) {
                // Set cell color : +2(user style + proxy of it)
                s = (HSSFCellStyle) createColorStyle(wb,
                        IndexedColors.YELLOW);
                s.setUserStyleName("user define2");
                obj_cnt += 2;
            }

            row = sheet.getRow(1 + 9);
            row.createCell(i - 3).setCellStyle(s);
        }

        assertEquals(obj_cnt, wb.getNumCellStyles());

        // now the color should be equal for those two columns and rows
        checkColumnStyles(sheet, 3, 4, false);
        checkRowStyles(sheet, 3, 4, false);

        // Confirm user style name
        checkUserStyles(sheet);

//        out = new FileOutputStream(new File(tmpDirName, "out.xls"));
//        wb.write(out);
//        out.close();

        // Optimise styles
        HSSFOptimiser.optimiseCellStyles(wb);

//        out = new FileOutputStream(new File(tmpDirName, "out_optimised.xls"));
//        wb.write(out);
//        out.close();

        // We should have the same style-objects for these two columns and rows
        checkColumnStyles(sheet, 3, 4, true);
        checkRowStyles(sheet, 3, 4, true);

        // Confirm user style name
        checkUserStyles(sheet);

        // (GREEN + RED + BLUE + CORAL) + YELLOW(2*2)
        assertEquals(cnt + 4 + 2 * 2, wb.getNumCellStyles());
    }

