    @Test
    public void testExistingSheet1() throws Exception {
       HSSFWorkbook wb = HSSFTestDataSamples.openSampleWorkbook("49581.xls");
        HSSFSheet sheet = wb.getSheetAt( 0 ) ;
        HSSFChart[] charts = HSSFChart.getSheetCharts( sheet ) ;

        for ( HSSFChart chart : charts ) {
            //System.out.println( chart.getType() ) ;
            HSSFSeries[] seriesArray = chart.getSeries() ;
            //System.out.println( "seriesArray.length=" + seriesArray.length ) ;
            for ( HSSFSeries series : seriesArray )
            {
                //System.out.println( "serie.getNumValues()=" + series.getNumValues() ) ;
                CellRangeAddressBase range ;

                range = series.getValuesCellRange() ;
                //System.out.println( range.toString() ) ;
                range.setLastRow( range.getLastRow() + 1 ) ;
                series.setValuesCellRange( range ) ;

                range = series.getCategoryLabelsCellRange() ;
                //System.out.println( range.toString() ) ;
                range.setLastRow( range.getLastRow() + 1 ) ;
                series.setCategoryLabelsCellRange( range ) ;
            }

            for ( int id = 0 ; id < 2 ; id++ )
            {
                HSSFSeries newSeries = chart.createSeries() ;
                newSeries.setValuesCellRange( new CellRangeAddress( 1 + id, 4, 3, 3 ) ) ;
                String oldSeriesTitle = newSeries.getSeriesTitle() ;
                if ( oldSeriesTitle != null )
                {
                    //System.out.println( "old series title: " + oldSeriesTitle ) ;
                    newSeries.setSeriesTitle( "new series" ) ;
                }
            }
        }

        HSSFChart chart = charts[ 2 ] ;
        chart.removeSeries( chart.getSeries()[ 0 ] ) ;
    }

