    /**
     * Test using a default number format. The format should be used when a
     * format pattern cannot be parsed by DecimalFormat.
     */
    @Test
    public void testSetDefaultNumberFormat() {
        HSSFRow row = wb.getSheetAt(0).getRow(3);
        Iterator<Cell> it = row.cellIterator();
        DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(LocaleUtil.getUserLocale());
        Format defaultFormat = new DecimalFormat("Balance $#,#00.00 USD;Balance -$#,#00.00 USD", dfs);
        formatter.setDefaultNumberFormat(defaultFormat);

        log("\n==== DEFAULT NUMBER FORMAT ====");
        while (it.hasNext()) {
            Cell cell = it.next();
            cell.setCellValue(cell.getNumericCellValue() * Math.random() / 1000000 - 1000);
            log(formatter.formatCellValue(cell));

            String formatted = formatter.formatCellValue(cell);
            assertTrue(formatted.startsWith("Balance "), "Doesn't start with Balance: " + formatted);
            assertTrue(formatted.endsWith(" USD"), "Doesn't end with USD: " + formatted);
        }
    }

