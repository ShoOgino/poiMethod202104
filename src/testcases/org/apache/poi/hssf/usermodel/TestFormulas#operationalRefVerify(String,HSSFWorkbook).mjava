    /**
     * Opens the sheet we wrote out by binomialOperator and makes sure the formulas
     * all match what we expect (x operator y)
     */
    private static void operationalRefVerify(String operator, HSSFWorkbook wb) {

        HSSFSheet s = wb.getSheetAt(0);

        //get our minimum values
        HSSFRow r = s.getRow(0);
        HSSFCell c = r.getCell(1);
        //get our minimum values
        assertEquals(("A2" + operator + "A3"), c.getCellFormula(),
            "minval Formula is as expected A2" + operator + "A3 != " + c.getCellFormula());


        for (int x = 1; x < Short.MAX_VALUE && x > 0; x=(short)(x*2)) {
            r = s.getRow(x);

            for (int y = 1; y < 256 && y > 0; y++) {

                int refx1 = x + (x+50 < Short.MAX_VALUE ? 50 : -4);
                int refx2 = x + (x+50 < Short.MAX_VALUE ? 46 : -3);
                int refy1 = y + (y+50 < 255 ? 50 : -4);
                int refy2 = y + (y+50 < 255 ? 49 : -3);

                c = r.getCell(y);
                CellReference cr= new CellReference(refx1, refy1, false, false);
                String ref=cr.formatAsString();
                cr=new CellReference(refx2,refy2, false, false);
                String ref2=cr.formatAsString();


                assertEquals(("" + ref + operator + ref2), c.getCellFormula(),
                    "loop Formula is as expected " + ref + operator + ref2 + "!=" + c.getCellFormula());
            }
        }

        //test our maximum values
        r = s.getRow(0);
        c = r.getCell(0);

        assertEquals("B1"+operator+"IV255", c.getCellFormula());
    }

