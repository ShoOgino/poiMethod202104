    @Test
    public void testPolygonPoints() throws IOException {
        HSSFWorkbook wb = new HSSFWorkbook();
        HSSFSheet sh = wb.createSheet();
        HSSFPatriarch patriarch = sh.createDrawingPatriarch();

        HSSFPolygon polygon = patriarch.createPolygon(new HSSFClientAnchor());
        polygon.setPolygonDrawArea( 100, 100 );
        polygon.setPoints( new int[]{0, 90, 50, 90}, new int[]{5, 5, 44, 88} );

        EscherArrayProperty verticesProp1 = polygon.getOptRecord().lookup(EscherPropertyTypes.GEOMETRY__VERTICES);

        String expected =
            "<record type=\"GEOMETRY__VERTICES\" id=\"-32443\" name=\"geometry.vertices\" propertyNumber=\"325\" propertySize=\"32\" numElements=\"5\" numElementsInMemory=\"5\" sizeOfElements=\"-16\">" +
            "<flags flag=\"0x8145\" description=\"IS_COMPLEX\"/>" +
            "<data>BQAFAPD/AAAFAFoABQAyACwAWgBYAAAABQA=</data>" +
            "<elements>" +
            "<item>AAAFAA==</item>" +
            "<item>WgAFAA==</item>" +
            "<item>MgAsAA==</item>" +
            "<item>WgBYAA==</item>" +
            "<item>AAAFAA==</item>" +
            "</elements>" +
            "</record>";
        String actual = verticesProp1.toXml("").replaceAll("[\r\n\t]","");

        assertEquals(verticesProp1.getNumberOfElementsInArray(), 5);
        assertEquals(expected, actual);

        polygon.setPoints(new int[]{1,2,3}, new int[] {4,5,6});
        assertArrayEquals(polygon.getXPoints(), new int[]{1, 2, 3});
        assertArrayEquals(polygon.getYPoints(), new int[]{4, 5, 6});

        verticesProp1 = polygon.getOptRecord().lookup(EscherPropertyTypes.GEOMETRY__VERTICES);

        expected =
            "<record type=\"GEOMETRY__VERTICES\" id=\"-32443\" name=\"geometry.vertices\" propertyNumber=\"325\" propertySize=\"28\" numElements=\"4\" numElementsInMemory=\"4\" sizeOfElements=\"-16\">" +
            "<flags flag=\"0x8145\" description=\"IS_COMPLEX\"/>" +
            "<data>BAAEAPD/AQAEAAIABQADAAYAAQAEAA==</data>" +
            "<elements>" +
            "<item>AQAEAA==</item>" +
            "<item>AgAFAA==</item>" +
            "<item>AwAGAA==</item>" +
            "<item>AQAEAA==</item>" +
            "</elements></record>";
        actual = verticesProp1.toXml("").replaceAll("[\r\n\t]","");

        assertEquals(verticesProp1.getNumberOfElementsInArray(), 4);
        assertEquals(expected, actual);

        wb.close();
    }

