    /**
     * Test creation / evaluation of formulas with sheet-level names
     */
    @Test
    void testSheetLevelFormulas() throws IOException {
        try (HSSFWorkbook wb = new HSSFWorkbook()) {
            HSSFSheet sh1 = wb.createSheet("Sheet1");
            HSSFName nm1 = wb.createName();
            nm1.setNameName("sales_1");
            nm1.setSheetIndex(0);
            nm1.setRefersToFormula("Sheet1!$A$1");
            HSSFRow row = sh1.createRow(0);
            row.createCell(0).setCellValue(3);
            row.createCell(1).setCellFormula("sales_1");
            row.createCell(2).setCellFormula("sales_1*2");


            HSSFSheet sh2 = wb.createSheet("Sheet2");
            HSSFName nm2 = wb.createName();
            nm2.setNameName("sales_1");
            nm2.setSheetIndex(1);
            nm2.setRefersToFormula("Sheet2!$A$1");

            row = sh2.createRow(0);
            row.createCell(0).setCellValue(5);
            row.createCell(1).setCellFormula("sales_1");
            row.createCell(2).setCellFormula("sales_1*3");

            //check that NamePtg refers to the correct NameRecord
            Ptg[] ptgs1 = HSSFFormulaParser.parse("sales_1", wb, FormulaType.CELL, 0);
            NamePtg nPtg1 = (NamePtg) ptgs1[0];
            assertSame(nm1, wb.getNameAt(nPtg1.getIndex()));

            Ptg[] ptgs2 = HSSFFormulaParser.parse("sales_1", wb, FormulaType.CELL, 1);
            NamePtg nPtg2 = (NamePtg) ptgs2[0];
            assertSame(nm2, wb.getNameAt(nPtg2.getIndex()));

            //check that the formula evaluator returns the correct result
            HSSFFormulaEvaluator evaluator = new HSSFFormulaEvaluator(wb);
            assertEquals(3.0, evaluator.evaluate(sh1.getRow(0).getCell(1)).getNumberValue(), 0.0);
            assertEquals(6.0, evaluator.evaluate(sh1.getRow(0).getCell(2)).getNumberValue(), 0.0);

            assertEquals(5.0, evaluator.evaluate(sh2.getRow(0).getCell(1)).getNumberValue(), 0.0);
            assertEquals(15.0, evaluator.evaluate(sh2.getRow(0).getCell(2)).getNumberValue(), 0.0);
        }
    }

