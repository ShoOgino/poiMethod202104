    /**
     * Makes sure the internal state of HSSFSheet is consistent after removing array formulas
     */
    @Test
    void testAddRemoveArrayFormulas_recordUpdates() throws IOException {
        try (HSSFWorkbook wb = new HSSFWorkbook()) {
            HSSFSheet s = wb.createSheet("Sheet1");

            CellRange<HSSFCell> cr = s.setArrayFormula("123", CellRangeAddress.valueOf("B5:C6"));
            List<org.apache.poi.hssf.record.Record> recs = new ArrayList<>();
            s.getSheet().visitContainedRecords(recs::add, 0);

            int ix = 0;
            for (org.apache.poi.hssf.record.Record r : recs) {
                if (r instanceof ArrayRecord) break;
                ix++;
            }

            assertNotEquals(ix, recs.size());
            Class<?>[] act = recs.subList(ix-1, ix+4).stream().map(Object::getClass).toArray(Class[]::new);
            Class<?>[] exp = { FormulaRecord.class, ArrayRecord.class, FormulaRecord.class, FormulaRecord.class, FormulaRecord.class };
            assertArrayEquals(exp, act);

            // just one array record
            assertFalse(recs.subList(ix + 1, recs.size()).stream().anyMatch(r -> r instanceof ArrayRecord));

            s.removeArrayFormula(cr.getTopLeftCell());

            // Make sure the array formula has been removed properly
            recs.clear();
            s.getSheet().visitContainedRecords(recs::add, 0);

            assertFalse(recs.stream().anyMatch(r -> r instanceof ArrayRecord || r instanceof FormulaRecord));
            RowRecordsAggregate rra = s.getSheet().getRowsAggregate();

            SharedValueManager svm = POITestCase.getFieldValue(RowRecordsAggregate.class, rra, SharedValueManager.class, "_sharedValueManager");
            assertNull(svm.getArrayRecord(4, 1), "Array record was not cleaned up properly.");
        }
    }

