    /**
     * TEST NAME:  Test Write Sheet Style <P>
     * OBJECTIVE:  Test that HSSF can create a simple spreadsheet with numeric and string values and styled with colors
     *             and borders.<P>
     * SUCCESS:    HSSF creates a sheet.  Filesize matches a known good.  HSSFSheet objects
     *             Last row, first row is tested against the correct values (99,0).<P>
     * FAILURE:    HSSF does not create a sheet or excepts.  Filesize does not match the known good.
     *             HSSFSheet last row or first row is incorrect.             <P>
     *
     */
    @Test
    void testWriteSheetStyle() throws IOException {
        File file = TempFile.createTempFile("testWriteSheetStyle", ".xls");
        try (HSSFWorkbook wb = new HSSFWorkbook()) {
            HSSFSheet s = wb.createSheet();
            HSSFFont fnt = wb.createFont();
            HSSFCellStyle cs = wb.createCellStyle();
            HSSFCellStyle cs2 = wb.createCellStyle();

            cs.setBorderBottom(THIN);
            cs.setBorderLeft(THIN);
            cs.setBorderRight(THIN);
            cs.setBorderTop(THIN);
            cs.setFillForegroundColor((short) 0xA);
            cs.setFillPattern(FillPatternType.DIAMONDS);
            fnt.setColor((short) 0xf);
            fnt.setItalic(true);
            cs2.setFillForegroundColor((short) 0x0);
            cs2.setFillPattern(FillPatternType.DIAMONDS);
            cs2.setFont(fnt);
            for (int rownum = 0; rownum < 100; rownum++) {
                HSSFRow r = s.createRow(rownum);

                for (int cellnum = 0; cellnum < 50; cellnum += 2) {
                    HSSFCell c = r.createCell(cellnum);
                    c.setCellValue(rownum * 10000 + cellnum
                                           + (((double) rownum / 1000)
                            + ((double) cellnum / 10000)));
                    c.setCellStyle(cs);
                    c = r.createCell(cellnum + 1);
                    c.setCellValue("TEST");
                    c.setCellStyle(cs2);
                }
            }
            try (FileOutputStream out = new FileOutputStream(file)) {
                wb.write(out);
            }
            SanityChecker sanityChecker = new SanityChecker();
            sanityChecker.checkHSSFWorkbook(wb);
            assertEquals(99, s.getLastRowNum(), "LAST ROW == 99");
            assertEquals(0, s.getFirstRowNum(), "FIRST ROW == 0");
        }
    }

