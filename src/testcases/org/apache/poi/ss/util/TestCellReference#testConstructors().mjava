    @Test
    void testConstructors() {
        CellReference cellReference;
        final String sheet = "Sheet1";
        final String cellRef = "A1";
        final int row = 0;
        final int col = 0;
        final boolean absRow = true;
        final boolean absCol = false;

        cellReference = new CellReference(row, col);
        assertEquals("A1", cellReference.formatAsString());
        assertEquals("A1", cellReference.formatAsString(true));
        assertEquals("A1", cellReference.formatAsString(false));

        cellReference = new CellReference(row, col, absRow, absCol);
        assertEquals("A$1", cellReference.formatAsString());
        assertEquals("A$1", cellReference.formatAsString(true));
        assertEquals("A$1", cellReference.formatAsString(false));

        cellReference = new CellReference(row, (short)col);
        assertEquals("A1", cellReference.formatAsString());
        assertEquals("A1", cellReference.formatAsString(true));
        assertEquals("A1", cellReference.formatAsString(false));

        cellReference = new CellReference(cellRef);
        assertEquals("A1", cellReference.formatAsString());
        assertEquals("A1", cellReference.formatAsString(true));
        assertEquals("A1", cellReference.formatAsString(false));

        cellReference = new CellReference(sheet, row, col, absRow, absCol);
        assertEquals("Sheet1!A$1", cellReference.formatAsString());
        assertEquals("Sheet1!A$1", cellReference.formatAsString(true));
        assertEquals("A$1", cellReference.formatAsString(false));

        cellReference = new CellReference(sheet+"!$A1");
        assertFalse(cellReference.isRowAbsolute());
        assertTrue(cellReference.isColAbsolute());

        cellReference = new CellReference(sheet+"!A$1");
        assertTrue(cellReference.isRowAbsolute());
        assertFalse(cellReference.isColAbsolute());
    }

