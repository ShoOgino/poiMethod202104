	/**
	 * Bug 42448 - Can't parse SUMPRODUCT(A!C7:A!C67, B8:B68) / B69 <p>
	 */
	@Test
	void test42448() throws IOException {
		try (Workbook wb = new HSSFWorkbook()) {
			Sheet sheet1 = wb.createSheet("Sheet1");

			Row row = sheet1.createRow(0);
			Cell cell = row.createCell(0);

			// it's important to create the referenced sheet first
			Sheet sheet2 = wb.createSheet("A"); // note name 'A'
			// TODO - POI crashes if the formula is added before this sheet
			// RuntimeException("Zero length string is an invalid sheet name")
			// Excel doesn't crash but the formula doesn't work until it is
			// re-entered

			String inputFormula = "SUMPRODUCT(A!C7:A!C67, B8:B68) / B69"; // as per bug report
			try {
				cell.setCellFormula(inputFormula);
			} catch (StringIndexOutOfBoundsException e) {
				fail("Identified bug 42448");
			}

			assertEquals("SUMPRODUCT(A!C7:A!C67,B8:B68)/B69", cell.getCellFormula());

			// might as well evaluate the sucker...

			addCell(sheet2, 5, 2, 3.0); // A!C6
			addCell(sheet2, 6, 2, 4.0); // A!C7
			addCell(sheet2, 66, 2, 5.0); // A!C67
			addCell(sheet2, 67, 2, 6.0); // A!C68

			addCell(sheet1, 6, 1, 7.0); // B7
			addCell(sheet1, 7, 1, 8.0); // B8
			addCell(sheet1, 67, 1, 9.0); // B68
			addCell(sheet1, 68, 1, 10.0); // B69

			double expectedResult = (4.0 * 8.0 + 5.0 * 9.0) / 10.0;

			FormulaEvaluator fe = wb.getCreationHelper().createFormulaEvaluator();
			CellValue cv = fe.evaluate(cell);

			assertEquals(CellType.NUMERIC, cv.getCellType());
			assertEquals(expectedResult, cv.getNumberValue(), 0.0);
		}
	}

