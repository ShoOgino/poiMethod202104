    @Test
    public void testFloor() {
        double d;
        double s;

        d = 0; s = 0;
        assertDouble("floor ", 0, MathX.floor(d, s));

        d = 1; s = 0;
        assertDouble("floor ", Double.NaN, MathX.floor(d, s));

        d = 0; s = 1;
        assertDouble("floor ", 0, MathX.floor(d, s));

        d = -1; s = 0;
        assertDouble("floor ", Double.NaN, MathX.floor(d, s));

        d = 0; s = -1;
        assertDouble("floor ", 0, MathX.floor(d, s));

        d = 10; s = 1.11;
        assertDouble("floor ", 9.99, MathX.floor(d, s));

        d = 11.12333; s = 0.03499;
        assertDouble("floor ", 11.09183, MathX.floor(d, s));

        d = -11.12333; s = 0.03499;
        assertDouble("floor ", Double.NaN, MathX.floor(d, s));

        d = 11.12333; s = -0.03499;
        assertDouble("floor ", Double.NaN, MathX.floor(d, s));

        d = -11.12333; s = -0.03499;
        assertDouble("floor ", -11.09183, MathX.floor(d, s));

        d = 100; s = 0.001;
        assertDouble("floor ", 100, MathX.floor(d, s));

        d = -0.001; s = -9.99;
        assertDouble("floor ", 0, MathX.floor(d, s));

        d = 4.42; s = 0.05;
        assertDouble("floor ", 4.4, MathX.floor(d, s));

        d = 0.05; s = 4.42;
        assertDouble("floor ", 0, MathX.floor(d, s));

        d = 0.6666; s = 3.33;
        assertDouble("floor ", 0, MathX.floor(d, s));

        d = 2d/3; s = 3.33;
        assertDouble("floor ", 0, MathX.floor(d, s));

        // samples from http://www.excelfunctions.net/Excel-Ceiling-Function.html
        // and https://support.office.com/en-us/article/CEILING-function-0a5cd7c8-0720-4f0a-bd2c-c943e510899f
        d = 3.7; s = 2;
        assertDouble("floor ", 2, MathX.floor(d, s));
        d = -2.5; s = -2;
        assertDouble("floor ", -2, MathX.floor(d, s));
        d = 2.5; s = -2;
        assertDouble("floor ", Double.NaN, MathX.floor(d, s));
        d = 1.58; s = 0.1;
        assertDouble("floor ", 1.5, MathX.floor(d, s));
        d = 0.234; s = 0.01;
        assertDouble("floor ", 0.23, MathX.floor(d, s));

        // see bug 62839
        d = -123;
        s = 10;
        assertDouble("floor ", -130, MathX.floor(d, s));
    }

