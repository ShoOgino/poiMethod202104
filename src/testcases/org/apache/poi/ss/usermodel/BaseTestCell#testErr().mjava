    /**
     * test that Error types (BoolErrRecord) are supported properly.
     * @see #testBool
     */
    @Test
    public void testErr() throws IOException {

        try (Workbook wb1 = _testDataProvider.createWorkbook()) {
            Sheet s = wb1.createSheet("testSheet1");
            Row r;
            Cell c;

            // B1
            r = s.createRow(0);
            c = r.createCell(1);
            assertEquals(0, c.getRowIndex());
            assertEquals(1, c.getColumnIndex());
            c.setCellErrorValue(FormulaError.NULL.getCode());
            assertEquals(FormulaError.NULL.getCode(), c.getErrorCellValue(), "B1 value == #NULL!");

            // C1
            c = r.createCell(2);
            assertEquals(0, c.getRowIndex());
            assertEquals(2, c.getColumnIndex());
            c.setCellErrorValue(FormulaError.DIV0.getCode());
            assertEquals(FormulaError.DIV0.getCode(), c.getErrorCellValue(), "C1 value == #DIV/0!");

            try (Workbook wb2 = _testDataProvider.writeOutAndReadBack(wb1)) {
                s = wb2.getSheet("testSheet1");

                r = s.getRow(0);
                assertEquals(2, r.getPhysicalNumberOfCells(), "Row 1 should have 2 cells");

                c = r.getCell(1);
                assertEquals(0, c.getRowIndex());
                assertEquals(1, c.getColumnIndex());
                assertEquals(CellType.ERROR, c.getCellType());
                assertEquals(FormulaError.NULL.getCode(), c.getErrorCellValue(), "B1 value == #NULL!");

                c = r.getCell(2);
                assertEquals(0, c.getRowIndex());
                assertEquals(2, c.getColumnIndex());
                assertEquals(CellType.ERROR, c.getCellType());
                assertEquals(FormulaError.DIV0.getCode(), c.getErrorCellValue(), "C1 value == #DIV/0!");
            }
        }
    }

