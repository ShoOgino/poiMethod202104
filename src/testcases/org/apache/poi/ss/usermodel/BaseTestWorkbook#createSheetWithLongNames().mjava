    /**
     * POI allows creating sheets with names longer than 31 characters.
     *
     * Excel opens files with long sheet names without error or warning.
     * However, long sheet names are silently truncated to 31 chars.  In order to
     * avoid funny duplicate sheet name errors, POI enforces uniqueness on only the first 31 chars.
     * but for the purpose of uniqueness long sheet names are silently truncated to 31 chars.
     */
    @Test
    public void createSheetWithLongNames() throws IOException {
        try (Workbook wb1 = _testDataProvider.createWorkbook()) {

            String sheetName1 = "My very long sheet name which is longer than 31 chars";
            String truncatedSheetName1 = sheetName1.substring(0, 31);
            Sheet sh1 = wb1.createSheet(sheetName1);
            assertEquals(truncatedSheetName1, sh1.getSheetName());
            assertSame(sh1, wb1.getSheet(truncatedSheetName1));
            // now via wb.setSheetName
            wb1.setSheetName(0, sheetName1);
            assertEquals(truncatedSheetName1, sh1.getSheetName());
            assertSame(sh1, wb1.getSheet(truncatedSheetName1));

            String sheetName2 = "My very long sheet name which is longer than 31 chars " +
                    "and sheetName2.substring(0, 31) == sheetName1.substring(0, 31)";

            IllegalArgumentException e = assertThrows(IllegalArgumentException.class, () -> wb1.createSheet(sheetName2));
            assertEquals("The workbook already contains a sheet named 'My very long sheet name which is longer than 31 chars and sheetName2.substring(0, 31) == sheetName1.substring(0, 31)'", e.getMessage());

            String sheetName3 = "POI allows creating sheets with names longer than 31 characters";
            String truncatedSheetName3 = sheetName3.substring(0, 31);
            Sheet sh3 = wb1.createSheet(sheetName3);
            assertEquals(truncatedSheetName3, sh3.getSheetName());
            assertSame(sh3, wb1.getSheet(truncatedSheetName3));

            //serialize and read again
            try (Workbook wb2 = _testDataProvider.writeOutAndReadBack(wb1)) {
                assertEquals(2, wb2.getNumberOfSheets());
                assertEquals(0, wb2.getSheetIndex(truncatedSheetName1));
                assertEquals(1, wb2.getSheetIndex(truncatedSheetName3));
            }
        }
    }

