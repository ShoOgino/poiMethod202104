    @Test
    public final void bug50681_testAutoSize() throws IOException {
        try (Workbook wb = _testDataProvider.createWorkbook()) {
            Sheet sheet = wb.createSheet("Sheet1");
            _testDataProvider.trackAllColumnsForAutosizing(sheet);
            Row row = sheet.createRow(0);
            Cell cell0 = row.createCell(0);

            String longValue = "www.hostname.com, www.hostname.com, " +
                    "www.hostname.com, www.hostname.com, www.hostname.com, " +
                    "www.hostname.com, www.hostname.com, www.hostname.com, " +
                    "www.hostname.com, www.hostname.com, www.hostname.com, " +
                    "www.hostname.com, www.hostname.com, www.hostname.com, " +
                    "www.hostname.com, www.hostname.com, www.hostname.com, www.hostname.com";

            cell0.setCellValue(longValue);

            // autoSize will fail if required fonts are not installed, skip this test then
            Font font = wb.getFontAt(cell0.getCellStyle().getFontIndex());
            assumeTrue(SheetUtil.canComputeColumnWidth(font),
               "Cannot verify autoSizeColumn() because the necessary Fonts are not installed on this machine: " + font);

            assertEquals(0, cell0.getCellStyle().getIndention(), "Expecting no indentation in this test");
            assertEquals(0, cell0.getCellStyle().getRotation(), "Expecting no rotation in this test");

            // check computing size up to a large size
//        StringBuilder b = new StringBuilder();
//        for(int i = 0;i < longValue.length()*5;i++) {
//            b.append("w");
//            assertTrue("Had zero length starting at length " + i, computeCellWidthFixed(font, b.toString()) > 0);
//        }
            double widthManual = computeCellWidthManually(cell0, font);
            double widthBeforeCell = SheetUtil.getCellWidth(cell0, 8, null, false);
            double widthBeforeCol = SheetUtil.getColumnWidth(sheet, 0, false);

            String info = widthManual + "/" + widthBeforeCell + "/" + widthBeforeCol + "/" +
                    SheetUtil.canComputeColumnWidth(font) + "/" + computeCellWidthFixed(font, "1") + "/" + computeCellWidthFixed(font, "w") + "/" +
                    computeCellWidthFixed(font, "1w") + "/" + computeCellWidthFixed(font, "0000") + "/" + computeCellWidthFixed(font, longValue);
            assertTrue(widthManual > 0, "Expected to have cell width > 0 when computing manually, but had " + info);
            assertTrue(widthBeforeCell > 0, "Expected to have cell width > 0 BEFORE auto-size, but had " + info);
            assertTrue(widthBeforeCol > 0, "Expected to have column width > 0 BEFORE auto-size, but had " + info);

            sheet.autoSizeColumn(0);

            double width = SheetUtil.getColumnWidth(sheet, 0, false);
            assertTrue(width > 0, "Expected to have column width > 0 AFTER auto-size, but had " + width);
            width = SheetUtil.getCellWidth(cell0, 8, null, false);
            assertTrue(width > 0, "Expected to have cell width > 0 AFTER auto-size, but had " + width);

            assertEquals(255 * 256, sheet.getColumnWidth(0)); // maximum column width is 255 characters
            sheet.setColumnWidth(0, sheet.getColumnWidth(0)); // Bug 50681 reports exception at this point
        }
    }

