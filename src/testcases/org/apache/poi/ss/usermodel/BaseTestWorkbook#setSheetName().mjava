    /**
     * Ensure that Workbook#setSheetName updates all dependent formulas and named ranges
     *
     * @see <a href="https://issues.apache.org/bugzilla/show_bug.cgi?id=47100">Bugzilla 47100</a>
     */
    @Test
    protected void setSheetName() throws IOException {
        try (Workbook wb1 = newSetSheetNameTestingWorkbook()) {
            Sheet sh1 = wb1.getSheetAt(0);

            Name sale_2 = wb1.getName("sale_2");
            Name sale_3 = wb1.getName("sale_3");
            Name sale_4 = wb1.getName("sale_4");

            assertEquals("sale_2", sale_2.getNameName());
            assertEquals("'Testing 47100'!$A$1", sale_2.getRefersToFormula());
            assertEquals("sale_3", sale_3.getNameName());
            assertEquals("'Testing 47100'!$B$1", sale_3.getRefersToFormula());
            assertEquals("sale_4", sale_4.getNameName());
            assertEquals("'To be renamed'!$A$3", sale_4.getRefersToFormula());

            FormulaEvaluator evaluator = wb1.getCreationHelper().createFormulaEvaluator();

            Cell cell0 = sh1.getRow(0).getCell(0);
            Cell cell1 = sh1.getRow(1).getCell(0);
            Cell cell2 = sh1.getRow(2).getCell(0);

            assertEquals("SUM('Testing 47100'!A1:C1)", cell0.getCellFormula());
            assertEquals("SUM('Testing 47100'!A1:C1,'To be renamed'!A1:A5)", cell1.getCellFormula());
            assertEquals("sale_2+sale_3+'Testing 47100'!C1", cell2.getCellFormula());

            assertEquals(6.0, evaluator.evaluate(cell0).getNumberValue(), 0);
            assertEquals(21.0, evaluator.evaluate(cell1).getNumberValue(), 0);
            assertEquals(6.0, evaluator.evaluate(cell2).getNumberValue(), 0);

            wb1.setSheetName(1, "47100 - First");
            wb1.setSheetName(2, "47100 - Second");

            assertEquals("sale_2", sale_2.getNameName());
            assertEquals("'47100 - First'!$A$1", sale_2.getRefersToFormula());
            assertEquals("sale_3", sale_3.getNameName());
            assertEquals("'47100 - First'!$B$1", sale_3.getRefersToFormula());
            assertEquals("sale_4", sale_4.getNameName());
            assertEquals("'47100 - Second'!$A$3", sale_4.getRefersToFormula());

            assertEquals("SUM('47100 - First'!A1:C1)", cell0.getCellFormula());
            assertEquals("SUM('47100 - First'!A1:C1,'47100 - Second'!A1:A5)", cell1.getCellFormula());
            assertEquals("sale_2+sale_3+'47100 - First'!C1", cell2.getCellFormula());

            evaluator.clearAllCachedResultValues();
            assertEquals(6.0, evaluator.evaluate(cell0).getNumberValue(), 0);
            assertEquals(21.0, evaluator.evaluate(cell1).getNumberValue(), 0);
            assertEquals(6.0, evaluator.evaluate(cell2).getNumberValue(), 0);

            try (Workbook wb2 = _testDataProvider.writeOutAndReadBack(wb1)) {
                sh1 = wb2.getSheetAt(0);

                sale_2 = wb2.getName("sale_2");
                sale_3 = wb2.getName("sale_3");
                sale_4 = wb2.getName("sale_4");

                cell0 = sh1.getRow(0).getCell(0);
                cell1 = sh1.getRow(1).getCell(0);
                cell2 = sh1.getRow(2).getCell(0);

                assertEquals("sale_2", sale_2.getNameName());
                assertEquals("'47100 - First'!$A$1", sale_2.getRefersToFormula());
                assertEquals("sale_3", sale_3.getNameName());
                assertEquals("'47100 - First'!$B$1", sale_3.getRefersToFormula());
                assertEquals("sale_4", sale_4.getNameName());
                assertEquals("'47100 - Second'!$A$3", sale_4.getRefersToFormula());

                assertEquals("SUM('47100 - First'!A1:C1)", cell0.getCellFormula());
                assertEquals("SUM('47100 - First'!A1:C1,'47100 - Second'!A1:A5)", cell1.getCellFormula());
                assertEquals("sale_2+sale_3+'47100 - First'!C1", cell2.getCellFormula());

                evaluator = wb2.getCreationHelper().createFormulaEvaluator();
                assertEquals(6.0, evaluator.evaluate(cell0).getNumberValue(), 0);
                assertEquals(21.0, evaluator.evaluate(cell1).getNumberValue(), 0);
                assertEquals(6.0, evaluator.evaluate(cell2).getNumberValue(), 0);
            }
        }
    }

