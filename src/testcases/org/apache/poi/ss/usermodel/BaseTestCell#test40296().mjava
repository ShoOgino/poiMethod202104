    /**
     * Bug 40296:      HSSFCell.setCellFormula throws
     *   ClassCastException if cell is created using HSSFRow.createCell(short column, int type)
     */
    @Test
    void test40296() throws Exception {
        try (Workbook wb1 = _testDataProvider.createWorkbook()) {
            Sheet workSheet = wb1.createSheet("Sheet1");
            Cell cell;
            Row row = workSheet.createRow(0);

            cell = row.createCell(0, CellType.NUMERIC);
            cell.setCellValue(1.0);
            assertEquals(CellType.NUMERIC, cell.getCellType());
            assertEquals(1.0, cell.getNumericCellValue(), 0.0);

            cell = row.createCell(1, CellType.NUMERIC);
            cell.setCellValue(2.0);
            assertEquals(CellType.NUMERIC, cell.getCellType());
            assertEquals(2.0, cell.getNumericCellValue(), 0.0);

            cell = row.createCell(2, CellType.FORMULA);
            cell.setCellFormula("SUM(A1:B1)");
            assertEquals(CellType.FORMULA, cell.getCellType());
            assertEquals("SUM(A1:B1)", cell.getCellFormula());

            //serialize and check again
            try (Workbook wb2 = _testDataProvider.writeOutAndReadBack(wb1)) {
                row = wb2.getSheetAt(0).getRow(0);
                cell = row.getCell(0);
                assertEquals(CellType.NUMERIC, cell.getCellType());
                assertEquals(1.0, cell.getNumericCellValue(), 0.0);

                cell = row.getCell(1);
                assertEquals(CellType.NUMERIC, cell.getCellType());
                assertEquals(2.0, cell.getNumericCellValue(), 0.0);

                cell = row.getCell(2);
                assertEquals(CellType.FORMULA, cell.getCellType());
                assertEquals("SUM(A1:B1)", cell.getCellFormula());
            }
        }
    }

