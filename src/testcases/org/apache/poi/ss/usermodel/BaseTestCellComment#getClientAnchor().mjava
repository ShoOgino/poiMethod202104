    @Test
    void getClientAnchor() throws IOException {
        Workbook wb = _testDataProvider.createWorkbook();

        Sheet sheet = wb.createSheet();
        Row row = sheet.createRow(10);
        Cell cell = row.createCell(5);
        CreationHelper factory = wb.getCreationHelper();

        Drawing<?> drawing = sheet.createDrawingPatriarch();

        double r_mul, c_mul;
        if (sheet instanceof HSSFSheet) {
            double rowheight = Units.toEMU(row.getHeightInPoints())/(double)EMU_PER_PIXEL;
            r_mul = 256.0/rowheight;
            double colwidth = sheet.getColumnWidthInPixels(2);
            c_mul = 1024.0/colwidth;
        } else {
            r_mul = c_mul = EMU_PER_PIXEL;
        }

        int dx1 = (int)Math.round(10*c_mul);
        int dy1 = (int)Math.round(10*r_mul);
        int dx2 = (int)Math.round(3*c_mul);
        int dy2 = (int)Math.round(4*r_mul);
        int col1 = cell.getColumnIndex()+1;
        int row1 = row.getRowNum();
        int col2 = cell.getColumnIndex()+2;
        int row2 = row.getRowNum()+1;

        ClientAnchor anchor = drawing.createAnchor(dx1, dy1, dx2, dy2, col1, row1, col2, row2);
        Comment comment = drawing.createCellComment(anchor);
        comment.setVisible(true);
        cell.setCellComment(comment);

        anchor = comment.getClientAnchor();
        assertEquals(dx1, anchor.getDx1());
        assertEquals(dy1, anchor.getDy1());
        assertEquals(dx2, anchor.getDx2());
        assertEquals(dy2, anchor.getDy2());
        assertEquals(col1, anchor.getCol1());
        assertEquals(row1, anchor.getRow1());
        assertEquals(col2, anchor.getCol2());
        assertEquals(row2, anchor.getRow2());

        anchor = factory.createClientAnchor();
        comment = drawing.createCellComment(anchor);
        cell.setCellComment(comment);
        anchor = comment.getClientAnchor();

        if (sheet instanceof HSSFSheet) {
            assertEquals(0, anchor.getCol1());
            assertEquals(0, anchor.getDx1());
            assertEquals(0, anchor.getRow1());
            assertEquals(0, anchor.getDy1());
            assertEquals(0, anchor.getCol2());
            assertEquals(0, anchor.getDx2());
            assertEquals(0, anchor.getRow2());
            assertEquals(0, anchor.getDy2());
        } else {
            // when anchor is initialized without parameters, the comment anchor attributes default to
            // "1, 15, 0, 2, 3, 15, 3, 16" ... see XSSFVMLDrawing.newCommentShape()
            assertEquals( 1, anchor.getCol1());
            assertEquals(15*EMU_PER_PIXEL, anchor.getDx1());
            assertEquals( 0, anchor.getRow1());
            assertEquals( 2*EMU_PER_PIXEL, anchor.getDy1());
            assertEquals( 3, anchor.getCol2());
            assertEquals(15*EMU_PER_PIXEL, anchor.getDx2());
            assertEquals( 3, anchor.getRow2());
            assertEquals(16*EMU_PER_PIXEL, anchor.getDy2());
        }

        wb.close();
    }

