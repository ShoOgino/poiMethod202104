    @Test
    public void testShiftWithComments() throws IOException {
        Workbook wb1 = _testDataProvider.openSampleWorkbook("comments." + _testDataProvider.getStandardFileNameExtension());

        Sheet sheet = wb1.getSheet("Sheet1");
        assertEquals(3, sheet.getLastRowNum());

        // Verify comments are in the position expected
        assertNotNull(sheet.getCellComment(new CellAddress(0,0)));
        assertNull(sheet.getCellComment(new CellAddress(1,0)));
        assertNotNull(sheet.getCellComment(new CellAddress(2,0)));
        assertNotNull(sheet.getCellComment(new CellAddress(3,0)));

        String comment1 = sheet.getCellComment(new CellAddress(0,0)).getString().getString();
        assertEquals(comment1,"comment top row1 (index0)\n");
        String comment3 = sheet.getCellComment(new CellAddress(2,0)).getString().getString();
        assertEquals(comment3,"comment top row3 (index2)\n");
        String comment4 = sheet.getCellComment(new CellAddress(3,0)).getString().getString();
        assertEquals(comment4,"comment top row4 (index3)\n");

        //Workbook wbBack = _testDataProvider.writeOutAndReadBack(wb);

        // Shifting all but first line down to test comments shifting
        sheet.shiftRows(1, sheet.getLastRowNum(), 1, true, true);

        // Test that comments were shifted as expected
        assertEquals(4, sheet.getLastRowNum());
        assertNotNull(sheet.getCellComment(new CellAddress(0,0)));
        assertNull(sheet.getCellComment(new CellAddress(1,0)));
        assertNull(sheet.getCellComment(new CellAddress(2,0)));
        assertNotNull(sheet.getCellComment(new CellAddress(3,0)));
        assertNotNull(sheet.getCellComment(new CellAddress(4,0)));

        String comment1_shifted = sheet.getCellComment(new CellAddress(0,0)).getString().getString();
        assertEquals(comment1,comment1_shifted);
        String comment3_shifted = sheet.getCellComment(new CellAddress(3,0)).getString().getString();
        assertEquals(comment3,comment3_shifted);
        String comment4_shifted = sheet.getCellComment(new CellAddress(4,0)).getString().getString();
        assertEquals(comment4,comment4_shifted);

        // Write out and read back in again
        // Ensure that the changes were persisted
        Workbook wb2 = _testDataProvider.writeOutAndReadBack(wb1);
        wb1.close();

        sheet = wb2.getSheet("Sheet1");
        assertEquals(4, sheet.getLastRowNum());

        // Verify comments are in the position expected after the shift
        assertNotNull(sheet.getCellComment(new CellAddress(0,0)));
        assertNull(sheet.getCellComment(new CellAddress(1,0)));
        assertNull(sheet.getCellComment(new CellAddress(2,0)));
        assertNotNull(sheet.getCellComment(new CellAddress(3,0)));
        assertNotNull(sheet.getCellComment(new CellAddress(4,0)));

        comment1_shifted = sheet.getCellComment(new CellAddress(0,0)).getString().getString();
        assertEquals(comment1,comment1_shifted);
        comment3_shifted = sheet.getCellComment(new CellAddress(3,0)).getString().getString();
        assertEquals(comment3,comment3_shifted);
        comment4_shifted = sheet.getCellComment(new CellAddress(4,0)).getString().getString();
        assertEquals(comment4,comment4_shifted);

        // Shifting back up again, now two rows
        sheet.shiftRows(2, sheet.getLastRowNum(), -2, true, true);

        // TODO: it seems HSSFSheet does not correctly remove comments from rows that are overwritten
        // by shifting rows...
        if(!(wb2 instanceof HSSFWorkbook)) {
            assertEquals(2, sheet.getLastRowNum());

            // Verify comments are in the position expected
            assertNull(sheet.getCellComment(new CellAddress(0,0)),
                "Had: " + (sheet.getCellComment(new CellAddress(0,0)) == null ? "null" : sheet.getCellComment(new CellAddress(0,0)).getString()));
            assertNotNull(sheet.getCellComment(new CellAddress(1,0)));
            assertNotNull(sheet.getCellComment(new CellAddress(2,0)));
        }

        comment1 = sheet.getCellComment(new CellAddress(1,0)).getString().getString();
        assertEquals(comment1,"comment top row3 (index2)\n");
        String comment2 = sheet.getCellComment(new CellAddress(2,0)).getString().getString();
        assertEquals(comment2,"comment top row4 (index3)\n");

        wb2.close();
    }

