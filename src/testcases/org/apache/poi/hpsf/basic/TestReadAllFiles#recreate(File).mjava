    /**
     * This test method does a write and read back test with all POI
     * filesystems in the "data" directory by performing the following
     * actions for each file:<p>
     *
     * <ul>
     * <li>Read its property set streams.
     * <li>Create a new POI filesystem containing the origin file's property set streams.
     * <li>Read the property set streams from the POI filesystem just created.
     * <li>Compare each property set stream with the corresponding one from
     * the origin file and check whether they are equal.
     * </ul>
     */
    @ParameterizedTest
    @MethodSource("files")
    public void recreate(File file) throws IOException, HPSFException {
        /* Read the POI filesystem's property set streams: */
        Map<String,PropertySet> psMap = new HashMap<>();

        /* Create a new POI filesystem containing the origin file's
         * property set streams: */
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        final POIFSFileSystem poiFs = new POIFSFileSystem();
        for (POIFile poifile : Util.readPropertySets(file)) {
            final InputStream in = new ByteArrayInputStream(poifile.getBytes());
            final PropertySet psIn = PropertySetFactory.create(in);
            psMap.put(poifile.getName(), psIn);
            bos.reset();
            psIn.write(bos);
            poiFs.createDocument(new ByteArrayInputStream(bos.toByteArray()), poifile.getName());
        }

        /* Read the property set streams from the POI filesystem just
         * created. */
        for (Map.Entry<String,PropertySet> me : psMap.entrySet()) {
            final PropertySet ps1 = me.getValue();
            final PropertySet ps2 = PropertySetFactory.create(poiFs.getRoot(), me.getKey());
            assertNotNull(ps2);

            /* Compare the property set stream with the corresponding one
             * from the origin file and check whether they are equal. */

            // Because of missing 0-paddings in the original input files, the bytes might differ.
            // This fixes the comparison
            String ps1str = ps1.toString().replace(" 00", "   ").replace(".", " ").replaceAll("(?m)( +$|(size|offset): [0-9]+)","");
            String ps2str = ps2.toString().replace(" 00", "   ").replace(".", " ").replaceAll("(?m)( +$|(size|offset): [0-9]+)","");

            assertEquals(ps1str, ps2str, "Equality for file " + file.getName());
        }
        poiFs.close();
    }

