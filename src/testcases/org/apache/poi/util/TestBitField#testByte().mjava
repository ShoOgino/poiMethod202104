    @Test
    void testByte() {
        assertEquals(1, BitFieldFactory.getInstance(1).setByteBoolean(( byte ) 0, true));
        assertEquals(2, BitFieldFactory.getInstance(2).setByteBoolean(( byte ) 0, true));
        assertEquals(4, BitFieldFactory.getInstance(4).setByteBoolean(( byte ) 0, true));
        assertEquals(8, BitFieldFactory.getInstance(8).setByteBoolean(( byte ) 0, true));
        assertEquals(16, BitFieldFactory.getInstance(16).setByteBoolean(( byte ) 0, true));
        assertEquals(32, BitFieldFactory.getInstance(32).setByteBoolean(( byte ) 0, true));
        assertEquals(64, BitFieldFactory.getInstance(64).setByteBoolean(( byte ) 0, true));
        assertEquals(-128,
                     BitFieldFactory.getInstance(128).setByteBoolean(( byte ) 0, true));
        assertEquals(0, BitFieldFactory.getInstance(1).setByteBoolean(( byte ) 1, false));
        assertEquals(0, BitFieldFactory.getInstance(2).setByteBoolean(( byte ) 2, false));
        assertEquals(0, BitFieldFactory.getInstance(4).setByteBoolean(( byte ) 4, false));
        assertEquals(0, BitFieldFactory.getInstance(8).setByteBoolean(( byte ) 8, false));
        assertEquals(0, BitFieldFactory.getInstance(16).setByteBoolean(( byte ) 16, false));
        assertEquals(0, BitFieldFactory.getInstance(32).setByteBoolean(( byte ) 32, false));
        assertEquals(0, BitFieldFactory.getInstance(64).setByteBoolean(( byte ) 64, false));
        assertEquals(0, BitFieldFactory.getInstance(128).setByteBoolean(( byte ) 128,
                                     false));
        assertEquals(-2, BitFieldFactory.getInstance(1).setByteBoolean(( byte ) 255, false));
        byte clearedBit = BitFieldFactory.getInstance(0x40).setByteBoolean(( byte ) -63,
                                       false);

        assertFalse(BitFieldFactory.getInstance(0x40).isSet(clearedBit));
    }

