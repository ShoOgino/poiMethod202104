    @Override
    public void readValue(InputStream value) throws IOException {
        // Stored in the file as us-ascii
        byte[] data = IOUtils.toByteArray(value);
        rawId = new String(data, Charset.forName("ASCII"));

        // Now process the date
        String[] parts = rawId.split(";");
        for (String part : parts) {
            if (part.startsWith("l=")) {
                // Format of this bit appears to be l=<id>-<time>-<number>
                // ID may contain hyphens.

                String dateS = null;
                final int numberPartBegin = part.lastIndexOf('-');
                if (numberPartBegin != -1) {
                    final int datePartBegin = part.lastIndexOf('-',
                            numberPartBegin - 1);
                    if (datePartBegin != -1 &&
                    // cannot extract date if only one hyphen is in the
                    // string...
                            numberPartBegin > datePartBegin) {
                        dateS = part.substring(datePartBegin + 1,
                                numberPartBegin);
                    }
                }
                if (dateS != null) {
                    // Should be yymmddhhmmssZ
                    Matcher m = datePatern.matcher(dateS);
                    if (m.matches()) {
                        date = LocaleUtil.getLocaleCalendar();

                        // work around issues with dates like 1989, which appear as "89" here
                        int year = Integer.parseInt(m.group(1));
                        date.set(Calendar.YEAR, year + (year > 80 ? 1900 : 2000));

                        // Java is 0 based
                        date.set(Calendar.MONTH, Integer.parseInt(m.group(2)) - 1);
                        date.set(Calendar.DATE, Integer.parseInt(m.group(3)));
                        date.set(Calendar.HOUR_OF_DAY,
                                Integer.parseInt(m.group(4)));
                        date.set(Calendar.MINUTE, Integer.parseInt(m.group(5)));
                        date.set(Calendar.SECOND, Integer.parseInt(m.group(6)));
                        date.clear(Calendar.MILLISECOND);
                    } else {
                        LOG.atWarn().log("Warning - unable to make sense of date {}", dateS);
                    }
                }
            }
        }
    }

