   /**
    * Gets the html body of this Outlook Message, if this email
    *  contains a html version.
    * @return The string representation of the 'html' version of the body, if available.
    * @throws ChunkNotFoundException If the html-body chunk does not exist and
    *       returnNullOnMissingChunk is set
    */
   public String getHtmlBody() throws ChunkNotFoundException {
      ByteChunk htmlBodyBinaryChunk = mainChunks.getHtmlBodyChunkBinary();
      if (htmlBodyBinaryChunk != null) {
         List<PropertyValue> cpid = mainChunks.getProperties().get(MAPIProperty.INTERNET_CPID);
         if (cpid != null && cpid.size() > 0) {
            int codepage = ((LongPropertyValue) cpid.get(0)).getValue();
            try {
               String encoding = CodePageUtil.codepageToEncoding(codepage, true);
               byte[] htmlBodyBinary = htmlBodyBinaryChunk.getValue();
               return new String(htmlBodyBinary, encoding);
            } catch (UnsupportedEncodingException e) {
                LOG.atWarn().log("HTML body binary: Invalid codepage ID {} set for the message via {}, ignoring", box(codepage), MAPIProperty.INTERNET_CPID);
            }
         }
         return htmlBodyBinaryChunk.getAs7bitString();
      }
      return getStringFromChunk(mainChunks.getHtmlBodyChunkString());
   }

