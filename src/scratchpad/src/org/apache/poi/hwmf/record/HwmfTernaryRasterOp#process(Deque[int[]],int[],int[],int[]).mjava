    public void process(Deque<int[]> stack, int[] dst, int[] src, int[] pat) {
        for (char op : calcCmd().toCharArray()) {
            switch (op) {
                case 'S': opS(stack, dst, src, pat); break;
                case 'P': opP(stack, dst, src, pat); break;
                case 'D': opD(stack, dst, src, pat); break;
                case 'n': opN(stack, dst, src, pat); break;
                case 'a': opA(stack, dst, src, pat); break;
                case 'o': opO(stack, dst, src, pat); break;
                case 'x': opX(stack, dst, src, pat); break;
                case '1': op1(stack, dst, src, pat); break;
                case '0': op0(stack, dst, src, pat); break;
                default: throw new IllegalStateException();
            }
        }
    }

