    /**
     * Test styles for type=TextHeaderAtom.BODY_TYPE
     */
    private void checkBodyType(TxMasterStyleAtom txmaster){
        TextPropCollection props;
        TextProp prop;

        List<TextPropCollection> prstyles = txmaster.getParagraphStyles();
        List<TextPropCollection> chstyles = txmaster.getCharacterStyles();
        assertEquals(5, prstyles.size(), "TxMasterStyleAtom for TextHeaderAtom.BODY_TYPE must contain styles for 5 indentation levels");
        assertEquals(5, chstyles.size(), "TxMasterStyleAtom for TextHeaderAtom.BODY_TYPE must contain styles for 5 indentation levels");

        //paragraph styles
        props = prstyles.get(0);

        prop = props.findByName("alignment");
        assertEquals(0, prop.getValue());


        for (int i = 0; i < prstyles.size(); i++) {
            assertNotNull(prstyles.get(i).findByName("text.offset"), "text.offset is null for indentation level " + i);
            assertNotNull(prstyles.get(i).findByName("bullet.offset"), "bullet.offset is null for indentation level " + i);
        }

        //character styles
        props = chstyles.get(0);

        prop = props.findByName("font.color");
        assertEquals(0x1000000, prop.getValue());

        prop = props.findByName("font.index");
        assertEquals(0, prop.getValue());

        prop = props.findByName("font.size");
        assertEquals(32, prop.getValue());
    }

