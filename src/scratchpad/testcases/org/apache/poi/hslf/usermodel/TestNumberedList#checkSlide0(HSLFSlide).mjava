    private void checkSlide0(final HSLFSlide s) {
		final StyleTextProp9Atom[] numberedListArray = s.getNumberedListInfo();
		assertNotNull(numberedListArray);
		assertEquals(1, numberedListArray.length);//Just one text box here
		final StyleTextProp9Atom numberedListInfo = numberedListArray[0];
		assertNotNull(numberedListInfo);
		final TextPFException9[] autoNumbers = numberedListInfo.getAutoNumberTypes();
		assertNotNull(autoNumbers);
		assertEquals(4, autoNumbers.length);
        assertEquals(4, (short) autoNumbers[0].getAutoNumberStartNumber());
		assertNull(autoNumbers[1].getAutoNumberStartNumber());
        assertEquals(3, (short) autoNumbers[2].getAutoNumberStartNumber());
        assertSame(AutoNumberingScheme.arabicPeriod, autoNumbers[0].getAutoNumberScheme());
		assertNull(autoNumbers[1].getAutoNumberScheme());
        assertSame(AutoNumberingScheme.alphaLcParenRight, autoNumbers[2].getAutoNumberScheme());

		List<List<HSLFTextParagraph>> textParass = s.getTextParagraphs();
		assertEquals(2, textParass.size());

		List<HSLFTextParagraph> textParas = textParass.get(0);
		assertEquals("titTe", HSLFTextParagraph.getRawText(textParas));
		assertEquals(1, textParas.size());
		assertFalse(textParas.get(0).isBullet());

		String expected =
	        "This is a text placeholder that \r" +
	        "follows the design pattern\r" +
	        "Just a test\rWithout any paragraph\r" +
	        "Second paragraph first line c) ;\r" +
	        "Second paragraph second line d) . \r";
		assertEquals(expected, HSLFTextParagraph.getRawText(textParass.get(1)));

		final EscherTextboxWrapper[] styleAtoms = s.getTextboxWrappers();
		assertEquals(textParass.size(), styleAtoms.length);
		final EscherTextboxWrapper wrapper =  styleAtoms[1];
		final StyleTextPropAtom styleTextPropAtom = wrapper.getStyleTextPropAtom();
		final List<TextPropCollection> textProps = styleTextPropAtom.getCharacterStyles();
		assertEquals(60, textProps.get(0).getCharactersCovered());
		assertEquals(34, textProps.get(1).getCharactersCovered());
		assertEquals(68, textProps.get(2).getCharactersCovered());
	}

