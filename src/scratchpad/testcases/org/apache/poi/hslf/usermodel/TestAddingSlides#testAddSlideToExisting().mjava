    /**
     * Test adding a slide to an existing slideshow
     */
    @Test
    void testAddSlideToExisting() throws IOException {
        // Has one slide
        assertEquals(1, ss_one.getSlides().size());
        HSLFSlide s1 = ss_one.getSlides().get(0);

        // Should have two SLTWs
        assertEquals(2, ss_one.getDocumentRecord().getSlideListWithTexts().length);

        // Check slide 1 is as expected
        assertEquals(256, s1._getSheetNumber());
        assertEquals(3, s1._getSheetRefId());
        assertEquals(1, s1.getSlideNumber());

        // Add a second one
        HSLFSlide s2 = ss_one.createSlide();
        assertEquals(2, ss_one.getSlides().size());
        assertEquals(257, s2._getSheetNumber());
        assertEquals(4, s2._getSheetRefId());
        assertEquals(2, s2.getSlideNumber());

        // Write out, and read back in
        HSLFSlideShow ss_read = HSLFTestDataSamples.writeOutAndReadBack(ss_one);

        // Check it now has two slides
        assertEquals(2, ss_read.getSlides().size());

        // Should still have two SLTWs
        assertEquals(2,
                ss_read.getDocumentRecord().getSlideListWithTexts().length);

        // And check it's as expected
        s1 = ss_read.getSlides().get(0);
        s2 = ss_read.getSlides().get(1);
        assertEquals(256, s1._getSheetNumber());
        assertEquals(3, s1._getSheetRefId());
        assertEquals(1, s1.getSlideNumber());
        assertEquals(257, s2._getSheetNumber());
        assertEquals(4, s2._getSheetRefId());
        assertEquals(2, s2.getSlideNumber());
        ss_read.close();
    }

