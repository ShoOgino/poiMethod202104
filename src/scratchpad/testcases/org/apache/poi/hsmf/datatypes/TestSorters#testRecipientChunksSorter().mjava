   @Test
   public void testRecipientChunksSorter() {
      RecipientChunks[] chunks;

      // Simple
      chunks = new RecipientChunks[] {
            new RecipientChunks("__recip_version1.0_#00000001"),
            new RecipientChunks("__recip_version1.0_#00000000"),
      };
      Arrays.sort(chunks, new RecipientChunksSorter());
      assertEquals(0, chunks[0].getRecipientNumber());
      assertEquals(1, chunks[1].getRecipientNumber());

      // Lots, with gaps
      chunks = new RecipientChunks[] {
            new RecipientChunks("__recip_version1.0_#00020001"),
            new RecipientChunks("__recip_version1.0_#000000FF"),
            new RecipientChunks("__recip_version1.0_#00000205"),
            new RecipientChunks("__recip_version1.0_#00000001"),
            new RecipientChunks("__recip_version1.0_#00000005"),
            new RecipientChunks("__recip_version1.0_#00000009"),
            new RecipientChunks("__recip_version1.0_#00000404"),
            new RecipientChunks("__recip_version1.0_#00000000"),
      };
      Arrays.sort(chunks, new RecipientChunksSorter());
      assertEquals(0, chunks[0].getRecipientNumber());
      assertEquals(1, chunks[1].getRecipientNumber());
      assertEquals(5, chunks[2].getRecipientNumber());
      assertEquals(9, chunks[3].getRecipientNumber());
      assertEquals(0xFF, chunks[4].getRecipientNumber());
      assertEquals(0x205, chunks[5].getRecipientNumber());
      assertEquals(0x404, chunks[6].getRecipientNumber());
      assertEquals(0x20001, chunks[7].getRecipientNumber());
   }

