    @Test
    void testMultiLevelLists() throws IOException {
        try (HWPFDocument doc = openSampleFile("Lists.doc")) {
            Range r = doc.getRange();
            assertEquals(40, r.numParagraphs());

            assertEquals("Multi-level un-ordered list:\r", r.getParagraph(12).text());
            assertEquals("ML 1:1\r", r.getParagraph(13).text());
            assertEquals("ML 1:2\r", r.getParagraph(14).text());
            assertEquals("ML 2:1\r", r.getParagraph(15).text());
            assertEquals("ML 2:2\r", r.getParagraph(16).text());
            assertEquals("ML 2:3\r", r.getParagraph(17).text());
            assertEquals("ML 3:1\r", r.getParagraph(18).text());
            assertEquals("ML 4:1\r", r.getParagraph(19).text());
            assertEquals("ML 5:1\r", r.getParagraph(20).text());
            assertEquals("ML 5:2\r", r.getParagraph(21).text());
            assertEquals("ML 2:4\r", r.getParagraph(22).text());
            assertEquals("ML 1:3\r", r.getParagraph(23).text());
            assertEquals("Multi-level ordered list:\r", r.getParagraph(24).text());
            assertEquals("OL 1\r", r.getParagraph(25).text());
            assertEquals("OL 2\r", r.getParagraph(26).text());
            assertEquals("OL 2.1\r", r.getParagraph(27).text());
            assertEquals("OL 2.2\r", r.getParagraph(28).text());
            assertEquals("OL 2.2.1\r", r.getParagraph(29).text());
            assertEquals("OL 2.2.2\r", r.getParagraph(30).text());
            assertEquals("OL 2.2.2.1\r", r.getParagraph(31).text());
            assertEquals("OL 2.2.3\r", r.getParagraph(32).text());
            assertEquals("OL 3\r", r.getParagraph(33).text());
            assertEquals("Finally we want some indents, to tell the difference\r", r.getParagraph(34).text());

            for (int i = 12; i <= 34; i++) {
                assertEquals(9, r.getParagraph(12).getLvl());
            }
            assertEquals(0, r.getParagraph(12).getIlvl());
            assertEquals(0, r.getParagraph(13).getIlvl());
            assertEquals(0, r.getParagraph(14).getIlvl());
            assertEquals(1, r.getParagraph(15).getIlvl());
            assertEquals(1, r.getParagraph(16).getIlvl());
            assertEquals(1, r.getParagraph(17).getIlvl());
            assertEquals(2, r.getParagraph(18).getIlvl());
            assertEquals(3, r.getParagraph(19).getIlvl());
            assertEquals(4, r.getParagraph(20).getIlvl());
            assertEquals(4, r.getParagraph(21).getIlvl());
            assertEquals(1, r.getParagraph(22).getIlvl());
            assertEquals(0, r.getParagraph(23).getIlvl());
            assertEquals(0, r.getParagraph(24).getIlvl());
            assertEquals(0, r.getParagraph(25).getIlvl());
            assertEquals(0, r.getParagraph(26).getIlvl());
            assertEquals(1, r.getParagraph(27).getIlvl());
            assertEquals(1, r.getParagraph(28).getIlvl());
            assertEquals(2, r.getParagraph(29).getIlvl());
            assertEquals(2, r.getParagraph(30).getIlvl());
            assertEquals(3, r.getParagraph(31).getIlvl());
            assertEquals(2, r.getParagraph(32).getIlvl());
            assertEquals(0, r.getParagraph(33).getIlvl());
            assertEquals(0, r.getParagraph(34).getIlvl());
        }
    }

