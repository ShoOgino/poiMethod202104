    /**
     * Check that we do the positions correctly when working with a mix ascii,
     * unicode file
     */
    @Test
    void testUnicodeParts() throws Exception {
        HWPFDocument doc = HWPFTestDataSamples
                .openSampleFile("HeaderFooterUnicode.doc");
        TextPieceTable tbl = doc.getTextTable();

        // In three bits, split every 512 bytes
        assertEquals(3, tbl.getTextPieces().size());
        TextPiece tpA = tbl.getTextPieces().get(0);
        TextPiece tpB = tbl.getTextPieces().get(1);
        TextPiece tpC = tbl.getTextPieces().get(2);

        assertTrue(tpA.isUnicode());
        assertTrue(tpB.isUnicode());
        assertTrue(tpC.isUnicode());

        assertEquals(256, tpA.characterLength());
        assertEquals(256, tpB.characterLength());
        assertEquals(19, tpC.characterLength());

        assertEquals(512, tpA.bytesLength());
        assertEquals(512, tpB.bytesLength());
        assertEquals(38, tpC.bytesLength());

        assertEquals(0, tpA.getStart());
        assertEquals(256, tpA.getEnd());
        assertEquals(256, tpB.getStart());
        assertEquals(512, tpB.getEnd());
        assertEquals(512, tpC.getStart());
        assertEquals(531, tpC.getEnd());

        // Save and re-load
        HWPFDocument docB = saveAndReload(doc);
        tbl = docB.getTextTable();

        assertEquals(3, tbl.getTextPieces().size());
        tpA = tbl.getTextPieces().get(0);
        tpB = tbl.getTextPieces().get(1);
        tpC = tbl.getTextPieces().get(2);

        assertTrue(tpA.isUnicode());
        assertTrue(tpB.isUnicode());
        assertTrue(tpC.isUnicode());

        assertEquals(256, tpA.characterLength());
        assertEquals(256, tpB.characterLength());
        assertEquals(19, tpC.characterLength());

        assertEquals(512, tpA.bytesLength());
        assertEquals(512, tpB.bytesLength());
        assertEquals(38, tpC.bytesLength());

        assertEquals(0, tpA.getStart());
        assertEquals(256, tpA.getEnd());
        assertEquals(256, tpB.getStart());
        assertEquals(512, tpB.getEnd());
        assertEquals(512, tpC.getStart());
        assertEquals(531, tpC.getEnd());
    }

