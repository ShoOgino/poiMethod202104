    void handleWrongOLE2XMLExtension(File inputFile, Exception e) throws Exception {
		// we sometimes have wrong extensions, so for some exceptions we try to handle it
		// with the correct FileHandler instead
		String message = e.getMessage();

		// ignore some file-types that we do not want to handle here
		assumeFalse( message != null && (message.equals("The document is really a RTF file") ||
					message.equals("The document is really a PDF file") ||
					message.equals("The document is really a HTML file")), "File " + file + " excluded because it is actually a PDF/RTF/HTML file" );

		if(message != null && (message.equals("The document is really a XLS file"))) {
			handler = new HSSFFileHandler();
		} else if(message != null && (message.equals("The document is really a PPT file"))) {
			handler = new HSLFFileHandler();
		} else if(message != null && (message.equals("The document is really a DOC file"))) {
			handler = new HWPFFileHandler();
		} else if(message != null && (message.equals("The document is really a VSD file"))) {
			handler = new HDGFFileHandler();

		// use XWPF instead of HWPF and XSSF instead of HSSF as the file seems to have the wrong extension
		} else if (handler instanceof HWPFFileHandler) {
            handler = new XWPFFileHandler();
        } else if (handler instanceof HSSFFileHandler) {
            handler = new XSSFFileHandler();
        } else if (handler instanceof HSLFFileHandler) {
			handler = new XSLFFileHandler();

		// and the other way around, use HWPF instead of XWPF and so forth
		} else if(handler instanceof XWPFFileHandler) {
			handler = new HWPFFileHandler();
		} else if(handler instanceof XSSFFileHandler) {
			handler = new HSSFFileHandler();
		} else if(handler instanceof XSLFFileHandler) {
			handler = new HSLFFileHandler();
        } else {
			// nothing matched => throw the exception to the outside
			throw e;
		}

		// we found a different handler to try processing again
		handleFile(inputFile);
	}

