    public static void handleWorkbook(HSSFWorkbook wb) {
        List<org.apache.poi.hssf.record.Record> records = wb.getWorkbook().getRecords();
        for(org.apache.poi.hssf.record.Record record : records) {
            // some Records do not implement clone ?!
            // equals instead of instanceof is on purpose here to only skip exactly this class and not any derived ones
//            if(record.getClass().equals(InterfaceHdrRecord.class) ||
//                    record.getClass().equals(MMSRecord.class) ||
//                    record.getClass().equals(InterfaceEndRecord.class) ||
//                    record.getClass().equals(WriteAccessRecord.class) ||
//                    record.getClass().equals(CodepageRecord.class) ||
//                    record.getClass().equals(DSFRecord.class)) {
//                continue;
//            }
            try {
                Record newRecord = record.copy();

                assertEquals( record.getClass(), newRecord.getClass(), "Expecting the same class back from clone(), but had Record of type " + record.getClass() + " and got back a " + newRecord.getClass() + " from clone()" );

                byte[] origBytes = record.serialize();
                byte[] newBytes = newRecord.serialize();

                assertArrayEquals( origBytes, newBytes, "Record of type " + record.getClass() + " should return the same byte array via the clone() method, but did return a different array" );
            } catch (RuntimeException e) {
                // some Records do not implement clone, ignore those for now
                assertTrue(e.getMessage().contains("needs to define a clone method"));
            }
        }
    }

