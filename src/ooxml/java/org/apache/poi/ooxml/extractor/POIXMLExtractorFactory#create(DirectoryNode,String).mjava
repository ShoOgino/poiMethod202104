    @Override
    public POITextExtractor create(DirectoryNode poifsDir, String password) throws IOException {
        // First, check for plain OOXML package
        if (poifsDir.hasEntry(OOXML_PACKAGE)) {
            try (InputStream is = poifsDir.createDocumentInputStream(OOXML_PACKAGE)) {
                return create(is, password);
            }
        }

        if (poifsDir.hasEntry(Decryptor.DEFAULT_POIFS_ENTRY)) {
            EncryptionInfo ei = new EncryptionInfo(poifsDir);
            Decryptor dec = ei.getDecryptor();
            try {
                if (!dec.verifyPassword(password)) {
                    throw new IOException("Invalid password specified");
                }
                try (InputStream is = dec.getDataStream(poifsDir)) {
                    return create(is, password);
                } finally {
                    // we should close the underlying file-system as all information
                    // is read now and we should make sure that resources are freed
                    POIFSFileSystem fs = poifsDir.getFileSystem();
                    if (fs != null) {
                        fs.close();
                    }
                }
            } catch (IOException | RuntimeException e) {
                throw e;
            } catch (Exception e) {
                throw new IOException(e);
            }
        }

        throw new IOException("The OLE2 file neither contained a plain OOXML package node (\"Package\") nor an encrypted one (\"EncryptedPackage\").");
    }

