	/**
	 * Save this package into the specified stream
	 *
	 *
	 * @param outputStream
	 *            The stream use to save this package.
	 *
	 * @see #save(OutputStream)
	 */
	@Override
	public void saveImpl(OutputStream outputStream) {
		// Check that the document was open in write mode
		throwExceptionIfReadOnly();

		final ZipArchiveOutputStream zos = (outputStream instanceof ZipArchiveOutputStream)
            ? (ZipArchiveOutputStream) outputStream : new ZipArchiveOutputStream(outputStream);

		try {
			// If the core properties part does not exist in the part list,
			// we save it as well
			if (this.getPartsByRelationshipType(PackageRelationshipTypes.CORE_PROPERTIES).size() == 0 &&
                this.getPartsByRelationshipType(PackageRelationshipTypes.CORE_PROPERTIES_ECMA376).size() == 0    ) {
				LOG.log(POILogger.DEBUG,"Save core properties part");

				// Ensure that core properties are added if missing
				getPackageProperties();
				// Add core properties to part list ...
				addPackagePart(this.packageProperties);
				// ... and to add its relationship ...
				this.relationships.addRelationship(this.packageProperties
						.getPartName().getURI(), TargetMode.INTERNAL,
						PackageRelationshipTypes.CORE_PROPERTIES, null);
				// ... and the content if it has not been added yet.
				if (!this.contentTypeManager
						.isContentTypeRegister(ContentTypes.CORE_PROPERTIES_PART)) {
					this.contentTypeManager.addContentType(
							this.packageProperties.getPartName(),
							ContentTypes.CORE_PROPERTIES_PART);
				}
			}

            // Save content type part.
            LOG.log(POILogger.DEBUG,"Save content types part");
            this.contentTypeManager.save(zos);

			// Save package relationships part.
			LOG.log(POILogger.DEBUG,"Save package relationships");
			ZipPartMarshaller.marshallRelationshipPart(this.getRelationships(),
					PackagingURIHelper.PACKAGE_RELATIONSHIPS_ROOT_PART_NAME,
					zos);

			// Save parts.
			for (PackagePart part : getParts()) {
				// If the part is a relationship part, we don't save it, it's
				// the source part that will do the job.
				if (part.isRelationshipPart()) {
                    continue;
                }

				final PackagePartName ppn = part.getPartName();
				LOG.log(POILogger.DEBUG,"Save part '", ZipHelper.getZipItemNameFromOPCName(ppn.getName()), "'");
				final PartMarshaller marshaller = partMarshallers.get(part._contentType);

				final PartMarshaller pm = (marshaller != null) ? marshaller : defaultPartMarshaller;
                if (!pm.marshall(part, zos)) {
                    String errMsg = "The part " + ppn.getURI() + " failed to be saved in the stream with marshaller " + pm +
                            ". Enable logging via POILogger for more details.";
                    throw new OpenXML4JException(errMsg);
                }
			}

            zos.finish();
		} catch (OpenXML4JRuntimeException e) {
			// no need to wrap this type of Exception
			throw e;
		} catch (Exception e) {
            throw new OpenXML4JRuntimeException(
                "Fail to save: an error occurs while saving the package : "
				+ e.getMessage(), e);
        }
    }

