    /**
     * @param index style definition index or built-in ordinal depending on use
     * @param dxfs
     * @param tableStyle
     * @param colorMap indexed color map - default or custom
     * @see TableStyle#getIndex()
     */
    public XSSFTableStyle(int index, CTDxfs dxfs, CTTableStyle tableStyle, IndexedColorMap colorMap) {
        this.name = tableStyle.getName();
        this.index = index;

        List<CTDxf> dxfList = new ArrayList<>();

        // CT* classes don't handle "mc:AlternateContent" elements, so get the Dxf instances manually
        XmlCursor cur = dxfs.newCursor();
        // sometimes there are namespaces sometimes not.
        String xquery = "declare namespace x='"+XSSFRelation.NS_SPREADSHEETML+"' .//x:dxf | .//dxf";
        cur.selectPath(xquery);
        while (cur.toNextSelection()) {
            XmlObject obj = cur.getObject();
            String parentName = obj.getDomNode().getParentNode().getNodeName();
            // ignore alternate content choices, we won't know anything about their namespaces
            if (parentName.equals("mc:Fallback") || parentName.equals("x:dxfs") || parentName.contentEquals("dxfs")) {
                CTDxf dxf;
                try {
                    if (obj instanceof CTDxf) {
                        dxf = (CTDxf) obj;
                    } else {
                        dxf = CTDxf.Factory.parse(obj.newXMLStreamReader(), new XmlOptions().setDocumentType(CTDxf.type));
                    }
                    if (dxf != null) dxfList.add(dxf);
                } catch (XmlException e) {
                    LOG.log(POILogger.WARN, "Error parsing XSSFTableStyle", e);
                }
            }
        }

        for (CTTableStyleElement element : tableStyle.getTableStyleElementList()) {
            TableStyleType type = TableStyleType.valueOf(element.getType().toString());
            DifferentialStyleProvider dstyle = null;
            if (element.isSetDxfId()) {
                int idx = (int) element.getDxfId();
                CTDxf dxf;
                dxf = dxfList.get(idx);
                int stripeSize = 0;
                if (element.isSetSize()) stripeSize = (int) element.getSize();
                if (dxf != null) dstyle = new XSSFDxfStyleProvider(dxf, stripeSize, colorMap);
            }
            elementMap.put(type, dstyle);
        }
    }

