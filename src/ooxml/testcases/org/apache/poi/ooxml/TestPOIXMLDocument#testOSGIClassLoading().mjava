    @Test
    public void testOSGIClassLoading() throws IOException {
        byte[] data;
        try (InputStream is = POIDataSamples.getSlideShowInstance().openResourceAsStream("table_test.pptx")) {
            data = IOUtils.toByteArray(is);
        }

        // the schema type loader is cached per thread in POIXMLTypeLoader.
        // So create a new Thread and change the context class loader (which would normally be used)
        // to not contain the OOXML classes
        Runnable run = () -> assertDoesNotThrow(() -> {
            try (XMLSlideShow ppt = new XMLSlideShow(new ByteArrayInputStream(data))) {
                assertNotNull(ppt.getSlides().get(0).getShapes());
            }}
        );

        ClassLoader cl = getClass().getClassLoader();
        UncaughtHandler uh = new UncaughtHandler();

        // check schema type loading and check if we could run in an OOM
        Thread[] ta = new Thread[30];
        for (int j=0; j<10; j++) {
            for (int i=0; i<ta.length; i++) {
                ta[i] = new Thread(run);
                ta[i].setContextClassLoader(cl.getParent());
                ta[i].setUncaughtExceptionHandler(uh);
                ta[i].start();
            }
            for (Thread thread : ta) {
                assertDoesNotThrow((Executable) thread::join, "failed to join thread");
            }
        }
        assertFalse(uh.hasException(), "Should not have an exception now, but had " + uh.e);
    }

