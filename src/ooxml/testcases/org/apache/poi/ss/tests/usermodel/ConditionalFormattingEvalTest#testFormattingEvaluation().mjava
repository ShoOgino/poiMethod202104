    @Test
    public void testFormattingEvaluation() {
        sheet = wb.getSheet("Products1");

        getRulesFor(12, 1);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);
        assertEquals("FFFFEB9C", getColor(rules.get(0).getRule().getPatternFormatting().getFillBackgroundColorColor()), "wrong bg color for " + ref);
        assertFalse(rules.get(0).getRule().getFontFormatting().isItalic(), "should not be italic " + ref);

        getRulesFor(16, 3);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);
        assertEquals(0.7999816888943144d, getTint(rules.get(0).getRule().getPatternFormatting().getFillBackgroundColorColor()), 0.000000000000001, "wrong bg color for " + ref);

        getRulesFor(12, 3);
        assertEquals(0, rules.size(), "wrong # of rules for " + ref);

        sheet = wb.getSheet("Products2");

        getRulesFor(15,1);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);
        assertEquals("FFFFEB9C", getColor(rules.get(0).getRule().getPatternFormatting().getFillBackgroundColorColor()), "wrong bg color for " + ref);

        getRulesFor(20,3);
        assertEquals(0, rules.size(), "wrong # of rules for " + ref);

        // now change a cell value that's an input for the rules
        Cell cell = sheet.getRow(1).getCell(6);
        cell.setCellValue("Dairy");
        formulaEval.notifyUpdateCell(cell);
        cell = sheet.getRow(4).getCell(6);
        cell.setCellValue(500);
        formulaEval.notifyUpdateCell(cell);
        // need to throw away all evaluations, since we don't know how value changes may have affected format formulas
        cfe.clearAllCachedValues();

        // test that the conditional validation evaluations changed
        getRulesFor(15,1);
        assertEquals(0, rules.size(), "wrong # of rules for " + ref);

        getRulesFor(20,3);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);
        assertEquals(0.7999816888943144d, getTint(rules.get(0).getRule().getPatternFormatting().getFillBackgroundColorColor()), 0.000000000000001, "wrong bg color for " + ref);

        getRulesFor(20,1);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);
        assertEquals("FFFFEB9C", getColor(rules.get(0).getRule().getPatternFormatting().getFillBackgroundColorColor()), "wrong bg color for " + ref);

        sheet = wb.getSheet("Book tour");

        getRulesFor(8,2);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);

        sheet = wb.getSheet("Compare to totals");
        getRulesFor(3, 2);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);
        assertEquals("FFFF0000", getColor(rules.get(0).getRule().getFontFormatting().getFontColor()), "wrong fg color for " + ref);
        getRulesFor(3, 3);
        assertEquals(0, rules.size(), "wrong # of rules for " + ref);
        getRulesFor(15, 4);
        assertEquals(0, rules.size(), "wrong # of rules for " + ref);
        getRulesFor(16, 1);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);
        assertEquals("FFFF0000", getColor(rules.get(0).getRule().getFontFormatting().getFontColor()), "wrong fg color for " + ref);

        sheet = wb.getSheet("Products3");
        sheet.getRow(8).getCell(0).setCellValue(new Date());
        getRulesFor(8, 0);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);
        getRulesFor(8, 3);
        assertEquals(1, rules.size(), "wrong # of rules for " + ref);

        sheet = wb.getSheet("Customers2");
        getRulesFor(3, 0);
        assertEquals(0, rules.size(), "wrong # of rules for " + ref);
    }

