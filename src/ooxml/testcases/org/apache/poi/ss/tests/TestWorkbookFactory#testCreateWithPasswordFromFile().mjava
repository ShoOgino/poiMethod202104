    /**
     * Check that the overloaded file methods which take passwords work properly
     */
    @Test
    public void testCreateWithPasswordFromFile() throws Exception {
        Workbook wb;

        // Unprotected, no password given, opens normally
        wb = WorkbookFactory.create(
                HSSFTestDataSamples.getSampleFile(xls), null
        );
        assertNotNull(wb);
        assertTrue(wb instanceof HSSFWorkbook);
        assertCloseDoesNotModifyFile(xls, wb);

        wb = WorkbookFactory.create(
                HSSFTestDataSamples.getSampleFile(xlsx), null
        );
        assertNotNull(wb);
        assertTrue(wb instanceof XSSFWorkbook);
        assertCloseDoesNotModifyFile(xlsx, wb);

        // Unprotected, wrong password, opens normally
        wb = WorkbookFactory.create(
                HSSFTestDataSamples.getSampleFile(xls), "wrong"
        );
        assertNotNull(wb);
        assertTrue(wb instanceof HSSFWorkbook);
        assertCloseDoesNotModifyFile(xls, wb);

        wb = WorkbookFactory.create(
                HSSFTestDataSamples.getSampleFile(xlsx), "wrong"
        );
        assertNotNull(wb);
        assertTrue(wb instanceof XSSFWorkbook);
        assertCloseDoesNotModifyFile(xlsx, wb);

        // Protected, correct password, opens fine
        wb = WorkbookFactory.create(
                HSSFTestDataSamples.getSampleFile(xls_protected[0]), xls_protected[1]
        );
        assertNotNull(wb);
        assertTrue(wb instanceof HSSFWorkbook);
        assertCloseDoesNotModifyFile(xls_protected[0], wb);

        wb = WorkbookFactory.create(
                HSSFTestDataSamples.getSampleFile(xlsx_protected[0]), xlsx_protected[1]
        );
        assertNotNull(wb);
        assertTrue(wb instanceof XSSFWorkbook);
        assertTrue(wb.getNumberOfSheets() > 0);
        assertNotNull(wb.getSheetAt(0));
        assertNotNull(wb.getSheetAt(0).getRow(0));
        assertCloseDoesNotModifyFile(xlsx_protected[0], wb);

        // Protected, wrong password, throws Exception
        try {
            wb = WorkbookFactory.create(
                    HSSFTestDataSamples.getSampleFile(xls_protected[0]), "wrong"
            );
            assertCloseDoesNotModifyFile(xls_protected[0], wb);
            fail("Shouldn't be able to open with the wrong password");
        } catch (EncryptedDocumentException e) {
            // expected here
        } finally {
            wb.close();
        }

        try {
            wb = WorkbookFactory.create(
                    HSSFTestDataSamples.getSampleFile(xlsx_protected[0]), "wrong"
            );
            assertCloseDoesNotModifyFile(xlsx_protected[0], wb);
            fail("Shouldn't be able to open with the wrong password");
        } catch (EncryptedDocumentException e) {
            // expected here
        }
    }

