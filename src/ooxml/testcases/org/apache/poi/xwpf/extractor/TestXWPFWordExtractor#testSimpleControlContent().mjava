    /**
     * Test for basic extraction of SDT content
     */
    @Test
    public void testSimpleControlContent() throws IOException {
        try (XWPFDocument doc = XWPFTestDataSamples.openSampleDocument("Bug54849.docx");
             XWPFWordExtractor ex = new XWPFWordExtractor(doc)) {
            String[] targs = new String[]{
                "header_rich_text",
                "rich_text",
                "rich_text_pre_table\nrich_text_cell1\t\t\t\n\t\t\t\n\t\t\t\n\nrich_text_post_table",
                "plain_text_no_newlines",
                "plain_text_with_newlines1\nplain_text_with_newlines2\n",
                "watermelon\n",
                "dirt\n",
                "4/16/2013\n",
                "rich_text_in_cell",
                "abc",
                "rich_text_in_paragraph_in_cell",
                "footer_rich_text",
                "footnote_sdt",
                "endnote_sdt"
            };
            String s = ex.getText().toLowerCase(Locale.ROOT);
            int hits = 0;

            for (String targ : targs) {
                boolean hit = false;
                if (s.contains(targ)) {
                    hit = true;
                    hits++;
                }
                assertTrue(hit, "controlled content loading-" + targ);
            }
            assertEquals(targs.length, hits, "controlled content loading hit count");
        }

        try (XWPFDocument doc2 = XWPFTestDataSamples.openSampleDocument("Bug54771a.docx");
             XWPFWordExtractor ex = new XWPFWordExtractor(doc2)) {
            String s = ex.getText().toLowerCase(Locale.ROOT);

            String[] targs = {
                "bb",
                "test subtitle\n",
                "test user\n",
            };

            //At one point in development there were three copies of the text.
            //This ensures that there is only one copy.
            for (String targ : targs) {
                Matcher m = Pattern.compile(targ).matcher(s);
                int hit = 0;
                while (m.find()) {
                    hit++;
                }
                assertEquals(1, hit, "controlled content loading-" + targ);
            }
            //"test\n" appears twice: once as the "title" and once in the text.
            //This also happens when you save this document as text from MSWord.
            Matcher m = Pattern.compile("test\n").matcher(s);
            int hit = 0;
            while (m.find()) {
                hit++;
            }
            assertEquals(2, hit, "test<N>");
        }
    }

