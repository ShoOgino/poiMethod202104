    @Test
    public void test63788() throws IOException {
        try (XWPFDocument doc = new XWPFDocument()) {

            XWPFNumbering numbering = doc.createNumbering();

            for (int i = 10; i >= 0; i--) {
                addNumberingWithAbstractId(numbering, i);        //add numbers in reverse order
            }

            for (int i = 0; i <= 10; i++) {
                assertEquals(i, numbering.getAbstractNum(BigInteger.valueOf(i)).getAbstractNum().getAbstractNumId().longValue());
            }

            //attempt to remove item with numId 2
            assertTrue(numbering.removeAbstractNum(BigInteger.valueOf(2)));

            for (int i = 0; i <= 10; i++) {
                XWPFAbstractNum abstractNum = numbering.getAbstractNum(BigInteger.valueOf(i));

                // we removed id "2", so this one should be empty, all others not
                if (i == 2) {
                    assertNull(abstractNum, "Failed for " + i);
                } else {
                    assertNotNull(abstractNum, "Failed for " + i);
                    assertEquals(i, abstractNum.getAbstractNum().getAbstractNumId().longValue());
                }
            }

            // removing the same again fails
            assertFalse(numbering.removeAbstractNum(BigInteger.valueOf(2)));

            // removing another one works
            assertTrue(numbering.removeAbstractNum(BigInteger.valueOf(4)));
        }
    }

