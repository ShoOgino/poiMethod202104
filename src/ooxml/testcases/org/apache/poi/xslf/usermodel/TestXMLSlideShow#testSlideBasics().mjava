    @SuppressWarnings("deprecation")
    @Test
    public void testSlideBasics() throws IOException {
        XMLSlideShow xml = new XMLSlideShow(pack);

        // Should have 1 master
        assertEquals(1, xml.getSlideMasters().size());

        // Should have two sheets
        assertEquals(2, xml.getSlides().size());

        // Check they're as expected
        CTSlideIdListEntry[] slides = xml.getCTPresentation().getSldIdLst().getSldIdArray();

        assertEquals(256, slides[0].getId());
        assertEquals(257, slides[1].getId());
        assertEquals("rId2", slides[0].getId2());
        assertEquals("rId3", slides[1].getId2());

        // Now get those objects
        assertNotNull(xml.getSlides().get(0));
        assertNotNull(xml.getSlides().get(1));

        // And check they have notes as expected
        assertNotNull(xml.getSlides().get(0).getNotes());
        assertNotNull(xml.getSlides().get(1).getNotes());

        // Next up look for the slide master
        CTSlideMasterIdListEntry[] masters = xml.getCTPresentation().getSldMasterIdLst().getSldMasterIdArray();

        // see SlideAtom.USES_MASTER_SLIDE_ID
        assertEquals(0x80000000L, masters[0].getId());
        assertEquals("rId1", masters[0].getId2());
        assertNotNull(xml.getSlideMasters().get(0));

        // Finally look for the notes master
        CTNotesMasterIdListEntry notesMaster =
            xml.getCTPresentation().getNotesMasterIdLst().getNotesMasterId();
        assertNotNull(notesMaster);

        assertNotNull(xml.getNotesMaster());

        xml.close();
    }

