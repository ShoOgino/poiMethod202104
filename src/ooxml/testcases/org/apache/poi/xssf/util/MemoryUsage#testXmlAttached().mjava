    /**
     * Generate attached (having a parent bean) Xml beans until OutOfMemoryError.
     * This is MUCH more memory-efficient than {@link #testXmlDetached()}
     *
     * @see #testXmlAttached()
     */
    @Test
    void testXmlAttached() {
        System.out.println();
        System.out.println("Testing attached");
        printMemoryUsage("before");
        List<CTRow> rows = new ArrayList<>();
        int i = 0;
        //top-level element in sheet.xml
        CTWorksheet sh = CTWorksheet.Factory.newInstance();
        CTSheetData data = sh.addNewSheetData();
        try {
            for(;;) {
                //create CTRow attached to the parent object
                CTRow r = data.addNewRow();
                r.setR(++i);
                rows.add(r);
            }
        } catch (OutOfMemoryError er) {
            System.out.println("Failed at row=" + i + " from " + rows.size() + " kept.");
        } catch (final Exception e) {
            System.out.println("Unable to reach an OutOfMemoryError");
            System.out.println(e.getClass().getName() + ": " + e.getMessage());
        }
        printMemoryUsage("after");
    }

