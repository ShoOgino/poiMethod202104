    /**
     * Generate a spreadsheet who's all cell values are numbers.
     * The data is generated until OutOfMemoryError.
     * <p>
     * as compared to {@link #mixedSpreadsheet(org.apache.poi.ss.usermodel.Workbook, int)},
     * this method does not set string values and, hence, does not involve the Shared Strings Table.
     * </p>
     *
     * @param wb        the workbook to write to
     * @param numCols   the number of columns in a row
     */
    @ParameterizedTest
    @ValueSource(booleans = {false, true})
    void testNumberHSSF(boolean useXSSF) throws IOException {
        int i=0, cnt=0;
        try (Workbook wb = WorkbookFactory.create(useXSSF)) {
            printMemoryUsage("before");
            Sheet sh = wb.createSheet();
            for(i=0; ; i++) {
                Row row = sh.createRow(i);
                assertNotNull(row);
                for(int j=0; j < NUM_COLUMNS; j++) {
                    Cell cell = row.createCell(j);
                    cell.setCellValue(j);
                    cnt++;
                }
            }
        } catch (OutOfMemoryError er) {
            System.out.println("Failed at row=" + i + ", objects : " + cnt);
        } finally {
            printMemoryUsage("after");
        }
    }

