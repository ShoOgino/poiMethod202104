   @Test
   void testARGBColour() throws IOException {
      try (XSSFWorkbook wb = XSSFTestDataSamples.openSampleWorkbook("48779.xlsx")) {

         // Check the CTColor is as expected
         XSSFColor rgb4 = wb.getCellStyleAt((short) 1).getFillForegroundXSSFColor();
         assertFalse(rgb4.getCTColor().isSetIndexed());
         assertEquals(0, rgb4.getCTColor().getIndexed());
         assertTrue(rgb4.getCTColor().isSetRgb());
         assertEquals(4, rgb4.getCTColor().getRgb().length);

         // Now check the XSSFColor
         assertEquals(0, rgb4.getIndexed());
         assertEquals(0.0, rgb4.getTint(), 0);
         assertFalse(rgb4.hasTint());
         assertTrue(rgb4.hasAlpha());

         assertEquals("FFFF0000", rgb4.getARGBHex());
         assertEquals(3, rgb4.getRGB().length);
         assertEquals(-1, rgb4.getRGB()[0]);
         assertEquals(0, rgb4.getRGB()[1]);
         assertEquals(0, rgb4.getRGB()[2]);

         assertEquals(4, rgb4.getARGB().length);
         assertEquals(-1, rgb4.getARGB()[0]);
         assertEquals(-1, rgb4.getARGB()[1]);
         assertEquals(0, rgb4.getARGB()[2]);
         assertEquals(0, rgb4.getARGB()[3]);

         // Tint doesn't have the alpha
         assertEquals(3, rgb4.getRGBWithTint().length);
         assertEquals(-1, rgb4.getRGBWithTint()[0]);
         assertEquals(0, rgb4.getRGBWithTint()[1]);
         assertEquals(0, rgb4.getRGBWithTint()[2]);


         // Turn on tinting, and check it behaves
         // TODO These values are suspected to be wrong...
         rgb4.setTint(0.4);
         assertTrue(rgb4.hasTint());
         assertEquals(0.4, rgb4.getTint(), 0);

         assertEquals(3, rgb4.getRGBWithTint().length);
         assertEquals(-1, rgb4.getRGBWithTint()[0]);
         assertEquals(102, rgb4.getRGBWithTint()[1]);
         assertEquals(102, rgb4.getRGBWithTint()[2]);
      }
   }

