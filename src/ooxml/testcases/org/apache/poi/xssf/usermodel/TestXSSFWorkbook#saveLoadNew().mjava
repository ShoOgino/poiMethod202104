    /**
     * Tests that we can save, and then re-load a new document
     */
    @Test
    public void saveLoadNew() throws IOException, InvalidFormatException {
        XSSFWorkbook wb1 = new XSSFWorkbook();

        //check that the default date system is set to 1900
        CTWorkbookPr pr = wb1.getCTWorkbook().getWorkbookPr();
        assertNotNull(pr);
        assertTrue(pr.isSetDate1904());
        assertFalse(pr.getDate1904(), "XSSF must use the 1900 date system");

        Sheet sheet1 = wb1.createSheet("sheet1");
        Sheet sheet2 = wb1.createSheet("sheet2");
        wb1.createSheet("sheet3");

        RichTextString rts = wb1.getCreationHelper().createRichTextString("hello world");

        sheet1.createRow(0).createCell((short)0).setCellValue(1.2);
        sheet1.createRow(1).createCell((short)0).setCellValue(rts);
        sheet2.createRow(0);

        assertEquals(0, wb1.getSheetAt(0).getFirstRowNum());
        assertEquals(1, wb1.getSheetAt(0).getLastRowNum());
        assertEquals(0, wb1.getSheetAt(1).getFirstRowNum());
        assertEquals(0, wb1.getSheetAt(1).getLastRowNum());
        assertEquals(-1, wb1.getSheetAt(2).getFirstRowNum());
        assertEquals(-1, wb1.getSheetAt(2).getLastRowNum());

        File file = TempFile.createTempFile("poi-", ".xlsx");
        OutputStream out = new FileOutputStream(file);
        wb1.write(out);
        out.close();

        // Check the package contains what we'd expect it to
        OPCPackage pkg = OPCPackage.open(file.toString());
        PackagePart wbRelPart =
            pkg.getPart(PackagingURIHelper.createPartName("/xl/_rels/workbook.xml.rels"));
        assertNotNull(wbRelPart);
        assertTrue(wbRelPart.isRelationshipPart());
        assertEquals(ContentTypes.RELATIONSHIPS_PART, wbRelPart.getContentType());

        PackagePart wbPart =
            pkg.getPart(PackagingURIHelper.createPartName("/xl/workbook.xml"));
        // Links to the three sheets, shared strings and styles
        assertTrue(wbPart.hasRelationships());
        assertEquals(5, wbPart.getRelationships().size());
        wb1.close();

        // Load back the XSSFWorkbook
        @SuppressWarnings("resource")
        XSSFWorkbook wb2 = new XSSFWorkbook(pkg);
        assertEquals(3, wb2.getNumberOfSheets());
        assertNotNull(wb2.getSheetAt(0));
        assertNotNull(wb2.getSheetAt(1));
        assertNotNull(wb2.getSheetAt(2));

        assertNotNull(wb2.getSharedStringSource());
        assertNotNull(wb2.getStylesSource());

        assertEquals(0, wb2.getSheetAt(0).getFirstRowNum());
        assertEquals(1, wb2.getSheetAt(0).getLastRowNum());
        assertEquals(0, wb2.getSheetAt(1).getFirstRowNum());
        assertEquals(0, wb2.getSheetAt(1).getLastRowNum());
        assertEquals(-1, wb2.getSheetAt(2).getFirstRowNum());
        assertEquals(-1, wb2.getSheetAt(2).getLastRowNum());

        sheet1 = wb2.getSheetAt(0);
        assertEquals(1.2, sheet1.getRow(0).getCell(0).getNumericCellValue(), 0.0001);
        assertEquals("hello world", sheet1.getRow(1).getCell(0).getRichStringCellValue().getString());

        pkg.close();
    }

