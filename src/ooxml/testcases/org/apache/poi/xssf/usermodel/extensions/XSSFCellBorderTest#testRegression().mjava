    @Test
    void testRegression() throws Exception {
        XSSFCellStyle style = wb.createCellStyle();
        style.setBorderTop(BorderStyle.THICK);
        style.setBorderBottom(BorderStyle.THICK);

        assertEquals(3, stylesSource.getBorders().size());

        ThemesTable _theme = stylesSource.getTheme();
        CTXf _cellXf = style.getCoreXf();
        assertTrue(_cellXf.getApplyBorder());

        int idx = (int) _cellXf.getBorderId();
        XSSFCellBorder cf = stylesSource.getBorderAt(idx);
        CTBorder ct = (CTBorder) cf.getCTBorder().copy();

        assertFalse(ct.isSetDiagonal());
        CTBorderPr pr = ct.addNewDiagonal();
        ct.setDiagonalUp(true);
        pr.setStyle(STBorderStyle.Enum.forInt(BorderStyle.THICK.getCode() + 1));
        idx = stylesSource.putBorder(new XSSFCellBorder(ct, _theme,
                stylesSource.getIndexedColors()));
        _cellXf.setBorderId(idx);
        _cellXf.setApplyBorder(true);

        assertEquals(4, stylesSource.getBorders().size());

        style.setBorderLeft(BorderStyle.THICK);
        style.setBorderRight(BorderStyle.THICK);

        Sheet sheet = wb.createSheet("Sheet1");

        assertEquals(6, stylesSource.getBorders().size());

        Cell cell = sheet.createRow(1).createCell(2);
        cell.setCellStyle(style);

        assertEquals(6, stylesSource.getBorders().size());

        XSSFWorkbook wbBack = XSSFTestDataSamples.writeOutAndReadBack(wb);

        assertEquals(6, wbBack.getStylesSource().getBorders().size());

        wb.close();
    }

