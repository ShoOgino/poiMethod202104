    /**
     * Evaluation of cell references with column indexes greater than 255. See bugzilla 50096
     */
    @Test
    void testEvaluateColumnGreaterThan255() throws IOException {
        try (Workbook wb = _testDataProvider.openSampleWorkbook("50096.xlsx")) {
            FormulaEvaluator evaluator = wb.getCreationHelper().createFormulaEvaluator();

            /*
             *  The first row simply contains the numbers 1 - 300.
             *  The second row simply refers to the cell value above in the first row by a simple formula.
             */
            for (int i = 245; i < 265; i++) {
                Cell cell_noformula = wb.getSheetAt(0).getRow(0).getCell(i);
                Cell cell_formula = wb.getSheetAt(0).getRow(1).getCell(i);

                CellReference ref_noformula = new CellReference(cell_noformula.getRowIndex(), cell_noformula.getColumnIndex());
                CellReference ref_formula = new CellReference(cell_noformula.getRowIndex(), cell_noformula.getColumnIndex());
                String fmla = cell_formula.getCellFormula();
                // assure that the formula refers to the cell above.
                // the check below is 'deep' and involves conversion of the shared formula:
                // in the sample file a shared formula in GN1 is spanned in the range GN2:IY2,
                assertEquals(ref_noformula.formatAsString(), fmla);

                CellValue cv_noformula = evaluator.evaluate(cell_noformula);
                CellValue cv_formula = evaluator.evaluate(cell_formula);
                assertEquals(cv_noformula.getNumberValue(), cv_formula.getNumberValue(), 0,
                    "Wrong evaluation result in " + ref_formula.formatAsString());
            }
        }
    }

