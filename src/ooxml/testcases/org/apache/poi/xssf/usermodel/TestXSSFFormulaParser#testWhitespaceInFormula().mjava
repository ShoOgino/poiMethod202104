    @Test
    public void testWhitespaceInFormula() throws IOException {
        XSSFWorkbook wb = new XSSFWorkbook();
        XSSFEvaluationWorkbook fpb = XSSFEvaluationWorkbook.create(wb);
        Ptg[] ptgs;

        // verify whitespaces in different places
        ptgs = parse(fpb, "INTERCEPT(A2:A5, B2:B5)");
        assertEquals(3, ptgs.length);
        assertTrue(ptgs[0] instanceof AreaPtg);
        assertTrue(ptgs[1] instanceof AreaPtg);
        assertTrue(ptgs[2] instanceof FuncPtg);

        ptgs = parse(fpb, " INTERCEPT ( \t \r A2 : \nA5 , B2 : B5 ) \t");
        assertEquals(3, ptgs.length);
        assertTrue(ptgs[0] instanceof AreaPtg);
        assertTrue(ptgs[1] instanceof AreaPtg);
        assertTrue(ptgs[2] instanceof FuncPtg);

        ptgs = parse(fpb, "(VLOOKUP(\"item1\", A2:B3, 2, FALSE) - VLOOKUP(\"item2\", A2:B3, 2, FALSE) )");
        assertEquals(12, ptgs.length);
        assertTrue(ptgs[0] instanceof StringPtg);
        assertTrue(ptgs[1] instanceof AreaPtg);
        assertTrue(ptgs[2] instanceof IntPtg);

        ptgs = parse(fpb, "A1:B1 B1:B2");
        assertEquals(4, ptgs.length);
        assertTrue(ptgs[0] instanceof MemAreaPtg);
        assertTrue(ptgs[1] instanceof AreaPtg);
        assertTrue(ptgs[2] instanceof AreaPtg);
        assertTrue(ptgs[3] instanceof IntersectionPtg);

        ptgs = parse(fpb, "A1:B1    B1:B2");
        assertEquals(4, ptgs.length);
        assertTrue(ptgs[0] instanceof MemAreaPtg);
        assertTrue(ptgs[1] instanceof AreaPtg);
        assertTrue(ptgs[2] instanceof AreaPtg);
        assertTrue(ptgs[3] instanceof IntersectionPtg);

        wb.close();
    }

