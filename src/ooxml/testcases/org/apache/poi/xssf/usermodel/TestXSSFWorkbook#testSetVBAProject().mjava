    /**
     * Tests that we can save a workbook with macros and reload it.
     */
    @Test
    void testSetVBAProject() throws Exception {
        File file;
        final byte[] allBytes = new byte[256];
        for (int i = 0; i < 256; i++) {
            allBytes[i] = (byte) (i - 128);
        }

        XSSFWorkbook wb1 = new XSSFWorkbook();
        wb1.createSheet();
        wb1.setVBAProject(new ByteArrayInputStream(allBytes));
        file = TempFile.createTempFile("poi-", ".xlsm");
        OutputStream out = new FileOutputStream(file);
        wb1.write(out);
        out.close();
        wb1.close();

        // Check the package contains what we'd expect it to
        OPCPackage pkg = OPCPackage.open(file.toString());
        PackagePart wbPart = pkg.getPart(PackagingURIHelper.createPartName("/xl/workbook.xml"));
        assertTrue(wbPart.hasRelationships());
        final PackageRelationshipCollection relationships = wbPart.getRelationships().getRelationships(XSSFRelation.VBA_MACROS.getRelation());
        assertEquals(1, relationships.size());
        PackageRelationship relationship = relationships.getRelationship(0);
        assertNotNull(relationship);
        assertEquals(XSSFRelation.VBA_MACROS.getDefaultFileName(), relationship.getTargetURI().toString());
        PackagePart vbaPart = pkg.getPart(PackagingURIHelper.createPartName(XSSFRelation.VBA_MACROS.getDefaultFileName()));
        assertNotNull(vbaPart);
        assertFalse(vbaPart.isRelationshipPart());
        assertEquals(XSSFRelation.VBA_MACROS.getContentType(), vbaPart.getContentType());
        final byte[] fromFile = IOUtils.toByteArray(vbaPart.getInputStream());
        assertArrayEquals(allBytes, fromFile);

        // Load back the XSSFWorkbook just to check nothing explodes
        @SuppressWarnings("resource")
        XSSFWorkbook wb2 = new XSSFWorkbook(pkg);
        assertEquals(1, wb2.getNumberOfSheets());
        assertEquals(XSSFWorkbookType.XLSM, wb2.getWorkbookType());
        pkg.close();
    }

