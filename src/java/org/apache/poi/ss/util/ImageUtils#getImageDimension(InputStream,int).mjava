    /**
     * Return the dimension of this image
     *
     * @param is the stream containing the image data
     * @param type type of the picture: {@link org.apache.poi.ss.usermodel.Workbook#PICTURE_TYPE_JPEG},
     * {@link org.apache.poi.ss.usermodel.Workbook#PICTURE_TYPE_PNG} or {@link org.apache.poi.ss.usermodel.Workbook#PICTURE_TYPE_DIB}
     *
     * @return image dimension in pixels
     */
    public static Dimension getImageDimension(InputStream is, int type) {
        Dimension size = new Dimension();

        switch (type){
            //we can calculate the preferred size only for JPEG, PNG and BMP
            //other formats like WMF, EMF and PICT are not supported in Java
            case Workbook.PICTURE_TYPE_JPEG:
            case Workbook.PICTURE_TYPE_PNG:
            case Workbook.PICTURE_TYPE_DIB:
                try {
                    //read the image using javax.imageio.*
                    try (ImageInputStream iis = ImageIO.createImageInputStream(is)) {
                        Iterator<ImageReader> i = ImageIO.getImageReaders( iis );
                        if (i.hasNext()) {
                            ImageReader r = i.next();
                            try {
                                r.setInput( iis );
                                BufferedImage img = r.read(0);

                                int[] dpi = getResolution(r);

                                //if DPI is zero then assume standard 96 DPI
                                //since cannot divide by zero
                                if (dpi[0] == 0) dpi[0] = Units.PIXEL_DPI;
                                if (dpi[1] == 0) dpi[1] = Units.PIXEL_DPI;

                                size.width = img.getWidth()*Units.PIXEL_DPI/dpi[0];
                                size.height = img.getHeight()*Units.PIXEL_DPI/dpi[1];
                            } finally {
                                r.dispose();
                            }
                        } else {
                            LOG.log(POILogger.WARN, "ImageIO found no images");
                        }
                    }

                } catch (IOException e) {
                    //silently return if ImageIO failed to read the image
                    LOG.log(POILogger.WARN, e);
                }

                break;
            default:
                LOG.log(POILogger.WARN, "Only JPEG, PNG and DIB pictures can be automatically sized");
        }
        return size;
    }

