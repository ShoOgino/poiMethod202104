        void createBlockIfNeeded() throws IOException {
            if (buffer != null && buffer.hasRemaining()) return;

            int thisBlock = nextBlock;

            // Allocate a block if needed, otherwise figure
            //  out what the next block will be
            if (thisBlock == POIFSConstants.END_OF_CHAIN) {
                thisBlock = blockStore.getFreeBlock();
                loopDetector.claim(thisBlock);

                // We're on the end of the chain
                nextBlock = POIFSConstants.END_OF_CHAIN;

                // Mark the previous block as carrying on to us if needed
                if (prevBlock != POIFSConstants.END_OF_CHAIN) {
                    blockStore.setNextBlock(prevBlock, thisBlock);
                }
                blockStore.setNextBlock(thisBlock, POIFSConstants.END_OF_CHAIN);

                // If we've just written the first block on a
                //  new stream, save the start block offset
                if (startBlock == POIFSConstants.END_OF_CHAIN) {
                    startBlock = thisBlock;
                }
            } else {
                loopDetector.claim(thisBlock);
                nextBlock = blockStore.getNextBlock(thisBlock);
            }

            if (buffer != null) {
                blockStore.releaseBuffer(buffer);
            }
            buffer = blockStore.createBlockIfNeeded(thisBlock);

            // Update pointers
            prevBlock = thisBlock;
        }

