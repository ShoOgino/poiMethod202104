	/**
	 * Compares two streams with expected differences in specified regions.  The streams are
	 * expected to be of equal length and comparison is always byte for byte.  That is -
	 * differences can only involve exchanging each individual byte for another single byte.<br>
	 * Both input streams are closed.
	 *
	 * @param allowableDifferenceRegions array of integer pairs: (offset, length).
	 * Any differences encountered in these regions of the streams will be ignored
	 * @return <code>null</code> if streams are identical, else the
	 * byte indexes of differing data.  If streams were different lengths,
	 * the returned indexes will be -1 and the length of the shorter stream
	 */
	public static int[] diffStreams(InputStream isA, InputStream isB, int[] allowableDifferenceRegions) {

		if((allowableDifferenceRegions.length % 2) != 0) {
			throw new RuntimeException("allowableDifferenceRegions length is odd");
		}
		boolean success = false;
		int[] result;
		try {
			result = diffInternal(isA, isB, allowableDifferenceRegions);
			success = true;
		} catch (IOException e) {
			throw new RuntimeException(e);
		} finally {
			close(isA, success);
			close(isB, success);
		}
		return result;
	}

