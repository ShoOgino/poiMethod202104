    @Test
	void testPictures() throws IOException {
        HSSFWorkbook wb = HSSFTestDataSamples.openSampleWorkbook("SimpleWithImages.xls");

        // TODO - add getFormat() to interface PictureData and genericise wb.getAllPictures()
        List<HSSFPictureData> lst = wb.getAllPictures();
        //assertEquals(2, lst.size());

        try {
            for (final HSSFPictureData pict : lst) {
                String ext = pict.suggestFileExtension();
                byte[] data = pict.getData();
                if (ext.equals("jpeg")) {
                    //try to read image data using javax.imageio.* (JDK 1.4+)
                    BufferedImage jpg = ImageIO.read(new ByteArrayInputStream(data));
                    assertNotNull(jpg);
                    assertEquals(192, jpg.getWidth());
                    assertEquals(176, jpg.getHeight());
                    assertEquals(HSSFWorkbook.PICTURE_TYPE_JPEG, pict.getFormat());
                    assertEquals("image/jpeg", pict.getMimeType());
                } else if (ext.equals("png")) {
                    //try to read image data using javax.imageio.* (JDK 1.4+)
                    BufferedImage png = ImageIO.read(new ByteArrayInputStream(data));
                    assertNotNull(png);
                    assertEquals(300, png.getWidth());
                    assertEquals(300, png.getHeight());
                    assertEquals(HSSFWorkbook.PICTURE_TYPE_PNG, pict.getFormat());
                    assertEquals("image/png", pict.getMimeType());
            /*} else {
                //TODO: test code for PICT, WMF and EMF*/
                }
            }
        } catch (IIOException e) {
            assertFalse(e.getMessage().contains("Can't create cache file"), e.getMessage());
        }
    }

