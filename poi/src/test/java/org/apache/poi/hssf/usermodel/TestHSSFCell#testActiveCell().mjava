	/**
	 * Tests that the active cell can be correctly read and set
	 */
	@Test
	void testActiveCell() throws IOException {
		//read in sample
		try (HSSFWorkbook wb1 = HSSFTestDataSamples.openSampleWorkbook("Simple.xls")) {

			//check initial position
			HSSFSheet umSheet = wb1.getSheetAt(0);
			InternalSheet s = umSheet.getSheet();
			assertEquals((short) 0, s.getActiveCellCol(), "Initial active cell should be in col 0");
			assertEquals(1, s.getActiveCellRow(), "Initial active cell should be on row 1");

			//modify position through HSSFCell
			HSSFCell cell = umSheet.createRow(3).createCell(2);
			cell.setAsActiveCell();
			assertEquals((short) 2, s.getActiveCellCol(), "After modify, active cell should be in col 2");
			assertEquals(3, s.getActiveCellRow(), "After modify, active cell should be on row 3");

			//write book to temp file; read and verify that position is serialized
			try (HSSFWorkbook wb2 = HSSFTestDataSamples.writeOutAndReadBack(wb1)) {
				umSheet = wb2.getSheetAt(0);
				s = umSheet.getSheet();

				assertEquals((short) 2, s.getActiveCellCol(), "After serialize, active cell should be in col 2");
				assertEquals(3, s.getActiveCellRow(), "After serialize, active cell should be on row 3");
			}
		}
	}

