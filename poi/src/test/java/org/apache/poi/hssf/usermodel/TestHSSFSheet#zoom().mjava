    @Test
    void zoom() throws IOException {
        try (HSSFWorkbook wb = new HSSFWorkbook()) {
            HSSFSheet sheet = wb.createSheet();
            assertEquals(-1, sheet.getSheet().findFirstRecordLocBySid(SCLRecord.sid));
            sheet.setZoom(75);
            assertTrue(sheet.getSheet().findFirstRecordLocBySid(SCLRecord.sid) > 0);
            SCLRecord sclRecord = (SCLRecord) sheet.getSheet().findFirstRecordBySid(SCLRecord.sid);
            assertNotNull(sclRecord);
            short numerator = sclRecord.getNumerator();
            assertEquals(75, 100 * numerator / sclRecord.getDenominator());

            int sclLoc = sheet.getSheet().findFirstRecordLocBySid(SCLRecord.sid);
            int window2Loc = sheet.getSheet().findFirstRecordLocBySid(WindowTwoRecord.sid);
            assertEquals(sclLoc, window2Loc + 1);

            // verify limits
            IllegalArgumentException e;
            e = assertThrows(IllegalArgumentException.class, () -> sheet.setZoom(0));
            assertEquals("Numerator must be greater than 0 and less than 65536", e.getMessage());

            e = assertThrows(IllegalArgumentException.class, () -> sheet.setZoom(65536));
            assertEquals("Numerator must be greater than 0 and less than 65536", e.getMessage());

            e = assertThrows(IllegalArgumentException.class, () -> sheet.setZoom(2, 0));
            assertEquals("Denominator must be greater than 0 and less than 65536", e.getMessage());

            e = assertThrows(IllegalArgumentException.class, () -> sheet.setZoom(2, 65536));
            assertEquals("Denominator must be greater than 0 and less than 65536", e.getMessage());
        }
    }

