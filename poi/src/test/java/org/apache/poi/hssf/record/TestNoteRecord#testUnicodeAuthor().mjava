    @Test
    void testUnicodeAuthor() {
        // This sample data was created by setting the 'user name' field in the 'Personalize'
        // section of Excel's options to \u30A2\u30D1\u30C3\u30C1\u65CF, and then
        // creating a cell comment.
        byte[] data = HexRead.readFromString("01 00 01 00 00 00 03 00 " +
                "05 00 01 " + // len=5, 16bit
                "A2 30 D1 30 C3 30 C1 30 CF 65 " + // character data
                "00 " // padding byte
                );
        RecordInputStream in = TestcaseRecordInputStream.create(NoteRecord.sid, data);
        NoteRecord nr = new NoteRecord(in);
        assertNotEquals("Identified bug in reading note with unicode author","\u00A2\u0030\u00D1\u0030\u00C3", nr.getAuthor());
        assertEquals("\u30A2\u30D1\u30C3\u30C1\u65CF", nr.getAuthor());
        assertTrue(nr.authorIsMultibyte());

        byte[] ser = nr.serialize();
        confirmRecordEncoding(NoteRecord.sid, data, ser);

        // Re-check
        in = TestcaseRecordInputStream.create(ser);
        nr = new NoteRecord(in);
        assertEquals("\u30A2\u30D1\u30C3\u30C1\u65CF", nr.getAuthor());
        assertTrue(nr.authorIsMultibyte());


        // Change to a non unicode author, will stop being unicode
        nr.setAuthor("Simple");
        ser = nr.serialize();
        in = TestcaseRecordInputStream.create(ser);
        nr = new NoteRecord(in);

        assertEquals("Simple", nr.getAuthor());
        assertFalse(nr.authorIsMultibyte());

        // Now set it back again
        nr.setAuthor("Unicode\u1234");
        ser = nr.serialize();
        in = TestcaseRecordInputStream.create(ser);
        nr = new NoteRecord(in);

        assertEquals("Unicode\u1234", nr.getAuthor());
        assertTrue(nr.authorIsMultibyte());
    }

