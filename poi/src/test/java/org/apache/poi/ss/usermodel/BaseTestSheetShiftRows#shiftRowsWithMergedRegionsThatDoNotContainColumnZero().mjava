    //@Disabled("bug 56454: Incorrectly handles merged regions that do not contain column 0")
    @Test
    void shiftRowsWithMergedRegionsThatDoNotContainColumnZero() throws IOException {
        Workbook wb = _testDataProvider.createWorkbook();
        Sheet sheet = wb.createSheet("test");

        // populate sheet cells
        for (int i = 0; i < 10; i++) {
            Row row = sheet.createRow(i);
            for (int j = 0; j < 12; j++) {
                Cell cell = row.createCell(j);
                cell.setCellValue(i + "x" + j);
            }
        }

        CellRangeAddress A4_B7 = new CellRangeAddress(3, 6, 0, 1);
        CellRangeAddress C5_D7 = new CellRangeAddress(4, 6, 2, 3);

        assertEquals(0, sheet.addMergedRegion(A4_B7));
        assertEquals(1, sheet.addMergedRegion(C5_D7));

        // A4:B7 will elongate vertically
        // C5:D7 will be shifted down with same size
        sheet.shiftRows(4, sheet.getLastRowNum(), 1);

        // This test is written as expected-to-fail and should be rewritten
        // as expected-to-pass when the bug is fixed.
        // FIXME: remove try, catch, and testPassesNow, skipTest when test passes
        try {
            assertEquals(2, sheet.getNumMergedRegions());
            assertEquals(CellRangeAddress.valueOf("A4:B8"), sheet.getMergedRegion(0));
            assertEquals(CellRangeAddress.valueOf("C5:D8"), sheet.getMergedRegion(1));
            testPassesNow(56454);
        } catch (AssertionError e) {
            skipTest(e);
        }

        wb.close();
    }

