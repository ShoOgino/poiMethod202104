	@Test
	void testEvaluate() {
		HSSFWorkbook wb = HSSFTestDataSamples.openSampleWorkbook("XRefCalc.xls");
		HSSFWorkbook wb2 = HSSFTestDataSamples.openSampleWorkbook("XRefCalcData.xls");
		HSSFName name = wb.getName("QUANT");
		assertNotNull(name);
		CellReference cellRef = new CellReference(name.getRefersToFormula());
		HSSFCell cell = wb.getSheet(cellRef.getSheetName()).getRow(cellRef.getRow()).getCell(cellRef.getCol());
		cell.setCellValue(NEW_QUANT);
		cell = wb2.getSheet("CostSheet").getRow(1).getCell(1);
		cell.setCellValue(NEW_PART_COST);
		HSSFFormulaEvaluator evaluator = new HSSFFormulaEvaluator(wb);
		HSSFFormulaEvaluator evaluatorCost = new HSSFFormulaEvaluator(wb2);
		String[] bookNames = { "XRefCalc.xls", "XRefCalcData.xls" };
		HSSFFormulaEvaluator[] evaluators = { evaluator, evaluatorCost, };
		HSSFFormulaEvaluator.setupEnvironment(bookNames, evaluators);
		name = wb.getName("UNITCOST");
		assertNotNull(name);
		cellRef = new CellReference(name.getRefersToFormula());
		HSSFCell uccell = wb.getSheet(cellRef.getSheetName()).getRow(cellRef.getRow()).getCell(cellRef.getCol());
		name = wb.getName("COST");
		assertNotNull(name);
		cellRef = new CellReference(name.getRefersToFormula());
		HSSFCell ccell = wb.getSheet(cellRef.getSheetName()).getRow(cellRef.getRow()).getCell(cellRef.getCol());
		name = wb.getName("TOTALCOST");
		assertNotNull(name);
		cellRef = new CellReference(name.getRefersToFormula());
		HSSFCell tccell = wb.getSheet(cellRef.getSheetName()).getRow(cellRef.getRow()).getCell(cellRef.getCol());
		evaluator.evaluateFormulaCell(uccell);
		evaluator.evaluateFormulaCell(ccell);
		evaluator.evaluateFormulaCell(tccell);
		assertEquals(NEW_PART_COST, uccell.getNumericCellValue(), 0);
		assertEquals(NEW_PART_COST*NEW_QUANT, ccell.getNumericCellValue(), 0);
		assertEquals(NEW_PART_COST*NEW_QUANT*MARKUP_COST_2, tccell.getNumericCellValue(), 0);
	}

