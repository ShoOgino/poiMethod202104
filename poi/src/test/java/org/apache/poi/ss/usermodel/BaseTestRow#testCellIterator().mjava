    /**
     * Test adding cells to a row in various places and see if we can find them again.
     */
    @Test
    void testCellIterator() throws IOException {
        Workbook wb = _testDataProvider.createWorkbook();
        Sheet sheet = wb.createSheet();
        Row row = sheet.createRow(0);

        // One cell at the beginning
        Cell cell1 = row.createCell(1);
        Iterator<Cell> it = row.cellIterator();
        assertTrue(it.hasNext());
        assertSame(cell1, it.next());
        assertFalse(it.hasNext());

        // Add another cell at the end
        Cell cell2 = row.createCell(99);
        it = row.cellIterator();
        assertTrue(it.hasNext());
        assertSame(cell1, it.next());
        assertTrue(it.hasNext());
        assertSame(cell2, it.next());

        // Add another cell at the beginning
        Cell cell3 = row.createCell(0);
        it = row.cellIterator();
        assertTrue(it.hasNext());
        assertSame(cell3, it.next());
        assertTrue(it.hasNext());
        assertSame(cell1, it.next());
        assertTrue(it.hasNext());
        assertSame(cell2, it.next());

        // Replace cell1
        Cell cell4 = row.createCell(1);
        it = row.cellIterator();
        assertTrue(it.hasNext());
        assertSame(cell3, it.next());
        assertTrue(it.hasNext());
        assertSame(cell4, it.next());
        assertTrue(it.hasNext());
        assertSame(cell2, it.next());
        assertFalse(it.hasNext());

        // Add another cell, specifying the cellType
        Cell cell5 = row.createCell(2, CellType.STRING);
        it = row.cellIterator();
        assertNotNull(cell5);
        assertTrue(it.hasNext());
        assertSame(cell3, it.next());
        assertTrue(it.hasNext());
        assertSame(cell4, it.next());
        assertTrue(it.hasNext());
        assertSame(cell5, it.next());
        assertTrue(it.hasNext());
        assertSame(cell2, it.next());
        assertEquals(CellType.STRING, cell5.getCellType());
        wb.close();
    }

