    /**
     * <p>Turns a codepage number into the equivalent character encoding's
     * name, in either Java NIO or Java Lang canonical naming.</p>
     *
     * @param codepage The codepage number
     * @param javaLangFormat Should Java Lang or Java NIO naming be used?
     *
     * @return The character encoding's name, in either Java Lang format 
     *  (eg Cp1251, ISO8859_5) or Java NIO format (eg windows-1252, ISO-8859-9)
     *  
     * @see <a href="http://docs.oracle.com/javase/6/docs/technotes/guides/intl/encoding.doc.html">Supported Encodings</a>
     *
     * @exception UnsupportedEncodingException if the specified codepage is
     * less than zero.
     */
    public static String codepageToEncoding(final int codepage, boolean javaLangFormat)
    throws UnsupportedEncodingException
    {
        if (codepage <= 0)
            throw new UnsupportedEncodingException("Codepage number may not be " + codepage);
        
        switch (codepage) {
            case CP_UTF16:
                return "UTF-16LE";
            case CP_UTF16_BE:
                return "UTF-16BE";
            case CP_UTF8:
                return "UTF-8";
            case CP_037:
                return "cp037";
            case CP_GBK:
                return "GBK";
            case CP_MS949:
                return "ms949";
            case CP_WINDOWS_1250:
                if (javaLangFormat)
                    return "Cp1250";
                else
                    return "windows-1250";
            case CP_WINDOWS_1251:
                if (javaLangFormat)
                    return "Cp1251";
                else
                    return "windows-1251";
            case CP_WINDOWS_1252:
            case CP_WINDOWS_1252_BIFF23:
                if (javaLangFormat)
                    return "Cp1252";
                else
                    return "windows-1252";
            case CP_WINDOWS_1253:
                if (javaLangFormat)
                    return "Cp1253";
                else
                    return "windows-1253";
            case CP_WINDOWS_1254:
                if (javaLangFormat)
                    return "Cp1254";
                else
                    return "windows-1254";
            case CP_WINDOWS_1255:
                if (javaLangFormat)
                    return "Cp1255";
                else
                    return "windows-1255";
            case CP_WINDOWS_1256:
                if (javaLangFormat)
                    return "Cp1255";
                else
                    return "windows-1256";
            case CP_WINDOWS_1257:
                if (javaLangFormat)
                    return "Cp1257";
                else
                    return "windows-1257";
            case CP_WINDOWS_1258:
                if (javaLangFormat)
                    return "Cp1258";
                else
                    return "windows-1258";
            case CP_JOHAB:
                return "johab";
            case CP_MAC_ROMAN:
            case CP_MAC_ROMAN_BIFF23:
                return "MacRoman";
            case CP_MAC_JAPAN:
                return "SJIS";
            case CP_MAC_CHINESE_TRADITIONAL:
                return "Big5";
            case CP_MAC_KOREAN:
                return "EUC-KR";
            case CP_MAC_ARABIC:
                return "MacArabic";
            case CP_MAC_HEBREW:
                return "MacHebrew";
            case CP_MAC_GREEK:
                return "MacGreek";
            case CP_MAC_CYRILLIC:
                return "MacCyrillic";
            case CP_MAC_CHINESE_SIMPLE:
                return "EUC_CN";
            case CP_MAC_ROMANIA:
                return "MacRomania";
            case CP_MAC_UKRAINE:
                return "MacUkraine";
            case CP_MAC_THAI:
                return "MacThai";
            case CP_MAC_CENTRAL_EUROPE:
                return "MacCentralEurope";
            case CP_MAC_ICELAND:
                  return "MacIceland";
            case CP_MAC_TURKISH:
                return "MacTurkish";
            case CP_MAC_CROATIAN:
                return "MacCroatian";
            case CP_US_ACSII:
            case CP_US_ASCII2:
                return "US-ASCII";
            case CP_KOI8_R:
                return "KOI8-R";
            case CP_ISO_8859_1:
                if (javaLangFormat)
                    return "ISO8859_1";
                else
                    return "ISO-8859-1";
            case CP_ISO_8859_2:
                if (javaLangFormat)
                    return "ISO8859_2";
                else
                    return "ISO-8859-2";
            case CP_ISO_8859_3:
                if (javaLangFormat)
                    return "ISO8859_3";
                else
                    return "ISO-8859-3";
            case CP_ISO_8859_4:
                if (javaLangFormat)
                    return "ISO8859_4";
                else
                    return "ISO-8859-4";
            case CP_ISO_8859_5:
                if (javaLangFormat)
                    return "ISO8859_5";
                else
                    return "ISO-8859-5";
            case CP_ISO_8859_6:
                if (javaLangFormat)
                    return "ISO8859_6";
                else
                    return "ISO-8859-6";
            case CP_ISO_8859_7:
                if (javaLangFormat)
                    return "ISO8859_7";
                else
                    return "ISO-8859-7";
            case CP_ISO_8859_8:
                if (javaLangFormat)
                    return "ISO8859_8";
                else
                    return "ISO-8859-8";
            case CP_ISO_8859_9:
                if (javaLangFormat)
                    return "ISO8859_9";
                else
                    return "ISO-8859-9";
            case CP_ISO_2022_JP1:
            case CP_ISO_2022_JP2:
            case CP_ISO_2022_JP3:
                return "ISO-2022-JP";
            case CP_ISO_2022_KR:
                return "ISO-2022-KR";
            case CP_EUC_JP:
                return "EUC-JP";
            case CP_EUC_KR:
                return "EUC-KR";
            case CP_GB2312:
                return "GB2312";
            case CP_GB18030:
                return "GB18030";
            case CP_SJIS:
                return "SJIS";
            default:
                return "cp" + codepage;
        }
    }

