    /**
     * Creates an instance and fills the fields based on the data in the given buffer.
     *
     * @param data   The buffer containing the Ole10Native record
     * @param offset The start offset of the record in the buffer
     * @throws Ole10NativeException on invalid or unexcepted data format
     */
    public Ole10Native(final byte[] data, final int offset) throws Ole10NativeException {
        LittleEndianByteArrayInputStream leis = new LittleEndianByteArrayInputStream(data, offset);

        totalSize = leis.readInt();
        leis.limit(totalSize + LittleEndianConsts.INT_SIZE);

        leis.mark(0);

        try {
            flags1 = leis.readShort();
            if (flags1 == 2) {
                leis.mark(0);
                // some files like equations don't have a valid filename,
                // but somehow encode the formula right away in the ole10 header
                boolean validFileName = !Character.isISOControl(leis.readByte());
                leis.reset();

                if (validFileName) {
                    readParsed(leis);
                } else {
                    readCompact(leis);
                }
            } else {
                leis.reset();
                readUnparsed(leis);
            }
        } catch (IOException e) {
            throw new Ole10NativeException("Invalid Ole10Native", e);
        }
    }

