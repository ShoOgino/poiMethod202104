    /**
     * Converts a string to a double using standard rules that Excel would use.<br>
     * Tolerates leading and trailing spaces, <p>
     * 
     * Doesn't support currency prefixes, commas, percentage signs or arithmetic operations strings.  
     *
     *  Some examples:<br>
     *  " 123 " -&gt; 123.0<br>
     *  ".123" -&gt; 0.123<br>
     *  "1E4" -&gt; 1000<br>
     *  "-123" -&gt; -123.0<br>
     *  These not supported yet:<br>
     *  " $ 1,000.00 " -&gt; 1000.0<br>
     *  "$1.25E4" -&gt; 12500.0<br>
     *  "5**2" -&gt; 500<br>
     *  "250%" -&gt; 2.5<br>
     *
     * @return <code>null</code> if the specified text cannot be parsed as a number
     */
    public static Double parseDouble(String pText) {

        if (fpPattern.matcher(pText).matches())
            try {
                return Double.parseDouble(pText);
            } catch (NumberFormatException e) {
                return null;
            }
        else {
            return null;
        }
        
    }

