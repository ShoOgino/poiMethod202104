    /**
     * Check if all columns in a matrix contain the same values.
     * Return true if the number of distinct values in each column is 1.
     *
     * @param matrix  column-oriented matrix. A Row matrix should be transposed to column .
     * @return  true if all columns contain the same value
     */
    private static boolean isAllColumnsSame(double[][] matrix){
        if(matrix.length == 0) return false;

        boolean[] cols = new boolean[matrix[0].length];
        for (int j = 0; j < matrix[0].length; j++) {
            double prev = Double.NaN;
            for (int i = 0; i < matrix.length; i++) {
                double v = matrix[i][j];
                if(i > 0 && v != prev) {
                    cols[j] = true;
                    break;
                }
                prev = v;
            }
        }
        boolean allEquals = true;
        for (boolean x : cols) {
            if(x) {
                allEquals = false;
                break;
            }
        }
        return allEquals;

    }

