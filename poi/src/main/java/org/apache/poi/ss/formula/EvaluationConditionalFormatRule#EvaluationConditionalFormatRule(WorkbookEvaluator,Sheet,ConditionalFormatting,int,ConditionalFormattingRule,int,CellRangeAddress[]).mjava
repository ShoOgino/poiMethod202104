    /**
     *
     * @param workbookEvaluator
     * @param sheet
     * @param formatting
     * @param formattingIndex for priority, zero based
     * @param rule
     * @param ruleIndex for priority, zero based, if this is an HSSF rule.  Unused for XSSF rules
     * @param regions could be read from formatting, but every call creates new objects in a new array.
     *                  this allows calling it once per formatting instance, and re-using the array.
     */
    public EvaluationConditionalFormatRule(WorkbookEvaluator workbookEvaluator, Sheet sheet, ConditionalFormatting formatting, int formattingIndex, ConditionalFormattingRule rule, int ruleIndex, CellRangeAddress[] regions) {
        super();
        this.workbookEvaluator = workbookEvaluator;
        this.sheet = sheet;
        this.formatting = formatting;
        this.rule = rule;
        this.formattingIndex = formattingIndex;
        this.ruleIndex = ruleIndex;

        this.priority = rule.getPriority();

        this.regions = regions;

        for (CellRangeAddress region : regions) {
            if (topLeftRegion == null) topLeftRegion = region;
            else if (region.getFirstColumn() < topLeftRegion.getFirstColumn()
                    || region.getFirstRow() < topLeftRegion.getFirstRow()) {
                topLeftRegion = region;
            }
        }
        formula1 = rule.getFormula1();
        formula2 = rule.getFormula2();

        text = rule.getText();
        lowerText = text == null ? null : text.toLowerCase(LocaleUtil.getUserLocale());

        numberFormat = rule.getNumberFormat();

        operator = OperatorEnum.values()[rule.getComparisonOperation()];
        type = rule.getConditionType();

//         Excel uses the stored text representation from the XML apparently, in tests done so far
        decimalTextFormat = new DecimalFormat("0", DecimalFormatSymbols.getInstance(Locale.ENGLISH));
        decimalTextFormat.setMaximumFractionDigits(340); // DecimalFormat.DOUBLE_FRACTION_DIGITS, which is default scoped
    }

