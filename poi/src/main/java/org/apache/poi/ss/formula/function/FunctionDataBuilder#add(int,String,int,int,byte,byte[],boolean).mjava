	public void add(int functionIndex, String functionName, int minParams, int maxParams,
			byte returnClassCode, byte[] parameterClassCodes, boolean hasFootnote) {
		FunctionMetadata fm = new FunctionMetadata(functionIndex, functionName, minParams, maxParams,
				returnClassCode, parameterClassCodes);

		Integer indexKey = Integer.valueOf(functionIndex);


		if(functionIndex > _maxFunctionIndex) {
			_maxFunctionIndex = functionIndex;
		}
		// allow function definitions to change only if both previous and the new items have footnotes
		FunctionMetadata prevFM;
		prevFM = _functionDataByName.get(functionName);
		if(prevFM != null) {
			if(!hasFootnote || !_mutatingFunctionIndexes.contains(indexKey)) {
				throw new RuntimeException("Multiple entries for function name '" + functionName + "'");
			}
			_functionDataByIndex.remove(Integer.valueOf(prevFM.getIndex()));
		}
		prevFM = _functionDataByIndex.get(indexKey);
		if(prevFM != null) {
			if(!hasFootnote || !_mutatingFunctionIndexes.contains(indexKey)) {
				throw new RuntimeException("Multiple entries for function index (" + functionIndex + ")");
			}
			_functionDataByName.remove(prevFM.getName());
		}
		if(hasFootnote) {
			_mutatingFunctionIndexes.add(indexKey);
		}
		_functionDataByIndex.put(indexKey, fm);
		_functionDataByName.put(functionName, fm);
	}

