    /**
     * This checks all applicable {@link ConditionalFormattingRule}s for the cell's sheet, 
     * in defined "priority" order, returning the matches if any.  This is a property currently
     * not exposed from <code>CTCfRule</code> in <code>XSSFConditionalFormattingRule</code>.  
     * <p>
     * Most cells will have zero or one applied rule, but it is possible to define multiple rules
     * that apply at the same time to the same cell, thus the List result.
     * <p>
     * Note that to properly apply conditional rules, care must be taken to offset the base 
     * formula by the relative position of the current cell, or the wrong value is checked.
     * This is handled by {@link WorkbookEvaluator#evaluate(String, CellReference, CellRangeAddressBase)}.
     * <p>
     * If the cell exists and is a formula cell, its cached value may be used for rule evaluation, so
     * make sure it is up to date.  If values have changed, it is best to call 
     * {@link FormulaEvaluator#evaluateFormulaCell(Cell)} or {@link FormulaEvaluator#evaluateAll()} first,
     * or the wrong conditional results may be returned. 
     * 
     * @param cell The cell to look for
     * @return Unmodifiable List of {@link EvaluationConditionalFormatRule}s that apply to the current cell value,
     *         in priority order, as evaluated by Excel (smallest priority # for XSSF, definition order for HSSF), 
     *         or null if none apply
     */
    public List<EvaluationConditionalFormatRule> getConditionalFormattingForCell(Cell cell) {
        return getConditionalFormattingForCell(getRef(cell));
    }

