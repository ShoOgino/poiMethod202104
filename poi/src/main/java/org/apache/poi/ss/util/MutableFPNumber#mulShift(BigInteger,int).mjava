	private void mulShift(BigInteger multiplicand, int multiplierShift) {
		_significand = _significand.multiply(multiplicand);
		_binaryExponent += multiplierShift;
		// check for too much precision
		int sc = (_significand.bitLength() - MIN_PRECISION) & 0xFFFFFFE0;
		// mask makes multiples of 32 which optimises BigInteger.shiftRight
		if (sc > 0) {
			// no need to round because we have at least 8 bits of extra precision
			_significand = _significand.shiftRight(sc);
			_binaryExponent += sc;
		}
	}

