    // Keep in sync with {@link RowShifter#removalNeeded}
    private boolean removalNeeded(CellRangeAddress merged, int startColumn, int endColumn, int n) {
        final int movedColumns = endColumn - startColumn + 1;

        // build a range of the columns that are overwritten, i.e. the target-area, but without
        // columns that are moved along
        final CellRangeAddress overwrite;
        if(n > 0) {
            // area is moved down => overwritten area is [endColumn + n - movedColumns, endColumn + n]
            final int firstCol = Math.max(endColumn + 1, endColumn + n - movedColumns);
            final int lastCol = endColumn + n;
            overwrite = new CellRangeAddress(0, 0, firstCol, lastCol);
        } else {
            // area is moved up => overwritten area is [startColumn + n, startColumn + n + movedColumns]
            final int firstCol = startColumn + n;
            final int lastCol = Math.min(startColumn - 1, startColumn + n + movedColumns);
            overwrite = new CellRangeAddress(0, 0, firstCol, lastCol);
        }

        // if the merged-region and the overwritten area intersect, we need to remove it
        return merged.intersects(overwrite);
    }

