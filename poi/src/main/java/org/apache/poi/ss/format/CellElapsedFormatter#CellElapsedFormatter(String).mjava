    /**
     * Creates a elapsed time formatter.
     *
     * @param pattern The pattern to parse.
     */
    public CellElapsedFormatter(String pattern) {
        super(pattern);

        specs = new ArrayList<>();

        StringBuffer desc = CellFormatPart.parseFormat(pattern,
                CellFormatType.ELAPSED, new ElapsedPartHandler());

        ListIterator<TimeSpec> it = specs.listIterator(specs.size());
        while (it.hasPrevious()) {
            TimeSpec spec = it.previous();
            desc.replace(spec.pos, spec.pos + spec.len, "%0" + spec.len + "d");
            if (spec.type != topmost.type) {
                spec.modBy = modFor(spec.type, spec.len);
            }
        }

        printfFmt = desc.toString();
    }

