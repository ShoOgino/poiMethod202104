    /**
     * Named ranges had the right reference, but
     * the wrong sheet name
     */
    @Test
    void bug45430() throws IOException {
        try (XSSFWorkbook wb = XSSFTestDataSamples.openSampleWorkbook("45430.xlsx")) {
            assertFalse(wb.isMacroEnabled());
            assertEquals(3, wb.getNumberOfNames());

            assertEquals(0, wb.getName("SheetAA1").getCTName().getLocalSheetId());
            assertFalse(wb.getName("SheetAA1").getCTName().isSetLocalSheetId());
            assertEquals("SheetA!$A$1", wb.getName("SheetAA1").getRefersToFormula());
            assertEquals("SheetA", wb.getName("SheetAA1").getSheetName());

            assertEquals(0, wb.getName("SheetBA1").getCTName().getLocalSheetId());
            assertFalse(wb.getName("SheetBA1").getCTName().isSetLocalSheetId());
            assertEquals("SheetB!$A$1", wb.getName("SheetBA1").getRefersToFormula());
            assertEquals("SheetB", wb.getName("SheetBA1").getSheetName());

            assertEquals(0, wb.getName("SheetCA1").getCTName().getLocalSheetId());
            assertFalse(wb.getName("SheetCA1").getCTName().isSetLocalSheetId());
            assertEquals("SheetC!$A$1", wb.getName("SheetCA1").getRefersToFormula());
            assertEquals("SheetC", wb.getName("SheetCA1").getSheetName());

            // Save and re-load, still there
            try (XSSFWorkbook nwb = XSSFTestDataSamples.writeOutAndReadBack(wb)) {
                assertEquals(3, nwb.getNumberOfNames());
                assertEquals("SheetA!$A$1", nwb.getName("SheetAA1").getRefersToFormula());
            }
        }
    }

