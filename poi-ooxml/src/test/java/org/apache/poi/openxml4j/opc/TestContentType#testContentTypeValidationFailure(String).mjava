    /**
     * Check rule M1.13 : Package implementers shall only create and only
     * recognize parts with a content type; format designers shall specify a
     * content type for each part included in the format. Content types for
     * package parts shall fit the definition and syntax for media types as
     * specified in RFC 2616, \u00A3.7.
     * <p>
     * Check rule M1.14: Content types shall not use linear white space either
     * between the type and subtype or between an attribute and its value.
     * Content types also shall not have leading or trailing white spaces.
     * Package implementers shall create only such content types and shall
     * require such content types when retrieving a part from a package; format
     * designers shall specify only such content types for inclusion in the
     * format.
     */
    @ParameterizedTest
    @ValueSource(strings = {"text/xml/app", "",
        "test", "text(xml/xml", "text)xml/xml", "text<xml/xml",
        "text>/xml", "text@/xml", "text,/xml", "text;/xml",
        "text:/xml", "text\\/xml", "t/ext/xml", "t\"ext/xml",
        "text[/xml", "text]/xml", "text?/xml", "tex=t/xml",
        "te{xt/xml", "tex}t/xml", "te xt/xml",
        "text\u0009/xml", "text xml", " text/xml "})
    void testContentTypeValidationFailure(String contentType) {
        assertThrows(InvalidFormatException.class, () -> new ContentType(contentType),
            "Must have fail for content type: '" + contentType + "' !");
    }

