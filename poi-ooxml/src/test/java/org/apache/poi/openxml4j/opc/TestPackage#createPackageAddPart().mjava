	/**
	 * Test package creation.
	 */
    @Test
	void createPackageAddPart() throws IOException, InvalidFormatException {
		File targetFile = getOutputFile("TestCreatePackageTMP.docx");

		File expectedFile = getSampleFile("TestCreatePackageOUTPUT.docx");

        // Zap the target file, in case of an earlier run
        if(targetFile.exists()) {
			assertTrue(targetFile.delete());
		}

        // Create a package
        OPCPackage pkg = OPCPackage.create(targetFile);
        PackagePartName corePartName = createPartName("/word/document.xml");

        pkg.addRelationship(corePartName, TargetMode.INTERNAL,
                PackageRelationshipTypes.CORE_DOCUMENT, "rId1");

        PackagePart corePart = pkg.createPart(corePartName, XWPFRelation.DOCUMENT.getContentType());

        Document doc = DocumentHelper.createDocument();
        Element elDocument = doc.createElementNS(NS_OOXML_WP_MAIN, "w:document");
        doc.appendChild(elDocument);
        Element elBody = doc.createElementNS(NS_OOXML_WP_MAIN, "w:body");
        elDocument.appendChild(elBody);
        Element elParagraph = doc.createElementNS(NS_OOXML_WP_MAIN, "w:p");
        elBody.appendChild(elParagraph);
        Element elRun = doc.createElementNS(NS_OOXML_WP_MAIN, "w:r");
        elParagraph.appendChild(elRun);
        Element elText = doc.createElementNS(NS_OOXML_WP_MAIN, "w:t");
        elRun.appendChild(elText);
        elText.setTextContent("Hello Open XML !");

        StreamHelper.saveXmlInStream(doc, corePart.getOutputStream());
        pkg.close();

        ZipFileAssert.assertEquals(expectedFile, targetFile);
        assertTrue(targetFile.delete());
	}

