    @Test
    void testDefaultProperties() throws IOException {
        try (XMLSlideShow ppt = XSLFTestDataSamples.openSampleDocument("shapes.pptx")) {
            XSLFSlide slide6 = ppt.getSlides().get(5);
            List<XSLFShape> shapes = slide6.getShapes();
            for (XSLFShape xs : shapes) {
                XSLFSimpleShape s = (XSLFSimpleShape) xs;
                // all shapes have a theme color="accent1"
                assertEquals("accent1", s.getSpStyle().getFillRef().getSchemeClr().getVal().toString());
                assertEquals(2.0, s.getLineWidth(), 0);
                assertEquals(LineCap.FLAT, s.getLineCap());
                assertEquals(new Color(79, 129, 189), s.getLineColor());
            }

            XSLFSimpleShape s0 = (XSLFSimpleShape) shapes.get(0);
            // fill is not set
            assertNull(getSpPr(s0).getSolidFill());
            //assertEquals(slide6.getTheme().getColor("accent1").getColor(), s0.getFillColor());
            assertEquals(new Color(79, 129, 189), s0.getFillColor());

            // lighter 80%
            XSLFSimpleShape s1 = (XSLFSimpleShape) shapes.get(1);
            CTSchemeColor ref1 = getSpPr(s1).getSolidFill().getSchemeClr();
            assertEquals(1, ref1.sizeOfLumModArray());
            assertEquals(1, ref1.sizeOfLumOffArray());
            assertEquals(20000, ref1.getLumModArray(0).getVal());
            assertEquals(80000, ref1.getLumOffArray(0).getVal());
            assertEquals("accent1", ref1.getVal().toString());
            assertEquals(new Color(220, 230, 242), s1.getFillColor());

            // lighter 60%
            XSLFSimpleShape s2 = (XSLFSimpleShape) shapes.get(2);
            CTSchemeColor ref2 = getSpPr(s2).getSolidFill().getSchemeClr();
            assertEquals(1, ref2.sizeOfLumModArray());
            assertEquals(1, ref2.sizeOfLumOffArray());
            assertEquals(40000, ref2.getLumModArray(0).getVal());
            assertEquals(60000, ref2.getLumOffArray(0).getVal());
            assertEquals("accent1", ref2.getVal().toString());
            assertEquals(new Color(185, 205, 229), s2.getFillColor());

            // lighter 40%
            XSLFSimpleShape s3 = (XSLFSimpleShape) shapes.get(3);
            CTSchemeColor ref3 = getSpPr(s3).getSolidFill().getSchemeClr();
            assertEquals(1, ref3.sizeOfLumModArray());
            assertEquals(1, ref3.sizeOfLumOffArray());
            assertEquals(60000, ref3.getLumModArray(0).getVal());
            assertEquals(40000, ref3.getLumOffArray(0).getVal());
            assertEquals("accent1", ref3.getVal().toString());
            assertEquals(new Color(149, 179, 215), s3.getFillColor());

            // darker 25%
            XSLFSimpleShape s4 = (XSLFSimpleShape) shapes.get(4);
            CTSchemeColor ref4 = getSpPr(s4).getSolidFill().getSchemeClr();
            assertEquals(1, ref4.sizeOfLumModArray());
            assertEquals(0, ref4.sizeOfLumOffArray());
            assertEquals(75000, ref4.getLumModArray(0).getVal());
            assertEquals("accent1", ref3.getVal().toString());
            assertEquals(new Color(55, 96, 146), s4.getFillColor());

            XSLFSimpleShape s5 = (XSLFSimpleShape) shapes.get(5);
            CTSchemeColor ref5 = getSpPr(s5).getSolidFill().getSchemeClr();
            assertEquals(1, ref5.sizeOfLumModArray());
            assertEquals(0, ref5.sizeOfLumOffArray());
            assertEquals(50000, ref5.getLumModArray(0).getVal());
            assertEquals("accent1", ref5.getVal().toString());
            assertEquals(new Color(37, 64, 97), s5.getFillColor());
        }
    }

