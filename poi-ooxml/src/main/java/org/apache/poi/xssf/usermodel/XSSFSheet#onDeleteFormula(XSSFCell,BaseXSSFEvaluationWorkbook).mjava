    /**
     *  when a cell with a 'master' shared formula is removed,  the next cell in the range becomes the master
     * @param cell The cell that is removed
     * @param evalWb BaseXSSFEvaluationWorkbook in use, if one exists
     */
    protected void onDeleteFormula(XSSFCell cell, BaseXSSFEvaluationWorkbook evalWb){

        CTCellFormula f = cell.getCTCell().getF();
        if (f != null && f.getT() == STCellFormulaType.SHARED && f.isSetRef() && f.getStringValue() != null) {

            CellRangeAddress ref = CellRangeAddress.valueOf(f.getRef());
            if(ref.getNumberOfCells() > 1){
                DONE:
                for(int i = cell.getRowIndex(); i <= ref.getLastRow(); i++){
                    XSSFRow row = getRow(i);
                    if(row != null) for(int j = cell.getColumnIndex(); j <= ref.getLastColumn(); j++){
                        XSSFCell nextCell = row.getCell(j);
                        if(nextCell != null && nextCell != cell && nextCell.getCellType() == CellType.FORMULA){
                            CTCellFormula nextF = nextCell.getCTCell().getF();
                            nextF.setStringValue(nextCell.getCellFormula(evalWb));
                            CellRangeAddress nextRef = new CellRangeAddress(
                                    nextCell.getRowIndex(), ref.getLastRow(),
                                    nextCell.getColumnIndex(), ref.getLastColumn());
                            nextF.setRef(nextRef.formatAsString());

                            sharedFormulas.put(Math.toIntExact(nextF.getSi()), nextF);
                            break DONE;
                        }
                    }
                }
            }

        }
    }

